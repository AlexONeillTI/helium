name: Publish

on:
  push:
    branches:
      - auto-publish-v2
    paths-ignore:
      - '**/package.json'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        HUSKY: 0
    
    steps:
    - uses: actions/checkout@v2
      with: 
        fetch-depth: 0
        
    - uses: actions/setup-node@v2
      with:
        node-version: '14.x'
        registry-url: 'https://registry.npmjs.org'
        scope: '@thoughtindustries'

    - name: Update npm
      run: npm i -g npm@8.4.0

    - name: Verify Registry Authentication
      run: 
        npm whoami

    - name: Install Packages
      run: npm ci

    # actions bot email: https://github.community/t/github-actions-bot-email-address/17204/6
    # lerna will mod package metadata and push to remote, so git user is needed
    - name: Configure CI Git User
      run: |
        git config user.name "ti-bot"
        git config user.email "sre@thoughtindustries.com"

    - name: Check whether template-base has changed
      id: template-base-changed
      uses: tj-actions/changed-files@v18
      with:
        files: |
          **/tooling/template-base
    
    - name: lerna version with create-helium-app-update
      if: steps.template-base-changed.outputs.any_changed == 'true'
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        lerna version --yes --force-publish=create-helium-app --message "chore: release new versions" --conventional-commits

    - name: lerna version without create-helium-app-update
      if: steps.template-base-changed.outputs.any_changed == 'false'
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        lerna version --yes --message "chore: release new versions" --conventional-commits
    
    # - name: Publish
    #   run: |
    #     lerna publish from-package --yes --no-verify-access