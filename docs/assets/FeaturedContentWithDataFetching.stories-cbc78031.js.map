{"version":3,"file":"FeaturedContentWithDataFetching.stories-cbc78031.js","sources":["../../packages/featured-content/stories/FeaturedContentWithDataFetching.stories.tsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { hydrateContent, GlobalTypes, CatalogDocument, useCatalogQuery, ContentsDocument, useContentsQuery, UserRecentContentDocument, useUserRecentContentQuery, AddResourceToQueueDocument, useAddResourceToQueueMutation } from '@thoughtindustries/content';\nimport { FeaturedContent, ContentTileStandardLayout, FeaturedContentContentItem, FeaturedContentHydratedContentItem, FeaturedContentProps } from '../src';\nimport { StoryObj, Meta } from '@storybook/react';\nconst meta: Meta<FeaturedContentProps> = {\n  component: FeaturedContent,\n  title: 'Packages/Featured Content/Data Fetching'\n};\nexport default meta;\ntype FeaturedContentStory = StoryObj<FeaturedContentProps>;\nconst headerOptions = {\n  title: 'Feature Content Header'\n};\nconst handleClick = (): void => {\n  // do something\n};\nconst mockCatalogQueryVariables = {\n  query: 'test query',\n  querySignature: 'test query signature',\n  querySort: 'relevance'\n};\nconst mockQueryContentsQueryVariables = {\n  ids: ['item-id']\n};\nconst mockUserRecentContentQueryVariables = {\n  limit: 2\n};\nconst mockContentItemFactory = (isLearningPath = false) => ({\n  __typename: 'Content',\n  id: 'item-id',\n  asset: 'https://d36ai2hkxl16us.cloudfront.net/thoughtindustries/image/upload/a_exif,c_fill,w_800/v1416438573/placeholder_kcjvxm.jpg',\n  authors: ['Author A', 'Author B'],\n  availabilityStatus: 'available',\n  canAddToQueue: true,\n  contentTypeLabel: 'Guide',\n  courseGracePeriodEnded: false,\n  coursePresold: false,\n  courseStartDate: '2016-11-07T05:51:02.856Z',\n  description: 'Test description',\n  rating: 78,\n  slug: 'test-course-slug',\n  title: 'Test title',\n  kind: isLearningPath ? GlobalTypes.ContentKind.LearningPath : null,\n  currentUserUnmetCoursePrerequisites: [],\n  currentUserUnmetLearningPathPrerequisites: [],\n  priceInCents: null,\n  suggestedRetailPriceInCents: null,\n  source: null,\n  ribbon: null,\n  displayCourse: 'display-course-id',\n  currentUserMayReschedule: false,\n  hasChildren: false,\n  hideCourseDescription: false,\n  isActive: true,\n  waitlistingEnabled: false,\n  waitlistingTriggered: false\n});\nconst mockApolloResults = {\n  catalogQuery: {\n    request: {\n      query: CatalogDocument,\n      variables: {\n        ...mockCatalogQueryVariables\n      }\n    },\n    result: {\n      data: {\n        CatalogQuery: {\n          contentItems: [mockContentItemFactory()]\n        }\n      }\n    }\n  },\n  queryContentsQuery: {\n    request: {\n      query: ContentsDocument,\n      variables: {\n        ...mockQueryContentsQueryVariables\n      }\n    },\n    result: {\n      data: {\n        QueryContents: [mockContentItemFactory(true)]\n      }\n    }\n  },\n  addCourseToQueueMutation: {\n    request: {\n      query: AddResourceToQueueDocument,\n      variables: {\n        resourceId: 'display-course-id'\n      }\n    },\n    result: {\n      data: {\n        AddResourceToQueue: true\n      }\n    }\n  },\n  addLearningPathToQueueMutation: {\n    request: {\n      query: AddResourceToQueueDocument,\n      variables: {\n        resourceId: 'test-course-slug',\n        resourceType: GlobalTypes.ContentKind.LearningPath\n      }\n    },\n    result: {\n      data: {\n        AddResourceToQueue: true\n      }\n    }\n  },\n  userRecentContentQuery: {\n    request: {\n      query: UserRecentContentDocument,\n      variables: {\n        ...mockUserRecentContentQueryVariables\n      }\n    },\n    result: {\n      data: {\n        UserRecentContent: [mockContentItemFactory()]\n      }\n    }\n  }\n};\n// use the options to bypass mocking full payload of responses\nconst mockedApolloProviderOptions = {\n  watchQuery: {\n    fetchPolicy: ('no-cache' as const)\n  },\n  query: {\n    fetchPolicy: ('no-cache' as const)\n  }\n};\nconst apolloBaseParams = {\n  addTypename: false,\n  defaultOptions: mockedApolloProviderOptions\n};\nconst CatalogQueryTemplate = () => {\n  const {\n    i18n\n  } = useTranslation();\n  const [addResourceToQueue] = useAddResourceToQueueMutation();\n  const handleAddedToQueue = (item: FeaturedContentContentItem): Promise<void> => {\n    const {\n      displayCourse\n    } = (item as FeaturedContentHydratedContentItem);\n    return displayCourse ? addResourceToQueue({\n      variables: {\n        resourceId: displayCourse\n      }\n    }).then() : Promise.resolve();\n  };\n  const {\n    data,\n    loading,\n    error\n  } = useCatalogQuery({\n    variables: {\n      ...mockCatalogQueryVariables\n    }\n  });\n  let content;\n  if (loading) {\n    content = <p>Loading content</p>;\n  }\n  if (error) {\n    content = <p>Error loading content</p>;\n  }\n  if (data?.CatalogQuery.contentItems) {\n    content = data.CatalogQuery.contentItems.map((item, index) => {\n      const hydratedItem = hydrateContent(i18n, item);\n      return <ContentTileStandardLayout.Item key={`item-${index}`} {...hydratedItem} />;\n    });\n  }\n  return <FeaturedContent>\n      <ContentTileStandardLayout headerOptions={headerOptions} desktopColumnCount={3} onAddedToQueue={handleAddedToQueue} onClick={handleClick}>\n        {content}\n      </ContentTileStandardLayout>\n    </FeaturedContent>;\n};\nexport const WithCatalogQuery: FeaturedContentStory = {\n  render: () => <CatalogQueryTemplate />,\n  parameters: {\n    apolloClient: {\n      ...apolloBaseParams,\n      mocks: [mockApolloResults.catalogQuery, mockApolloResults.addCourseToQueueMutation]\n    }\n  }\n};\nconst QueryContentsQueryTemplate = () => {\n  const {\n    i18n\n  } = useTranslation();\n  const [addResourceToQueue] = useAddResourceToQueueMutation();\n  const handleAddedToQueue = (item: FeaturedContentContentItem): Promise<void> => {\n    const {\n      slug,\n      kind\n    } = (item as FeaturedContentHydratedContentItem);\n    return slug ? addResourceToQueue({\n      variables: {\n        resourceType: kind,\n        resourceId: slug\n      }\n    }).then() : Promise.resolve();\n  };\n  const {\n    data,\n    loading,\n    error\n  } = useContentsQuery({\n    variables: {\n      ...mockQueryContentsQueryVariables\n    }\n  });\n  let content;\n  if (loading) {\n    content = <p>Loading content</p>;\n  }\n  if (error) {\n    content = <p>Error loading content</p>;\n  }\n  if (data) {\n    content = data.QueryContents.map((item, index) => {\n      const hydratedItem = hydrateContent(i18n, item);\n      return <ContentTileStandardLayout.Item key={`item-${index}`} {...hydratedItem} />;\n    });\n  }\n  return <FeaturedContent>\n      <ContentTileStandardLayout headerOptions={headerOptions} desktopColumnCount={3} onAddedToQueue={handleAddedToQueue} onClick={handleClick}>\n        {content}\n      </ContentTileStandardLayout>\n    </FeaturedContent>;\n};\nexport const WithQueryContentsQuery: FeaturedContentStory = {\n  render: () => <QueryContentsQueryTemplate />,\n  parameters: {\n    apolloClient: {\n      ...apolloBaseParams,\n      mocks: [mockApolloResults.queryContentsQuery, mockApolloResults.addLearningPathToQueueMutation]\n    }\n  }\n};\nconst UserRecentContentQueryTemplate = () => {\n  const {\n    i18n\n  } = useTranslation();\n  const {\n    data,\n    loading,\n    error\n  } = useUserRecentContentQuery({\n    variables: {\n      ...mockUserRecentContentQueryVariables\n    }\n  });\n  const handleAddedToQueue = (): Promise<void> => {\n    return Promise.resolve();\n  };\n  let content;\n  if (loading) {\n    content = <p>Loading content</p>;\n  }\n  if (error) {\n    content = <p>Error loading content</p>;\n  }\n  if (data) {\n    content = data.UserRecentContent.map((item, index) => {\n      const hydratedItem = hydrateContent(i18n, item);\n      return <ContentTileStandardLayout.Item key={`item-${index}`} {...hydratedItem} />;\n    });\n  }\n  return <FeaturedContent>\n      <ContentTileStandardLayout headerOptions={headerOptions} desktopColumnCount={3} onAddedToQueue={handleAddedToQueue} onClick={handleClick}>\n        {content}\n      </ContentTileStandardLayout>\n    </FeaturedContent>;\n};\nexport const WithUserRecentContentQuery: FeaturedContentStory = {\n  render: () => <UserRecentContentQueryTemplate />,\n  parameters: {\n    apolloClient: {\n      ...apolloBaseParams,\n      mocks: [mockApolloResults.userRecentContentQuery]\n    }\n  }\n};\nWithCatalogQuery.parameters = {\n  ...WithCatalogQuery.parameters,\n  docs: {\n    ...WithCatalogQuery.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: () => <CatalogQueryTemplate />,\\n  parameters: {\\n    apolloClient: {\\n      ...apolloBaseParams,\\n      mocks: [mockApolloResults.catalogQuery, mockApolloResults.addCourseToQueueMutation]\\n    }\\n  }\\n}\",\n      ...WithCatalogQuery.parameters?.docs?.source\n    }\n  }\n};\nWithQueryContentsQuery.parameters = {\n  ...WithQueryContentsQuery.parameters,\n  docs: {\n    ...WithQueryContentsQuery.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: () => <QueryContentsQueryTemplate />,\\n  parameters: {\\n    apolloClient: {\\n      ...apolloBaseParams,\\n      mocks: [mockApolloResults.queryContentsQuery, mockApolloResults.addLearningPathToQueueMutation]\\n    }\\n  }\\n}\",\n      ...WithQueryContentsQuery.parameters?.docs?.source\n    }\n  }\n};\nWithUserRecentContentQuery.parameters = {\n  ...WithUserRecentContentQuery.parameters,\n  docs: {\n    ...WithUserRecentContentQuery.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: () => <UserRecentContentQueryTemplate />,\\n  parameters: {\\n    apolloClient: {\\n      ...apolloBaseParams,\\n      mocks: [mockApolloResults.userRecentContentQuery]\\n    }\\n  }\\n}\",\n      ...WithUserRecentContentQuery.parameters?.docs?.source\n    }\n  }\n};"],"names":["meta","FeaturedContent","headerOptions","handleClick","mockCatalogQueryVariables","mockQueryContentsQueryVariables","mockUserRecentContentQueryVariables","mockContentItemFactory","isLearningPath","GlobalTypes.ContentKind","mockApolloResults","CatalogDocument","ContentsDocument","AddResourceToQueueDocument","UserRecentContentDocument","mockedApolloProviderOptions","apolloBaseParams","CatalogQueryTemplate","i18n","useTranslation","addResourceToQueue","useAddResourceToQueueMutation","handleAddedToQueue","item","displayCourse","data","loading","error","useCatalogQuery","content","jsx","index","hydratedItem","hydrateContent","ContentTileStandardLayout","WithCatalogQuery","QueryContentsQueryTemplate","slug","kind","useContentsQuery","WithQueryContentsQuery","UserRecentContentQueryTemplate","useUserRecentContentQuery","WithUserRecentContentQuery","_a","_c","_b"],"mappings":"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"}