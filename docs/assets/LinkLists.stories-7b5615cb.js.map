{"version":3,"file":"LinkLists.stories-7b5615cb.js","sources":["../../packages/link-lists/src/link-lists.tsx","../../packages/link-lists/src/link-list.tsx"],"sourcesContent":["import React from 'react';\nimport { Header } from '@thoughtindustries/header';\nimport { LinkListsProps } from './types';\n\nconst LinkLists = (props: LinkListsProps): JSX.Element => {\n  const { title, alternateTitleDisplay, children } = props;\n\n  return (\n    <div className=\"w-auto -ml-4 -mr-4 mt-0 mb-0 max-w-none\">\n      <div className=\"w-full relative pl-4 pr-4 float-left\">\n        {title && <Header title={title} alternateTitleDisplay={alternateTitleDisplay} />}\n        <ul className=\"grid grid-cols-2 md:grid-cols-3 gap-x-8\">{children}</ul>\n      </div>\n    </div>\n  );\n};\n\nLinkLists.displayName = 'LinkLists';\n\nexport default LinkLists;\n","import React, {\n  Children,\n  cloneElement,\n  createContext,\n  useContext,\n  useMemo,\n  useState,\n  useCallback\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LinkListContextType, LinkListProps, LinkListLinkProps } from './types';\n\nconst LinkListContext = createContext<LinkListContextType | undefined>(undefined);\n\nfunction useLinkListContext() {\n  const context = useContext(LinkListContext);\n  if (!context) {\n    throw new Error('No context found for LinkList');\n  }\n  return context;\n}\n\nconst Icon = (): JSX.Element => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"leading-none text-xs border border-solid border-gray-300 pr-0 inline-block\"\n    width=\"15\"\n    height=\"15\"\n    aria-label=\"expand\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n\nconst LinkList = ({ children, key, label, displayCutoff }: LinkListProps): JSX.Element => {\n  const totalItems = Children.count(children);\n  const isLimited = displayCutoff !== undefined && totalItems > displayCutoff;\n  const [expanded, setExpanded] = useState<boolean>(!isLimited);\n  const { t } = useTranslation();\n  const onExpand = useCallback(() => {\n    setExpanded(true);\n  }, []);\n  const value = useMemo(\n    () => ({\n      expanded,\n      displayCutoff\n    }),\n    [displayCutoff, expanded]\n  );\n\n  return (\n    <LinkListContext.Provider value={value}>\n      <li key={key} className=\"mb-4\">\n        <div className=\"border-r\">\n          <h4 className=\"text-sm font-bold\">{label}</h4>\n          <ul className=\"m-0 p-0 list-none\">\n            {Children.map(children, (child, index) => {\n              return cloneElement(child, { index });\n            })}\n          </ul>\n          {!expanded && (\n            <button\n              className=\"border-0 text-link cursor-pointer inline-block font-normal text-xs leading-normal p-0 relative m-0 text-left no-underline shadow-none h-auto font-primary hover:text-link-hover focus:outline-blue focus:shadow\"\n              onClick={onExpand}\n            >\n              <Icon />\n              <span className=\"ml-1\">{t('more')}</span>\n            </button>\n          )}\n        </div>\n      </li>\n    </LinkListContext.Provider>\n  );\n};\n\nconst Link = ({\n  key,\n  index,\n  linkOpenInNewTab,\n  children,\n  ...restProps\n}: LinkListLinkProps): JSX.Element | null => {\n  const { expanded, displayCutoff } = useLinkListContext();\n\n  if (!expanded && displayCutoff !== undefined && index !== undefined && index >= displayCutoff) {\n    return null;\n  }\n\n  const linkProps: { className: string; href: string; target?: string } = {\n    ...restProps,\n    className: 'text-sm text-link underline'\n  };\n  if (linkOpenInNewTab) {\n    linkProps.target = '_blank';\n  }\n\n  return (\n    <li key={key} className=\"pl-5 before:content-['\\2022\\20']\">\n      <a {...linkProps}>{children}</a>\n    </li>\n  );\n};\n\nLinkList.displayName = 'LinkList';\nLinkList.Link = Link;\n\nexport default LinkList;\n"],"names":["LinkLists","props","title","alternateTitleDisplay","children","jsx","jsxs","Header","LinkListContext","createContext","useLinkListContext","context","useContext","Icon","LinkList","key","label","displayCutoff","totalItems","Children","isLimited","expanded","setExpanded","useState","t","useTranslation","onExpand","useCallback","value","useMemo","child","index","cloneElement","Link","linkOpenInNewTab","restProps","linkProps"],"mappings":"wNAIA,MAAAA,EAAAC,GAAA,CACE,KAAA,CAAA,MAAAC,EAAA,sBAAAC,EAAA,SAAAC,CAAA,EAAAH,EAEA,OAAAI,EAAA,MAAA,CAAA,UAAA,0CAAA,SAAAC,EAAA,MAAA,CAAA,UAAA,uCAAA,SAAA,CAGOJ,GAAAG,EAAAE,EAAA,CAAA,MAAAL,EAAA,sBAAAC,CAAA,CAAA,EAA6EE,EAAA,KAAA,CAAA,UAAA,0CAAA,SAAAD,CAAA,CAAA,CACZ,CAAA,CAAA,CAAA,CAAA,CAI1E,EAEAJ,EAAA,YAAA,ofCLA,MAAAQ,EAAAC,EAAAA,cAAA,MAAA,EAEA,SAAAC,GAAA,CACE,MAAAC,EAAAC,aAAAJ,CAAA,EACA,GAAA,CAAAG,EACE,MAAA,IAAA,MAAA,+BAAA,EAEF,OAAAA,CACF,CAEA,MAAAE,EAAA,IAAAR,EACE,MAAC,CAAA,MAAA,6BACO,UAAA,6EACI,MAAA,KACJ,OAAA,KACC,aAAA,SACI,QAAA,YACH,KAAA,eACH,SAAAA,EAEL,OAAC,CAAA,SAAA,UACU,EAAA,wFACP,SAAA,SACO,CAAA,CACX,CACF,EAGFS,EAAA,CAAA,CAAA,SAAAV,EAAA,IAAAW,EAAA,MAAAC,EAAA,cAAAC,CAAA,IAAA,CACE,MAAAC,EAAAC,EAAAA,SAAA,MAAAf,CAAA,EACAgB,EAAAH,IAAA,QAAAC,EAAAD,EACA,CAAAI,EAAAC,CAAA,EAAAC,EAAAA,SAAA,CAAAH,CAAA,EACA,CAAA,EAAAI,GAAAC,IACAC,EAAAC,EAAAA,YAAA,IAAA,CACEL,EAAA,EAAA,CAAgB,EAAA,CAAA,CAAA,EAElBM,EAAAC,EAAA,QAAc,KAAA,CACL,SAAAR,EACL,cAAAJ,CACA,GACF,CAAAA,EAAAI,CAAA,CACwB,EAG1B,OAAAhB,EAAAG,EAAA,SAAA,CAAA,MAAAoB,EAAA,SAAAvB,EAAA,KAAA,CAAA,UAAA,OAAA,SAAAC,EAAA,MAAA,CAAA,UAAA,WAAA,SAAA,CAIQD,EAAA,KAAA,CAAA,UAAA,oBAAA,SAAAW,EAAA,EAAyCX,EAAA,KAAA,CAAA,UAAA,oBAAA,SAAAc,EAAA,SAAA,IAAAf,EAAA,CAAA0B,EAAAC,IAGrCC,eAAAF,EAAA,CAAA,MAAAC,CAAA,CAAA,CAAoC,EAAA,EAExC,CAAAV,GAAAf,EAEE,SAAC,CAAA,UAAA,kNACW,QAAAoB,EACD,SAAA,CAETrB,EAAAQ,EAAA,EAAA,EAAMR,EAAA,OAAA,CAAA,UAAA,OAAA,SAAAmB,EAAA,MAAA,EAAA,CAC4B,CAAA,CAAA,CACpC,CAAA,CAAA,CAAA,EAAAT,CAAA,CAAA,CAAA,CAMZ,EAEAkB,EAAA,CAAA,CAAc,IAAAlB,EACZ,MAAAgB,EACA,iBAAAG,EACA,SAAA9B,EACA,GAAA+B,CAEF,IAAA,CACE,KAAA,CAAA,SAAAd,EAAA,cAAAJ,CAAA,EAAAP,EAAA,EAEA,GAAA,CAAAW,GAAAJ,IAAA,QAAAc,IAAA,QAAAA,GAAAd,EACE,OAAA,KAGF,MAAAmB,EAAA,CAAwE,GAAAD,EACnE,UAAA,6BACQ,EAEb,OAAAD,IACEE,EAAA,OAAA,UAGF/B,EAAA,KAAA,CAAA,UAAA,qCAAA,SAAAA,EAAA,IAAA,CAAA,GAAA+B,EAAA,SAAAhC,CAAA,CAAA,CAAA,EAAAW,CAAA,CAKF,EAEAD,EAAA,YAAA,WACAA,EAAA,KAAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}