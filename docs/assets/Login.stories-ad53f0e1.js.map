{"version":3,"file":"Login.stories-ad53f0e1.js","sources":["../../packages/user/stories/Login.stories.tsx"],"sourcesContent":["import { StoryObj, Meta } from '@storybook/react';\nimport React from 'react';\nimport { ApolloError } from '@apollo/client';\nimport { GraphQLError } from 'graphql';\nimport { TermsAndConditionsDocument, Login, LoginDocument, ValidationProps } from '../src';\nconst meta: Meta<ValidationProps> = {\n  component: Login,\n  title: 'Packages/User/Login'\n};\nexport default meta;\ntype Login = StoryObj<ValidationProps>;\nconst mockTermsAndConditionsResults = (globalTerms: string) => ({\n  request: {\n    query: TermsAndConditionsDocument\n  },\n  result: {\n    data: {\n      TermsAndConditions: {\n        globalTerms\n      }\n    }\n  }\n});\nconst mockLoginResults = (email: string, password: string, message: string) => ({\n  request: {\n    query: LoginDocument,\n    variables: {\n      email,\n      password\n    }\n  },\n  error: new ApolloError({\n    graphQLErrors: [new GraphQLError(message)]\n  })\n});\nconst mockApolloResults = [mockTermsAndConditionsResults('<p>Test Global Terms </p>'), mockLoginResults('', '', '401 Unauthorized'), mockLoginResults('locked@test.com', 'locked4ever', '423 Locked'), mockLoginResults('throttled@test.com', 'try2hard', 'User Throttled'), mockLoginResults('password@test.com', 'stalepassword', 'Password reset required'), mockLoginResults('email@test.com', 'verifyemail', 'Email verification required')];\nexport const LoginForm: Login = {\n  render: () => <Login />,\n  parameters: {\n    apolloClient: {\n      mocks: mockApolloResults\n    }\n  }\n};\nLoginForm.parameters = {\n  ...LoginForm.parameters,\n  docs: {\n    ...LoginForm.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: () => <Login />,\\n  parameters: {\\n    apolloClient: {\\n      mocks: mockApolloResults\\n    }\\n  }\\n}\",\n      ...LoginForm.parameters?.docs?.source\n    }\n  }\n};"],"names":["meta","Login","mockTermsAndConditionsResults","globalTerms","TermsAndConditionsDocument","mockLoginResults","email","password","message","LoginDocument","ApolloError","GraphQLError","mockApolloResults","LoginForm","jsx","_a","_c","_b"],"mappings":"ibAKA,MAAMA,EAA8B,CAClC,UAAWC,EACX,MAAO,qBACT,EAGMC,EAAiCC,IAAyB,CAC9D,QAAS,CACP,MAAOC,CACT,EACA,OAAQ,CACN,KAAM,CACJ,mBAAoB,CAClB,YAAAD,CACF,CACF,CACF,CACF,GACME,EAAmB,CAACC,EAAeC,EAAkBC,KAAqB,CAC9E,QAAS,CACP,MAAOC,EACP,UAAW,CACT,MAAAH,EACA,SAAAC,CACF,CACF,EACA,MAAO,IAAIG,EAAY,CACrB,cAAe,CAAC,IAAIC,EAAaH,CAAO,CAAC,CAAA,CAC1C,CACH,GACMI,EAAoB,CAACV,EAA8B,2BAA2B,EAAGG,EAAiB,GAAI,GAAI,kBAAkB,EAAGA,EAAiB,kBAAmB,cAAe,YAAY,EAAGA,EAAiB,qBAAsB,WAAY,gBAAgB,EAAGA,EAAiB,oBAAqB,gBAAiB,yBAAyB,EAAGA,EAAiB,iBAAkB,cAAe,6BAA6B,CAAC,EACnaQ,EAAmB,CAC9B,OAAQ,IAAMC,EAACb,EAAM,EAAA,EACrB,WAAY,CACV,aAAc,CACZ,MAAOW,CACT,CACF,CACF,YACAC,EAAU,WAAa,CACrB,GAAGA,EAAU,WACb,KAAM,CACJ,IAAGE,EAAAF,EAAU,aAAV,YAAAE,EAAsB,KACzB,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAJ,EAAU,aAAV,YAAAI,EAAsB,OAAtB,YAAAD,EAA4B,MACjC,CACF,CACF"}