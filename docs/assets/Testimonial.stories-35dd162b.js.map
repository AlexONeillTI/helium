{"version":3,"file":"Testimonial.stories-35dd162b.js","sources":["../../packages/testimonial/src/icons.tsx","../../packages/testimonial/src/multi-carousel.tsx","../../packages/testimonial/stories/Testimonial.stories.tsx"],"sourcesContent":["import React from 'react';\n\nexport const IconLeft = (): JSX.Element => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-14 w-14\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n  >\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n  </svg>\n);\n\nexport const IconRight = (): JSX.Element => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-14 w-14\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n  >\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n  </svg>\n);\n","import React, { Children, createContext, useContext, useMemo } from 'react';\nimport clsx from 'clsx';\nimport {\n  TestimonialItemProps,\n  TestimonialMultiCarouselContextType,\n  TestimonialCarouselProps\n} from './types';\nimport { ScreenSize, useScreenSize, useMultiCarouselBehavior } from '@thoughtindustries/hooks';\nimport { IconLeft, IconRight } from './icons';\n\nenum Alignment {\n  Left = 'Left',\n  Right = 'Right',\n  Center = 'Center'\n}\n\nconst TestimonialMultiCarouselContext = createContext<\n  TestimonialMultiCarouselContextType | undefined\n>(undefined);\n\nfunction useTestimonialMultiCarouselContext() {\n  const context = useContext(TestimonialMultiCarouselContext);\n  if (!context) {\n    throw new Error('No context found for TestimonialMultiCarouselContext');\n  }\n  return context;\n}\n\nconst TestimonialMultiCarousel = ({\n  desktopColumnCount,\n  children,\n  textColor\n}: TestimonialCarouselProps): JSX.Element => {\n  const totalItems = Children.count(children);\n\n  const { scrollableRef, hasPrevItem, hasNextItem, navigate } =\n    useMultiCarouselBehavior<HTMLUListElement>({\n      desktopColumnCount,\n      itemCount: totalItems\n    });\n\n  const value = useMemo(\n    () => ({\n      desktopColumnCount\n    }),\n    [desktopColumnCount]\n  );\n\n  const styles = {\n    touchAction: 'none'\n  };\n  const navBtnBaseClassNames =\n    'no-underline font-normal cursor-pointer p-0 text-center text-gray-600 top-36 absolute';\n  const prevNavClassNames = `${navBtnBaseClassNames} left-0`;\n  const nextNavClassNames = `${navBtnBaseClassNames} right-0`;\n\n  return (\n    <TestimonialMultiCarouselContext.Provider value={value}>\n      <div className=\"overflow-hidden relative\">\n        <ul ref={scrollableRef} style={styles} className=\"transition-all duration-500 flex\">\n          {children}\n        </ul>\n        {hasPrevItem && (\n          <button\n            className={prevNavClassNames}\n            onClick={() => navigate(-1)}\n            aria-label=\"left\"\n            style={{ color: textColor }}\n          >\n            <IconLeft />\n          </button>\n        )}\n        {hasNextItem && (\n          <button\n            className={nextNavClassNames}\n            onClick={() => navigate(1)}\n            aria-label=\"right\"\n            style={{ color: textColor }}\n          >\n            <IconRight />\n          </button>\n        )}\n      </div>\n    </TestimonialMultiCarouselContext.Provider>\n  );\n};\n\n/**\n * in tailwind JIT mode, dynamic values like `md:w-1/${count}` are not supported.\n * use static complete strings instead.\n * @param desktopColumnCount\n * @returns\n */\nconst itemClassnameByDesktopColumnCount = (desktopColumnCount: number): string => {\n  switch (desktopColumnCount) {\n    case 2:\n      return 'md:w-1/2';\n    case 3:\n      return 'md:w-1/3';\n    case 4:\n      return 'md:w-1/4';\n    case 5:\n      return 'md:w-1/5';\n  }\n  return '';\n};\n\nconst Item = ({ ...item }: TestimonialItemProps): JSX.Element => {\n  const { quote, username, description, backgroundColor, textColor, alignment, asset } = item;\n  const { desktopColumnCount } = useTestimonialMultiCarouselContext();\n  const screenSize = useScreenSize();\n  const isSmallScreen = screenSize === ScreenSize.Small;\n  const quoteSize = isSmallScreen ? 'text-xl' : 'text-3xl';\n  const nameSize = isSmallScreen ? 'text-md' : 'text-xl';\n  const descriptionSize = isSmallScreen ? 'text-sm' : 'text-lg';\n\n  const classNames = clsx([\n    'flex-none w-full p-8',\n    itemClassnameByDesktopColumnCount(desktopColumnCount)\n  ]);\n\n  const setAlignment = (alignment: string, prop: string) => {\n    if (prop === 'justify') {\n      return alignment === Alignment.Center\n        ? 'justify-center'\n        : alignment === Alignment.Left\n        ? 'justify-start'\n        : 'justify-end';\n    } else {\n      return alignment === Alignment.Center\n        ? 'text-center'\n        : alignment === Alignment.Left\n        ? 'text-left'\n        : 'text-right';\n    }\n  };\n\n  const wrappedStyles = {\n    backgroundColor: backgroundColor,\n    color: textColor,\n    backgroundImage: `url(${asset})`\n  };\n\n  return (\n    <li className={classNames} style={wrappedStyles}>\n      <div className=\"text-center py-36 px-1 block\">\n        <div\n          className={`relative before:block before:w-full flex items-center py-0 px-12 ${setAlignment(\n            alignment,\n            'justify'\n          )}`}\n        >\n          <div className={`${setAlignment(alignment, 'text')} absolute`}>\n            <h1 className={`${quoteSize} mb-6`}>{quote}</h1>\n            <p\n              className={`${nameSize} relative pt-2 m-0 italic before:w-full before:border-solid before:border-t before:border-t-current before:block before:absolute before:top-0 before:h-0`}\n            >\n              {username}\n            </p>\n            <p className={`${descriptionSize} italic`}>{description}</p>\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nTestimonialMultiCarousel.displayName = 'TestimonialMultiCarousel';\nTestimonialMultiCarousel.Item = Item;\n\nexport default TestimonialMultiCarousel;\n","import React from 'react';\nimport { TestimonialMultiCarousel, TestimonialItemProps, TestimonialCarouselProps } from '../src';\nimport { Meta, StoryObj } from '@storybook/react';\nconst meta: Meta<TestimonialCarouselProps> = {\n  component: TestimonialMultiCarousel,\n  title: 'Packages/Testimonial'\n};\nexport default meta;\ntype Testimonial = StoryObj<TestimonialItemProps>;\nconst Item = ({\n  ...args\n}: TestimonialItemProps) => <TestimonialMultiCarousel {...args} desktopColumnCount={1}>\n    <TestimonialMultiCarousel.Item {...args} />\n  </TestimonialMultiCarousel>;\nexport const Single: Testimonial = {\n  render: args => <Item {...args} />,\n  args: {\n    quote: 'Si hortum in bibliotheca habes, nihil deerit.',\n    username: 'Marcus Tullius Cicero',\n    description: 'Statesman',\n    backgroundColor: '#FFFFFF',\n    textColor: '#000000',\n    alignment: 'Center'\n  }\n};\nconst Multi = ({\n  ...args\n}: TestimonialItemProps) => <TestimonialMultiCarousel {...args} desktopColumnCount={1}>\n    <TestimonialMultiCarousel.Item {...args} />\n    <TestimonialMultiCarousel.Item {...args} />\n    <TestimonialMultiCarousel.Item {...args} />\n  </TestimonialMultiCarousel>;\nexport const List: Testimonial = {\n  render: args => <Multi {...args} />,\n  args: {\n    quote: 'Si hortum in bibliotheca habes, nihil deerit.',\n    username: 'Marcus Tullius Cicero',\n    description: 'Statesman',\n    backgroundColor: '#FFFFFF',\n    textColor: '#000000',\n    alignment: 'Left'\n  }\n};\nSingle.parameters = {\n  ...Single.parameters,\n  docs: {\n    ...Single.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: args => <Item {...args} />,\\n  args: {\\n    quote: 'Si hortum in bibliotheca habes, nihil deerit.',\\n    username: 'Marcus Tullius Cicero',\\n    description: 'Statesman',\\n    backgroundColor: '#FFFFFF',\\n    textColor: '#000000',\\n    alignment: 'Center'\\n  }\\n}\",\n      ...Single.parameters?.docs?.source\n    }\n  }\n};\nList.parameters = {\n  ...List.parameters,\n  docs: {\n    ...List.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: args => <Multi {...args} />,\\n  args: {\\n    quote: 'Si hortum in bibliotheca habes, nihil deerit.',\\n    username: 'Marcus Tullius Cicero',\\n    description: 'Statesman',\\n    backgroundColor: '#FFFFFF',\\n    textColor: '#000000',\\n    alignment: 'Left'\\n  }\\n}\",\n      ...List.parameters?.docs?.source\n    }\n  }\n};"],"names":["IconLeft","jsx","IconRight","TestimonialMultiCarouselContext","createContext","useTestimonialMultiCarouselContext","context","useContext","TestimonialMultiCarousel","desktopColumnCount","children","textColor","totalItems","Children","scrollableRef","hasPrevItem","hasNextItem","navigate","useMultiCarouselBehavior","value","useMemo","styles","navBtnBaseClassNames","prevNavClassNames","nextNavClassNames","jsxs","itemClassnameByDesktopColumnCount","Item","item","quote","username","description","backgroundColor","alignment","asset","isSmallScreen","useScreenSize","ScreenSize","quoteSize","nameSize","descriptionSize","classNames","clsx","setAlignment","alignment2","prop","wrappedStyles","meta","args","Single","Multi","List","_a","_c","_b"],"mappings":"4RAEO,MAAMA,EAAW,IACtBC,EAAC,MAAA,CACC,MAAM,6BACN,UAAU,YACV,KAAK,OACL,QAAQ,YACR,OAAO,eAEP,SAAAA,EAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,iBAAkB,CAAA,CAAA,CACzF,EAGWC,EAAY,IACvBD,EAAC,MAAA,CACC,MAAM,6BACN,UAAU,YACV,KAAK,OACL,QAAQ,YACR,OAAO,eAEP,SAAAA,EAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,cAAe,CAAA,CAAA,CACtF,ECPFE,EAAAC,EAAAA,cAAA,MAAA,EAIA,SAAAC,GAAA,CACE,MAAAC,EAAAC,aAAAJ,CAAA,EACA,GAAA,CAAAG,EACE,MAAA,IAAA,MAAA,sDAAA,EAEF,OAAAA,CACF,CAEA,MAAAE,EAAA,CAAA,CAAkC,mBAAAC,EAChC,SAAAC,EACA,UAAAC,CAEF,IAAA,CACE,MAAAC,EAAAC,EAAAA,SAAA,MAAAH,CAAA,EAEA,CAAA,cAAAI,EAAA,YAAAC,EAAA,YAAAC,EAAA,SAAAC,CAAA,EAAAC,EAAA,CAC6C,mBAAAT,EACzC,UAAAG,CACW,CAAA,EAGfO,EAAAC,EAAA,QAAc,KAAA,CACL,mBAAAX,CACL,GACF,CAAAA,CAAA,CACmB,EAGrBY,EAAA,CAAe,YAAA,MACA,EAEfC,EAAA,wFAEAC,EAAA,GAAAD,WACAE,EAAA,GAAAF,YAEA,OAAArB,EAAAE,EAAA,SAAA,CAAA,MAAAgB,EAAA,SAAAM,EAAA,MAAA,CAAA,UAAA,2BAAA,SAAA,CAGMxB,EAAA,KAAA,CAAA,IAAAa,EAAA,MAAAO,EAAA,UAAA,mCAAA,SAAAX,EAAA,EAEAK,GAAAd,EAEE,SAAC,CAAA,UAAAsB,EACY,QAAA,IAAAN,EAAA,EAAA,EACe,aAAA,OACf,MAAA,CAAA,MAAAN,CAAA,EACe,SAAAV,EAAAD,EAAA,EAAA,CAEhB,CAAA,EACZgB,GAAAf,EAGA,SAAC,CAAA,UAAAuB,EACY,QAAA,IAAAP,EAAA,CAAA,EACc,aAAA,QACd,MAAA,CAAA,MAAAN,CAAA,EACe,SAAAV,EAAAC,EAAA,EAAA,CAEf,CAAA,CACb,CAAA,CAAA,CAAA,CAAA,CAKV,EAQAwB,EAAAjB,GAAA,CACE,OAAAA,EAAA,CAA4B,IAAA,GAExB,MAAA,WAAO,IAAA,GAEP,MAAA,WAAO,IAAA,GAEP,MAAA,WAAO,IAAA,GAEP,MAAA,UAAO,CAEX,MAAA,EACF,EAEAkB,EAAA,CAAA,CAAA,GAAAC,KAAA,CACE,KAAA,CAAA,MAAAC,EAAA,SAAAC,EAAA,YAAAC,EAAA,gBAAAC,EAAA,UAAArB,EAAA,UAAAsB,EAAA,MAAAC,CAAA,EAAAN,EACA,CAAA,mBAAAnB,GAAAJ,IAEA8B,EADAC,MACAC,EAAA,MACAC,EAAAH,EAAA,UAAA,WACAI,EAAAJ,EAAA,UAAA,UACAK,EAAAL,EAAA,UAAA,UAEAM,EAAAC,EAAA,CAAwB,uBACtBhB,EAAAjB,CAAA,CACoD,CAAA,EAGtDkC,EAAA,CAAAC,EAAAC,IACEA,IAAA,UACED,IAAA,SAAA,iBAAAA,IAAA,OAAA,gBAAA,cAMAA,IAAA,SAAA,cAAAA,IAAA,OAAA,YAAA,aAQJE,EAAA,CAAsB,gBAAAd,EACpB,MAAArB,EACO,gBAAA,OAAAuB,IACiB,EAG1B,OAAAjC,EAAA,KAAA,CAAA,UAAAwC,EAAA,MAAAK,EAAA,SAAA7C,EAAA,MAAA,CAAA,UAAA,+BAAA,SAAAA,EAGM,MAAC,CAAA,UAAA,oEAAA0C,EACgFV,EAC7E,SACA,IACF,SAAAR,EAAA,MAAA,CAAA,UAAA,GAAAkB,EAAAV,EAAA,MAAA,aAAA,SAAA,CAGEhC,EAAA,KAAA,CAAA,UAAA,GAAAqC,SAAA,SAAAT,EAAA,EAA2C5B,EAC3C,IAAC,CAAA,UAAA,GAAAsC,4JACe,SAAAT,CAEb,CAAA,EACH7B,EAAA,IAAA,CAAA,UAAA,GAAAuC,WAAA,SAAAT,EAAA,CACwD,EAAA,CAC1D,CAAA,CAAA,CAAA,CAAA,CAAA,CAKV,EAEAvB,EAAA,YAAA,2BACAA,EAAA,KAAAmB,ifCrKA,MAAMoB,EAAuC,CAC3C,UAAWvC,EACX,MAAO,sBACT,EAGMmB,EAAO,CAAC,CACZ,GAAGqB,CACL,IAA6B/C,EAAAO,EAAA,CAA0B,GAAGwC,EAAM,mBAAoB,EAChF,SAAC/C,EAAAO,EAAyB,KAAzB,CAA+B,GAAGwC,CAAM,CAAA,CAC3C,CAAA,EACWC,EAAsB,CACjC,OAAQD,GAAS/C,EAAA0B,EAAA,CAAM,GAAGqB,EAAM,EAChC,KAAM,CACJ,MAAO,gDACP,SAAU,wBACV,YAAa,YACb,gBAAiB,UACjB,UAAW,UACX,UAAW,QACb,CACF,EACME,EAAQ,CAAC,CACb,GAAGF,CACL,IAA6BvB,EAAAjB,EAAA,CAA0B,GAAGwC,EAAM,mBAAoB,EAChF,SAAA,CAAA/C,EAACO,EAAyB,KAAzB,CAA+B,GAAGwC,CAAM,CAAA,EACxC/C,EAAAO,EAAyB,KAAzB,CAA+B,GAAGwC,CAAM,CAAA,EACxC/C,EAAAO,EAAyB,KAAzB,CAA+B,GAAGwC,CAAM,CAAA,CAAA,CAC3C,CAAA,EACWG,EAAoB,CAC/B,OAAQH,GAAS/C,EAAAiD,EAAA,CAAO,GAAGF,EAAM,EACjC,KAAM,CACJ,MAAO,gDACP,SAAU,wBACV,YAAa,YACb,gBAAiB,UACjB,UAAW,UACX,UAAW,MACb,CACF,YACAC,EAAO,WAAa,CAClB,GAAGA,EAAO,WACV,KAAM,CACJ,IAAGG,EAAAH,EAAO,aAAP,YAAAG,EAAmB,KACtB,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAL,EAAO,aAAP,YAAAK,EAAmB,OAAnB,YAAAD,EAAyB,MAC9B,CACF,CACF,YACAF,EAAK,WAAa,CAChB,GAAGA,EAAK,WACR,KAAM,CACJ,IAAGC,EAAAD,EAAK,aAAL,YAAAC,EAAiB,KACpB,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAH,EAAK,aAAL,YAAAG,EAAiB,OAAjB,YAAAD,EAAuB,MAC5B,CACF,CACF"}