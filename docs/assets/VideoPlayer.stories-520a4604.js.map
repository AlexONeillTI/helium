{"version":3,"file":"VideoPlayer.stories-520a4604.js","sources":["../../packages/hooks/src/use-sdk.ts","../../packages/video-player/src/video-player.tsx","../../packages/video-player/stories/VideoPlayer.stories.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function useSdk(src: string) {\n  // Keep track of script status (\"idle\", \"loading\", \"ready\", \"error\")\n  const [status, setStatus] = useState(src ? 'loading' : 'idle');\n  useEffect(\n    () => {\n      // Allow falsy src value if waiting on other data needed for\n      // constructing the script URL passed to this hook.\n      if (!src) {\n        setStatus('idle');\n        return;\n      }\n      // Fetch existing script element by src\n      // It may have been added by another intance of this hook\n      let script = document.querySelector(`script[src=\"${src}\"]`) as HTMLScriptElement;\n      if (!script) {\n        // Create script\n        script = document.createElement('script') as HTMLScriptElement;\n        script.src = src;\n        script.async = true;\n        script.setAttribute('data-status', 'loading');\n        // Add script to document body\n        document.body.appendChild(script);\n        // Store status in attribute on script\n        // This can be read by other instances of this hook\n        const setAttributeFromEvent = (event: Event) => {\n          script.setAttribute('data-status', event.type === 'load' ? 'ready' : 'error');\n        };\n\n        script.addEventListener('load', setAttributeFromEvent);\n        script.addEventListener('error', setAttributeFromEvent);\n      } else {\n        // Grab existing script status from attribute and set to state.\n        const currentStatus = 'loading' || script.getAttribute('data-status');\n        setStatus(currentStatus);\n      }\n      // Script event handler to update status in state\n      // Note: Even if the script already exists we still need to add\n      // event handlers to update the state for *this* hook instance.\n      const setStateFromEvent = (event: Event) => {\n        setStatus(event.type === 'load' ? 'ready' : 'error');\n      };\n      // Add event listeners\n      script.addEventListener('load', setStateFromEvent);\n      script.addEventListener('error', setStateFromEvent);\n      // Remove event listeners on cleanup\n      return () => {\n        if (script) {\n          script.removeEventListener('load', setStateFromEvent);\n          script.removeEventListener('error', setStateFromEvent);\n        }\n      };\n    },\n    [src] // Only re-run effect if script src changes\n  );\n\n  return status;\n}\n","import React, { useEffect, useState } from 'react';\nimport { VideoPlayerProps } from './types';\nimport { useSdk } from '@thoughtindustries/hooks';\nimport { LoadingDots } from '@thoughtindustries/content';\n\ndeclare global {\n  interface Window {\n    _wq: Array<Record<any, any>>;\n  }\n}\n\nconst SDK_URL = 'https://fast.wistia.com/assets/external/E-v1.js';\nconst PLAYER_ID_PREFIX = 'wistia-player-';\n\nconst VideoPlayer = (props: VideoPlayerProps): JSX.Element => {\n  const { asset, playerColor, userId, doNotTrack } = props;\n  const playerId = `${PLAYER_ID_PREFIX}${asset}`;\n  const [player, setPlayer] = useState<Record<any, any>>();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const status = useSdk(SDK_URL);\n\n  useEffect(() => {\n    if (status === 'ready') {\n      window._wq = window._wq || [];\n      window._wq.push({\n        id: asset,\n        options: {\n          controlsVisibleOnLoad: true,\n          videoFoam: true,\n          playerColor,\n          container: playerId,\n          wmode: 'opaque',\n          email: userId,\n          doNotTrack: !!doNotTrack,\n          volumeControl: true,\n          plugin: {},\n          fitStrategy: 'cover'\n        },\n        onReady: (player: any) => {\n          setIsLoading(false);\n          setPlayer(player);\n        }\n      });\n    }\n  }, [status, asset, playerColor, userId, doNotTrack, playerId]);\n\n  useEffect(() => {\n    const localStorageKey = `video-${asset}`;\n\n    if (player) {\n      const handleSecondChange = (seconds: string) => {\n        if (parseInt(seconds) + 5 > player.duration()) {\n          localStorage.removeItem(localStorageKey);\n        } else {\n          localStorage.setItem(localStorageKey, seconds);\n        }\n      };\n\n      const savedTimestamp = localStorage.getItem(localStorageKey);\n      if (savedTimestamp) {\n        player.time(savedTimestamp);\n      }\n\n      player.bind('secondchange', handleSecondChange);\n    }\n  }, [player, asset]);\n\n  const className = `wistia_embed wistia_async_${asset}`;\n\n  return (\n    <div className=\"flex flex-col items-center w-full\">\n      <div className=\"w-4/5 md:w-[850px] px-4\">\n        {isLoading && <LoadingDots />}\n        <div id={playerId} key={asset} className={className} />\n      </div>\n    </div>\n  );\n};\n\nVideoPlayer.displayName = 'VideoPlayer';\n\nexport default VideoPlayer;\n","import { Meta, StoryObj } from '@storybook/react';\nimport React from 'react';\nimport { VideoPlayer, VideoPlayerProps } from '../src';\nconst meta: Meta<VideoPlayerProps> = {\n  component: VideoPlayer,\n  title: 'Packages/Video Player'\n};\nexport default meta;\ntype VideoPlayer = StoryObj<VideoPlayerProps>;\nexport const Base: VideoPlayer = {\n  render: args => <VideoPlayer {...args} />,\n  args: {\n    asset: 'o8p3hzwdmj',\n    playerColor: '#C1E1C1'\n  }\n};\nexport const Alternate: VideoPlayer = {\n  render: args => <VideoPlayer {...args} />,\n  args: {\n    asset: '3ezt7m1tx1',\n    playerColor: '#A7C7E7'\n  }\n};\nBase.parameters = {\n  ...Base.parameters,\n  docs: {\n    ...Base.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: args => <VideoPlayer {...args} />,\\n  args: {\\n    asset: 'o8p3hzwdmj',\\n    playerColor: '#C1E1C1'\\n  }\\n}\",\n      ...Base.parameters?.docs?.source\n    }\n  }\n};\nAlternate.parameters = {\n  ...Alternate.parameters,\n  docs: {\n    ...Alternate.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: args => <VideoPlayer {...args} />,\\n  args: {\\n    asset: '3ezt7m1tx1',\\n    playerColor: '#A7C7E7'\\n  }\\n}\",\n      ...Alternate.parameters?.docs?.source\n    }\n  }\n};"],"names":["useSdk","src","status","setStatus","useState","useEffect","script","setAttributeFromEvent","event","setStateFromEvent","SDK_URL","PLAYER_ID_PREFIX","VideoPlayer","props","asset","playerColor","userId","doNotTrack","playerId","player","setPlayer","isLoading","setIsLoading","player2","localStorageKey","handleSecondChange","seconds","savedTimestamp","className","jsx","jsxs","LoadingDots","meta","Base","args","Alternate","_a","_c","_b"],"mappings":"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"}