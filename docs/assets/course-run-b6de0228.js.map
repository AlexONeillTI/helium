{"version":3,"file":"course-run-b6de0228.js","sources":["../../node_modules/graphql/jsutils/isObjectLike.mjs","../../node_modules/graphql/jsutils/invariant.mjs","../../node_modules/graphql/language/location.mjs","../../node_modules/graphql/language/printLocation.mjs","../../node_modules/graphql/error/GraphQLError.mjs","../../node_modules/graphql/error/syntaxError.mjs","../../node_modules/graphql/language/directiveLocation.mjs","../../node_modules/graphql/language/tokenKind.mjs","../../node_modules/graphql/language/lexer.mjs","../../node_modules/graphql/language/parser.mjs","../../node_modules/graphql-tag/lib/index.js","../../node_modules/@apollo/client/react/hooks/useApolloClient.js","../../node_modules/@apollo/client/react/hooks/useSyncExternalStore.js","../../node_modules/@apollo/client/react/parser/index.js","../../node_modules/@apollo/client/react/hooks/useQuery.js","../../node_modules/@apollo/client/react/hooks/useLazyQuery.js","../../node_modules/@apollo/client/react/hooks/useMutation.js","../../packages/content/src/components/loading-dots/loading-dots.tsx","../../packages/content/src/graphql/global-types.ts","../../packages/content/src/graphql/queries/ContentFragment.generated.tsx","../../packages/content/src/graphql/queries/LocationFragment.generated.tsx","../../packages/content/src/graphql/queries/CatalogMetaFragment.generated.tsx","../../packages/content/src/graphql/queries/CatalogContent.generated.tsx","../../packages/content/src/graphql/queries/CatalogQuery.generated.tsx","../../packages/content/src/graphql/queries/Languages.generated.tsx","../../packages/content/src/graphql/queries/QueryContents.generated.tsx","../../packages/content/src/graphql/queries/RssItems.generated.tsx","../../packages/content/src/graphql/queries/UserRecentContent.generated.tsx","../../packages/content/src/graphql/queries/UserContentItems.generated.tsx","../../packages/content/src/graphql/queries/UserArchives.generated.tsx","../../packages/content/src/graphql/queries/UserWaitlist.generated.tsx","../../packages/content/src/graphql/queries/UserBookmarks.generated.tsx","../../packages/content/src/graphql/queries/UserCertificates.generated.tsx","../../packages/content/src/graphql/queries/UserContentGroups.generated.tsx","../../packages/content/src/graphql/queries/UserBookmarksByFolder.generated.tsx","../../packages/content/src/graphql/queries/UserCourseCompletionProgress.generated.tsx","../../packages/content/src/graphql/queries/UserCourseProgress.generated.tsx","../../packages/content/src/graphql/queries/UserCourseAwardCounts.generated.tsx","../../packages/content/src/graphql/queries/UserCourseCollaborations.generated.tsx","../../packages/content/src/graphql/queries/UserCertificateFields.generated.tsx","../../packages/content/src/graphql/mutations/AddResourceToQueue.generated.tsx","../../packages/content/src/graphql/mutations/ArchiveUserCourse.generated.tsx","../../packages/content/src/graphql/mutations/ArchiveUserLearningPath.generated.tsx","../../packages/content/src/graphql/mutations/ReinstateUserLearningPath.generated.tsx","../../packages/content/src/graphql/mutations/ReinstateUserCourse.generated.tsx","../../packages/content/src/graphql/mutations/UnenrollFromWaitlist.generated.tsx","../../packages/content/src/graphql/mutations/UpdateBookmarkFolder.generated.tsx","../../packages/content/src/graphql/mutations/DestroyBookmarkFolder.generated.tsx","../../packages/content/src/graphql/mutations/CreateCertificateFromUpload.generated.tsx","../../packages/content/src/graphql/mutations/UpdateBookmark.generated.tsx","../../packages/content/src/graphql/mutations/DestroyBookmark.generated.tsx","../../node_modules/dayjs/dayjs.min.js","../../node_modules/dayjs/plugin/advancedFormat.js","../../node_modules/dayjs/plugin/utc.js","../../node_modules/dayjs/plugin/timezone.js","../../packages/content/src/utilities/format-time/constants.ts","../../packages/content/src/utilities/format-time/format-time.ts","../../packages/content/src/utilities/hydrate-content/course-run.ts"],"sourcesContent":["/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport function isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n","export function invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n","import { invariant } from '../jsutils/invariant.mjs';\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || invariant(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n","import { getLocation } from './location.mjs';\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nexport function printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n","import { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { getLocation } from '../language/location.mjs';\nimport {\n  printLocation,\n  printSourceLocation,\n} from '../language/printLocation.mjs';\n\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport class GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => getLocation(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => getLocation(loc.source, loc.start));\n    const originalExtensions = isObjectLike(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + printLocation(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += '\\n\\n' + printSourceLocation(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nexport function printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toJSON` instead. Will be removed in v17\n */\n\nexport function formatError(error) {\n  return error.toJSON();\n}\n","import { GraphQLError } from './GraphQLError.mjs';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(`Syntax Error: ${description}`, {\n    source,\n    positions: [position],\n  });\n}\n","/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation;\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (DirectiveLocation = {}));\n\nexport { DirectiveLocation };\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind;\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (TokenKind = {}));\n\nexport { TokenKind };\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Token } from './ast.mjs';\nimport { dedentBlockStringLines } from './blockString.mjs';\nimport { isDigit, isNameContinue, isNameStart } from './characterClasses.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport class Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return (\n    kind === TokenKind.BANG ||\n    kind === TokenKind.DOLLAR ||\n    kind === TokenKind.AMP ||\n    kind === TokenKind.PAREN_L ||\n    kind === TokenKind.PAREN_R ||\n    kind === TokenKind.SPREAD ||\n    kind === TokenKind.COLON ||\n    kind === TokenKind.EQUALS ||\n    kind === TokenKind.AT ||\n    kind === TokenKind.BRACKET_L ||\n    kind === TokenKind.BRACKET_R ||\n    kind === TokenKind.BRACE_L ||\n    kind === TokenKind.PIPE ||\n    kind === TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(lexer, TokenKind.BANG, position, position + 1);\n\n      case 0x0024:\n        // $\n        return createToken(lexer, TokenKind.DOLLAR, position, position + 1);\n\n      case 0x0026:\n        // &\n        return createToken(lexer, TokenKind.AMP, position, position + 1);\n\n      case 0x0028:\n        // (\n        return createToken(lexer, TokenKind.PAREN_L, position, position + 1);\n\n      case 0x0029:\n        // )\n        return createToken(lexer, TokenKind.PAREN_R, position, position + 1);\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(lexer, TokenKind.SPREAD, position, position + 3);\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(lexer, TokenKind.COLON, position, position + 1);\n\n      case 0x003d:\n        // =\n        return createToken(lexer, TokenKind.EQUALS, position, position + 1);\n\n      case 0x0040:\n        // @\n        return createToken(lexer, TokenKind.AT, position, position + 1);\n\n      case 0x005b:\n        // [\n        return createToken(lexer, TokenKind.BRACKET_L, position, position + 1);\n\n      case 0x005d:\n        // ]\n        return createToken(lexer, TokenKind.BRACKET_R, position, position + 1);\n\n      case 0x007b:\n        // {\n        return createToken(lexer, TokenKind.BRACE_L, position, position + 1);\n\n      case 0x007c:\n        // |\n        return createToken(lexer, TokenKind.PIPE, position, position + 1);\n\n      case 0x007d:\n        // }\n        return createToken(lexer, TokenKind.BRACE_R, position, position + 1);\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if (isDigit(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if (isNameStart(code)) {\n      return readName(lexer, position);\n    }\n\n    throw syntaxError(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if (isDigit(code)) {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || isNameStart(code)) {\n    throw syntaxError(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? TokenKind.FLOAT : TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!isDigit(firstCode)) {\n    throw syntaxError(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while (isDigit(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(lexer, TokenKind.STRING, start, position + 1, value);\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        dedentBlockStringLines(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if (isNameContinue(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Location, OperationTypeNode } from './ast.mjs';\nimport { DirectiveLocation } from './directiveLocation.mjs';\nimport { Kind } from './kinds.mjs';\nimport { isPunctuatorTokenKind, Lexer } from './lexer.mjs';\nimport { isSource, Source } from './source.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nexport function parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport class Parser {\n  constructor(source, options = {}) {\n    const sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n    this._tokenCounter = 0;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(TokenKind.NAME);\n    return this.node(token, {\n      kind: Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(\n        TokenKind.SOF,\n        this.parseDefinition,\n        TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw syntaxError(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(\n        TokenKind.BRACE_L,\n        this.parseSelection,\n        TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.allowLegacyFragmentVariables === true) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.INT,\n          value: token.value,\n        });\n\n      case TokenKind.FLOAT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.FLOAT,\n          value: token.value,\n        });\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this.advanceLexer();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw syntaxError(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n    this.advanceLexer();\n    return this.node(token, {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return this.node(start, {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return this.node(start, {\n        kind: Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS)\n      ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw syntaxError(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (Object.prototype.hasOwnProperty.call(DirectiveLocation, name.value)) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    if (this._options.noLocation !== true) {\n      node.loc = new Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return token;\n    }\n\n    throw syntaxError(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n    } else {\n      throw syntaxError(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n\n  advanceLexer() {\n    const { maxTokens } = this._options;\n\n    const token = this._lexer.advance();\n\n    if (maxTokens !== undefined && token.kind !== TokenKind.EOF) {\n      ++this._tokenCounter;\n\n      if (this._tokenCounter > maxTokens) {\n        throw syntaxError(\n          this._lexer.source,\n          token.start,\n          `Document contains more that ${maxTokens} tokens. Parsing aborted.`,\n        );\n      }\n    }\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? `\"${kind}\"` : kind;\n}\n","import { __assign } from \"tslib\";\nimport { parse } from 'graphql';\nvar docCache = new Map();\nvar fragmentSourceMap = new Map();\nvar printFragmentWarnings = true;\nvar experimentalFragmentVariables = false;\nfunction normalize(string) {\n    return string.replace(/[\\s,]+/g, ' ').trim();\n}\nfunction cacheKeyFromLoc(loc) {\n    return normalize(loc.source.body.substring(loc.start, loc.end));\n}\nfunction processFragments(ast) {\n    var seenKeys = new Set();\n    var definitions = [];\n    ast.definitions.forEach(function (fragmentDefinition) {\n        if (fragmentDefinition.kind === 'FragmentDefinition') {\n            var fragmentName = fragmentDefinition.name.value;\n            var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n            var sourceKeySet = fragmentSourceMap.get(fragmentName);\n            if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n                if (printFragmentWarnings) {\n                    console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n                        + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n                        + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n                }\n            }\n            else if (!sourceKeySet) {\n                fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n            }\n            sourceKeySet.add(sourceKey);\n            if (!seenKeys.has(sourceKey)) {\n                seenKeys.add(sourceKey);\n                definitions.push(fragmentDefinition);\n            }\n        }\n        else {\n            definitions.push(fragmentDefinition);\n        }\n    });\n    return __assign(__assign({}, ast), { definitions: definitions });\n}\nfunction stripLoc(doc) {\n    var workSet = new Set(doc.definitions);\n    workSet.forEach(function (node) {\n        if (node.loc)\n            delete node.loc;\n        Object.keys(node).forEach(function (key) {\n            var value = node[key];\n            if (value && typeof value === 'object') {\n                workSet.add(value);\n            }\n        });\n    });\n    var loc = doc.loc;\n    if (loc) {\n        delete loc.startToken;\n        delete loc.endToken;\n    }\n    return doc;\n}\nfunction parseDocument(source) {\n    var cacheKey = normalize(source);\n    if (!docCache.has(cacheKey)) {\n        var parsed = parse(source, {\n            experimentalFragmentVariables: experimentalFragmentVariables,\n            allowLegacyFragmentVariables: experimentalFragmentVariables\n        });\n        if (!parsed || parsed.kind !== 'Document') {\n            throw new Error('Not a valid GraphQL document.');\n        }\n        docCache.set(cacheKey, stripLoc(processFragments(parsed)));\n    }\n    return docCache.get(cacheKey);\n}\nexport function gql(literals) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (typeof literals === 'string') {\n        literals = [literals];\n    }\n    var result = literals[0];\n    args.forEach(function (arg, i) {\n        if (arg && arg.kind === 'Document') {\n            result += arg.loc.source.body;\n        }\n        else {\n            result += arg;\n        }\n        result += literals[i + 1];\n    });\n    return parseDocument(result);\n}\nexport function resetCaches() {\n    docCache.clear();\n    fragmentSourceMap.clear();\n}\nexport function disableFragmentWarnings() {\n    printFragmentWarnings = false;\n}\nexport function enableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = true;\n}\nexport function disableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = false;\n}\nvar extras = {\n    gql: gql,\n    resetCaches: resetCaches,\n    disableFragmentWarnings: disableFragmentWarnings,\n    enableExperimentalFragmentVariables: enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables: disableExperimentalFragmentVariables\n};\n(function (gql_1) {\n    gql_1.gql = extras.gql, gql_1.resetCaches = extras.resetCaches, gql_1.disableFragmentWarnings = extras.disableFragmentWarnings, gql_1.enableExperimentalFragmentVariables = extras.enableExperimentalFragmentVariables, gql_1.disableExperimentalFragmentVariables = extras.disableExperimentalFragmentVariables;\n})(gql || (gql = {}));\ngql[\"default\"] = gql;\nexport default gql;\n//# sourceMappingURL=index.js.map","import { invariant } from \"../../utilities/globals/index.js\";\nimport { useContext } from 'react';\nimport { getApolloContext } from \"../context/index.js\";\nexport function useApolloClient(override) {\n    var context = useContext(getApolloContext());\n    var client = override || context.client;\n    __DEV__ ? invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' +\n        'Wrap the root component in an <ApolloProvider>, or pass an ApolloClient ' +\n        'instance in via options.') : invariant(!!client, 32);\n    return client;\n}\n//# sourceMappingURL=useApolloClient.js.map","import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from 'react';\nimport { canUseLayoutEffect } from \"../../utilities/index.js\";\nvar didWarnUncachedGetSnapshot = false;\nvar uSESKey = \"useSyncExternalStore\";\nvar realHook = React[uSESKey];\nexport var useSyncExternalStore = realHook || (function (subscribe, getSnapshot, getServerSnapshot) {\n    var value = getSnapshot();\n    if (__DEV__ &&\n        !didWarnUncachedGetSnapshot &&\n        value !== getSnapshot()) {\n        didWarnUncachedGetSnapshot = true;\n        __DEV__ && invariant.error('The result of getSnapshot should be cached to avoid an infinite loop');\n    }\n    var _a = React.useState({ inst: { value: value, getSnapshot: getSnapshot } }), inst = _a[0].inst, forceUpdate = _a[1];\n    if (canUseLayoutEffect) {\n        React.useLayoutEffect(function () {\n            Object.assign(inst, { value: value, getSnapshot: getSnapshot });\n            if (checkIfSnapshotChanged(inst)) {\n                forceUpdate({ inst: inst });\n            }\n        }, [subscribe, value, getSnapshot]);\n    }\n    else {\n        Object.assign(inst, { value: value, getSnapshot: getSnapshot });\n    }\n    React.useEffect(function () {\n        if (checkIfSnapshotChanged(inst)) {\n            forceUpdate({ inst: inst });\n        }\n        return subscribe(function handleStoreChange() {\n            if (checkIfSnapshotChanged(inst)) {\n                forceUpdate({ inst: inst });\n            }\n        });\n    }, [subscribe]);\n    return value;\n});\nfunction checkIfSnapshotChanged(_a) {\n    var value = _a.value, getSnapshot = _a.getSnapshot;\n    try {\n        return value !== getSnapshot();\n    }\n    catch (_b) {\n        return true;\n    }\n}\n//# sourceMappingURL=useSyncExternalStore.js.map","import { invariant } from \"../../utilities/globals/index.js\";\nexport var DocumentType;\n(function (DocumentType) {\n    DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n    DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n    DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\nvar cache = new Map();\nexport function operationName(type) {\n    var name;\n    switch (type) {\n        case DocumentType.Query:\n            name = 'Query';\n            break;\n        case DocumentType.Mutation:\n            name = 'Mutation';\n            break;\n        case DocumentType.Subscription:\n            name = 'Subscription';\n            break;\n    }\n    return name;\n}\nexport function parser(document) {\n    var cached = cache.get(document);\n    if (cached)\n        return cached;\n    var variables, type, name;\n    __DEV__ ? invariant(!!document && !!document.kind, \"Argument of \".concat(document, \" passed to parser was not a valid GraphQL \") +\n        \"DocumentNode. You may need to use 'graphql-tag' or another method \" +\n        \"to convert your operation into a document\") : invariant(!!document && !!document.kind, 33);\n    var fragments = [];\n    var queries = [];\n    var mutations = [];\n    var subscriptions = [];\n    for (var _i = 0, _a = document.definitions; _i < _a.length; _i++) {\n        var x = _a[_i];\n        if (x.kind === 'FragmentDefinition') {\n            fragments.push(x);\n            continue;\n        }\n        if (x.kind === 'OperationDefinition') {\n            switch (x.operation) {\n                case 'query':\n                    queries.push(x);\n                    break;\n                case 'mutation':\n                    mutations.push(x);\n                    break;\n                case 'subscription':\n                    subscriptions.push(x);\n                    break;\n            }\n        }\n    }\n    __DEV__ ? invariant(!fragments.length ||\n        (queries.length || mutations.length || subscriptions.length), \"Passing only a fragment to 'graphql' is not yet supported. \" +\n        \"You must include a query, subscription or mutation as well\") : invariant(!fragments.length ||\n        (queries.length || mutations.length || subscriptions.length), 34);\n    __DEV__ ? invariant(queries.length + mutations.length + subscriptions.length <= 1, \"react-apollo only supports a query, subscription, or a mutation per HOC. \" +\n        \"\".concat(document, \" had \").concat(queries.length, \" queries, \").concat(subscriptions.length, \" \") +\n        \"subscriptions and \".concat(mutations.length, \" mutations. \") +\n        \"You can use 'compose' to join multiple operation types to a component\") : invariant(queries.length + mutations.length + subscriptions.length <= 1, 35);\n    type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n    if (!queries.length && !mutations.length)\n        type = DocumentType.Subscription;\n    var definitions = queries.length\n        ? queries\n        : mutations.length\n            ? mutations\n            : subscriptions;\n    __DEV__ ? invariant(definitions.length === 1, \"react-apollo only supports one definition per HOC. \".concat(document, \" had \") +\n        \"\".concat(definitions.length, \" definitions. \") +\n        \"You can use 'compose' to join multiple operation types to a component\") : invariant(definitions.length === 1, 36);\n    var definition = definitions[0];\n    variables = definition.variableDefinitions || [];\n    if (definition.name && definition.name.kind === 'Name') {\n        name = definition.name.value;\n    }\n    else {\n        name = 'data';\n    }\n    var payload = { name: name, type: type, variables: variables };\n    cache.set(document, payload);\n    return payload;\n}\nexport function verifyDocumentType(document, type) {\n    var operation = parser(document);\n    var requiredOperationName = operationName(type);\n    var usedOperationName = operationName(operation.type);\n    __DEV__ ? invariant(operation.type === type, \"Running a \".concat(requiredOperationName, \" requires a graphql \") +\n        \"\".concat(requiredOperationName, \", but a \").concat(usedOperationName, \" was used instead.\")) : invariant(operation.type === type, 37);\n}\n//# sourceMappingURL=index.js.map","import { __assign, __rest } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport { useCallback, useContext, useMemo, useRef, useState, } from 'react';\nimport { useSyncExternalStore } from \"./useSyncExternalStore.js\";\nimport { equal } from '@wry/equality';\nimport { mergeOptions } from \"../../core/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { NetworkStatus, } from \"../../core/index.js\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport { canUseWeakMap, compact, isNonEmptyArray, maybeDeepFreeze } from \"../../utilities/index.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function useQuery(query, options) {\n    if (options === void 0) { options = Object.create(null); }\n    return useInternalState(useApolloClient(options.client), query).useQuery(options);\n}\nexport function useInternalState(client, query) {\n    var stateRef = useRef();\n    if (!stateRef.current ||\n        client !== stateRef.current.client ||\n        query !== stateRef.current.query) {\n        stateRef.current = new InternalState(client, query, stateRef.current);\n    }\n    var state = stateRef.current;\n    var _a = useState(0), _tick = _a[0], setTick = _a[1];\n    state.forceUpdate = function () {\n        setTick(function (tick) { return tick + 1; });\n    };\n    return state;\n}\nvar InternalState = (function () {\n    function InternalState(client, query, previous) {\n        this.client = client;\n        this.query = query;\n        this.ssrDisabledResult = maybeDeepFreeze({\n            loading: true,\n            data: void 0,\n            error: void 0,\n            networkStatus: NetworkStatus.loading,\n        });\n        this.skipStandbyResult = maybeDeepFreeze({\n            loading: false,\n            data: void 0,\n            error: void 0,\n            networkStatus: NetworkStatus.ready,\n        });\n        this.toQueryResultCache = new (canUseWeakMap ? WeakMap : Map)();\n        verifyDocumentType(query, DocumentType.Query);\n        var previousResult = previous && previous.result;\n        var previousData = previousResult && previousResult.data;\n        if (previousData) {\n            this.previousData = previousData;\n        }\n    }\n    InternalState.prototype.forceUpdate = function () {\n        __DEV__ && invariant.warn(\"Calling default no-op implementation of InternalState#forceUpdate\");\n    };\n    InternalState.prototype.executeQuery = function (options) {\n        var _this = this;\n        var _a;\n        if (options.query) {\n            Object.assign(this, { query: options.query });\n        }\n        this.watchQueryOptions = this.createWatchQueryOptions(this.queryHookOptions = options);\n        var concast = this.observable.reobserveAsConcast(this.getObsQueryOptions());\n        this.previousData = ((_a = this.result) === null || _a === void 0 ? void 0 : _a.data) || this.previousData;\n        this.result = void 0;\n        this.forceUpdate();\n        return new Promise(function (resolve) {\n            var result;\n            concast.subscribe({\n                next: function (value) {\n                    result = value;\n                },\n                error: function () {\n                    resolve(_this.toQueryResult(_this.observable.getCurrentResult()));\n                },\n                complete: function () {\n                    resolve(_this.toQueryResult(result));\n                }\n            });\n        });\n    };\n    InternalState.prototype.useQuery = function (options) {\n        var _this = this;\n        this.renderPromises = useContext(getApolloContext()).renderPromises;\n        this.useOptions(options);\n        var obsQuery = this.useObservableQuery();\n        var result = useSyncExternalStore(useCallback(function () {\n            if (_this.renderPromises) {\n                return function () { };\n            }\n            var onNext = function () {\n                var previousResult = _this.result;\n                var result = obsQuery.getCurrentResult();\n                if (previousResult &&\n                    previousResult.loading === result.loading &&\n                    previousResult.networkStatus === result.networkStatus &&\n                    equal(previousResult.data, result.data)) {\n                    return;\n                }\n                _this.setResult(result);\n            };\n            var onError = function (error) {\n                var last = obsQuery[\"last\"];\n                subscription.unsubscribe();\n                try {\n                    obsQuery.resetLastResults();\n                    subscription = obsQuery.subscribe(onNext, onError);\n                }\n                finally {\n                    obsQuery[\"last\"] = last;\n                }\n                if (!hasOwnProperty.call(error, 'graphQLErrors')) {\n                    throw error;\n                }\n                var previousResult = _this.result;\n                if (!previousResult ||\n                    (previousResult && previousResult.loading) ||\n                    !equal(error, previousResult.error)) {\n                    _this.setResult({\n                        data: (previousResult && previousResult.data),\n                        error: error,\n                        loading: false,\n                        networkStatus: NetworkStatus.error,\n                    });\n                }\n            };\n            var subscription = obsQuery.subscribe(onNext, onError);\n            return function () { return setTimeout(function () { return subscription.unsubscribe(); }); };\n        }, [\n            obsQuery,\n            this.renderPromises,\n            this.client.disableNetworkFetches,\n        ]), function () { return _this.getCurrentResult(); }, function () { return _this.getCurrentResult(); });\n        this.unsafeHandlePartialRefetch(result);\n        return this.toQueryResult(result);\n    };\n    InternalState.prototype.useOptions = function (options) {\n        var _a;\n        var watchQueryOptions = this.createWatchQueryOptions(this.queryHookOptions = options);\n        var currentWatchQueryOptions = this.watchQueryOptions;\n        if (!equal(watchQueryOptions, currentWatchQueryOptions)) {\n            this.watchQueryOptions = watchQueryOptions;\n            if (currentWatchQueryOptions && this.observable) {\n                this.observable.reobserve(this.getObsQueryOptions());\n                this.previousData = ((_a = this.result) === null || _a === void 0 ? void 0 : _a.data) || this.previousData;\n                this.result = void 0;\n            }\n        }\n        this.onCompleted = options.onCompleted || InternalState.prototype.onCompleted;\n        this.onError = options.onError || InternalState.prototype.onError;\n        if ((this.renderPromises || this.client.disableNetworkFetches) &&\n            this.queryHookOptions.ssr === false &&\n            !this.queryHookOptions.skip) {\n            this.result = this.ssrDisabledResult;\n        }\n        else if (this.queryHookOptions.skip ||\n            this.watchQueryOptions.fetchPolicy === 'standby') {\n            this.result = this.skipStandbyResult;\n        }\n        else if (this.result === this.ssrDisabledResult ||\n            this.result === this.skipStandbyResult) {\n            this.result = void 0;\n        }\n    };\n    InternalState.prototype.getObsQueryOptions = function () {\n        var toMerge = [];\n        var globalDefaults = this.client.defaultOptions.watchQuery;\n        if (globalDefaults)\n            toMerge.push(globalDefaults);\n        if (this.queryHookOptions.defaultOptions) {\n            toMerge.push(this.queryHookOptions.defaultOptions);\n        }\n        toMerge.push(compact(this.observable && this.observable.options, this.watchQueryOptions));\n        return toMerge.reduce(mergeOptions);\n    };\n    InternalState.prototype.createWatchQueryOptions = function (_a) {\n        var _b;\n        if (_a === void 0) { _a = {}; }\n        var skip = _a.skip, ssr = _a.ssr, onCompleted = _a.onCompleted, onError = _a.onError, defaultOptions = _a.defaultOptions, otherOptions = __rest(_a, [\"skip\", \"ssr\", \"onCompleted\", \"onError\", \"defaultOptions\"]);\n        var watchQueryOptions = Object.assign(otherOptions, { query: this.query });\n        if (this.renderPromises &&\n            (watchQueryOptions.fetchPolicy === 'network-only' ||\n                watchQueryOptions.fetchPolicy === 'cache-and-network')) {\n            watchQueryOptions.fetchPolicy = 'cache-first';\n        }\n        if (!watchQueryOptions.variables) {\n            watchQueryOptions.variables = {};\n        }\n        if (skip) {\n            var _c = watchQueryOptions.fetchPolicy, fetchPolicy = _c === void 0 ? this.getDefaultFetchPolicy() : _c, _d = watchQueryOptions.initialFetchPolicy, initialFetchPolicy = _d === void 0 ? fetchPolicy : _d;\n            Object.assign(watchQueryOptions, {\n                initialFetchPolicy: initialFetchPolicy,\n                fetchPolicy: 'standby',\n            });\n        }\n        else if (!watchQueryOptions.fetchPolicy) {\n            watchQueryOptions.fetchPolicy =\n                ((_b = this.observable) === null || _b === void 0 ? void 0 : _b.options.initialFetchPolicy) ||\n                    this.getDefaultFetchPolicy();\n        }\n        return watchQueryOptions;\n    };\n    InternalState.prototype.getDefaultFetchPolicy = function () {\n        var _a, _b;\n        return (((_a = this.queryHookOptions.defaultOptions) === null || _a === void 0 ? void 0 : _a.fetchPolicy) ||\n            ((_b = this.client.defaultOptions.watchQuery) === null || _b === void 0 ? void 0 : _b.fetchPolicy) ||\n            \"cache-first\");\n    };\n    InternalState.prototype.onCompleted = function (data) { };\n    InternalState.prototype.onError = function (error) { };\n    InternalState.prototype.useObservableQuery = function () {\n        var obsQuery = this.observable =\n            this.renderPromises\n                && this.renderPromises.getSSRObservable(this.watchQueryOptions)\n                || this.observable\n                || this.client.watchQuery(this.getObsQueryOptions());\n        this.obsQueryFields = useMemo(function () { return ({\n            refetch: obsQuery.refetch.bind(obsQuery),\n            reobserve: obsQuery.reobserve.bind(obsQuery),\n            fetchMore: obsQuery.fetchMore.bind(obsQuery),\n            updateQuery: obsQuery.updateQuery.bind(obsQuery),\n            startPolling: obsQuery.startPolling.bind(obsQuery),\n            stopPolling: obsQuery.stopPolling.bind(obsQuery),\n            subscribeToMore: obsQuery.subscribeToMore.bind(obsQuery),\n        }); }, [obsQuery]);\n        var ssrAllowed = !(this.queryHookOptions.ssr === false ||\n            this.queryHookOptions.skip);\n        if (this.renderPromises && ssrAllowed) {\n            this.renderPromises.registerSSRObservable(obsQuery);\n            if (obsQuery.getCurrentResult().loading) {\n                this.renderPromises.addObservableQueryPromise(obsQuery);\n            }\n        }\n        return obsQuery;\n    };\n    InternalState.prototype.setResult = function (nextResult) {\n        var previousResult = this.result;\n        if (previousResult && previousResult.data) {\n            this.previousData = previousResult.data;\n        }\n        this.result = nextResult;\n        this.forceUpdate();\n        this.handleErrorOrCompleted(nextResult);\n    };\n    InternalState.prototype.handleErrorOrCompleted = function (result) {\n        var _this = this;\n        if (!result.loading) {\n            var error_1 = this.toApolloError(result);\n            Promise.resolve().then(function () {\n                if (error_1) {\n                    _this.onError(error_1);\n                }\n                else if (result.data) {\n                    _this.onCompleted(result.data);\n                }\n            }).catch(function (error) {\n                __DEV__ && invariant.warn(error);\n            });\n        }\n    };\n    InternalState.prototype.toApolloError = function (result) {\n        return isNonEmptyArray(result.errors)\n            ? new ApolloError({ graphQLErrors: result.errors })\n            : result.error;\n    };\n    InternalState.prototype.getCurrentResult = function () {\n        if (!this.result) {\n            this.handleErrorOrCompleted(this.result = this.observable.getCurrentResult());\n        }\n        return this.result;\n    };\n    InternalState.prototype.toQueryResult = function (result) {\n        var queryResult = this.toQueryResultCache.get(result);\n        if (queryResult)\n            return queryResult;\n        var data = result.data, partial = result.partial, resultWithoutPartial = __rest(result, [\"data\", \"partial\"]);\n        this.toQueryResultCache.set(result, queryResult = __assign(__assign(__assign({ data: data }, resultWithoutPartial), this.obsQueryFields), { client: this.client, observable: this.observable, variables: this.observable.variables, called: !this.queryHookOptions.skip, previousData: this.previousData }));\n        if (!queryResult.error && isNonEmptyArray(result.errors)) {\n            queryResult.error = new ApolloError({ graphQLErrors: result.errors });\n        }\n        return queryResult;\n    };\n    InternalState.prototype.unsafeHandlePartialRefetch = function (result) {\n        if (result.partial &&\n            this.queryHookOptions.partialRefetch &&\n            !result.loading &&\n            (!result.data || Object.keys(result.data).length === 0) &&\n            this.observable.options.fetchPolicy !== 'cache-only') {\n            Object.assign(result, {\n                loading: true,\n                networkStatus: NetworkStatus.refetch,\n            });\n            this.observable.refetch();\n        }\n    };\n    return InternalState;\n}());\n//# sourceMappingURL=useQuery.js.map","import { __assign } from \"tslib\";\nimport { useCallback, useMemo, useRef } from 'react';\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { useInternalState } from \"./useQuery.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nvar EAGER_METHODS = [\n    'refetch',\n    'reobserve',\n    'fetchMore',\n    'updateQuery',\n    'startPolling',\n    'subscribeToMore',\n];\nexport function useLazyQuery(query, options) {\n    var _a;\n    var execOptionsRef = useRef();\n    var optionsRef = useRef();\n    var queryRef = useRef();\n    var merged = execOptionsRef.current ? mergeOptions(options, execOptionsRef.current) : options;\n    var document = (_a = merged === null || merged === void 0 ? void 0 : merged.query) !== null && _a !== void 0 ? _a : query;\n    optionsRef.current = merged;\n    queryRef.current = document;\n    var internalState = useInternalState(useApolloClient(options && options.client), document);\n    var useQueryResult = internalState.useQuery(__assign(__assign({}, merged), { skip: !execOptionsRef.current }));\n    var initialFetchPolicy = useQueryResult.observable.options.initialFetchPolicy ||\n        internalState.getDefaultFetchPolicy();\n    var result = Object.assign(useQueryResult, {\n        called: !!execOptionsRef.current,\n    });\n    var eagerMethods = useMemo(function () {\n        var eagerMethods = {};\n        var _loop_1 = function (key) {\n            var method = result[key];\n            eagerMethods[key] = function () {\n                if (!execOptionsRef.current) {\n                    execOptionsRef.current = Object.create(null);\n                    internalState.forceUpdate();\n                }\n                return method.apply(this, arguments);\n            };\n        };\n        for (var _i = 0, EAGER_METHODS_1 = EAGER_METHODS; _i < EAGER_METHODS_1.length; _i++) {\n            var key = EAGER_METHODS_1[_i];\n            _loop_1(key);\n        }\n        return eagerMethods;\n    }, []);\n    Object.assign(result, eagerMethods);\n    var execute = useCallback(function (executeOptions) {\n        execOptionsRef.current = executeOptions ? __assign(__assign({}, executeOptions), { fetchPolicy: executeOptions.fetchPolicy || initialFetchPolicy }) : {\n            fetchPolicy: initialFetchPolicy,\n        };\n        var options = mergeOptions(optionsRef.current, __assign({ query: queryRef.current }, execOptionsRef.current));\n        var promise = internalState\n            .executeQuery(__assign(__assign({}, options), { skip: false }))\n            .then(function (queryResult) { return Object.assign(queryResult, eagerMethods); });\n        promise.catch(function () { });\n        return promise;\n    }, []);\n    return [execute, result];\n}\n//# sourceMappingURL=useLazyQuery.js.map","import { __assign } from \"tslib\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { mergeOptions, } from \"../../core/index.js\";\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nexport function useMutation(mutation, options) {\n    var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n    verifyDocumentType(mutation, DocumentType.Mutation);\n    var _a = useState({\n        called: false,\n        loading: false,\n        client: client,\n    }), result = _a[0], setResult = _a[1];\n    var ref = useRef({\n        result: result,\n        mutationId: 0,\n        isMounted: true,\n        client: client,\n        mutation: mutation,\n        options: options,\n    });\n    {\n        Object.assign(ref.current, { client: client, options: options, mutation: mutation });\n    }\n    var execute = useCallback(function (executeOptions) {\n        if (executeOptions === void 0) { executeOptions = {}; }\n        var _a = ref.current, options = _a.options, mutation = _a.mutation;\n        var baseOptions = __assign(__assign({}, options), { mutation: mutation });\n        var client = executeOptions.client || ref.current.client;\n        if (!ref.current.result.loading && !baseOptions.ignoreResults && ref.current.isMounted) {\n            setResult(ref.current.result = {\n                loading: true,\n                error: void 0,\n                data: void 0,\n                called: true,\n                client: client,\n            });\n        }\n        var mutationId = ++ref.current.mutationId;\n        var clientOptions = mergeOptions(baseOptions, executeOptions);\n        return client.mutate(clientOptions).then(function (response) {\n            var _a;\n            var data = response.data, errors = response.errors;\n            var error = errors && errors.length > 0\n                ? new ApolloError({ graphQLErrors: errors })\n                : void 0;\n            if (mutationId === ref.current.mutationId &&\n                !clientOptions.ignoreResults) {\n                var result_1 = {\n                    called: true,\n                    loading: false,\n                    data: data,\n                    error: error,\n                    client: client,\n                };\n                if (ref.current.isMounted && !equal(ref.current.result, result_1)) {\n                    setResult(ref.current.result = result_1);\n                }\n            }\n            var onCompleted = executeOptions.onCompleted || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onCompleted);\n            onCompleted === null || onCompleted === void 0 ? void 0 : onCompleted(response.data, clientOptions);\n            return response;\n        }).catch(function (error) {\n            var _a;\n            if (mutationId === ref.current.mutationId &&\n                ref.current.isMounted) {\n                var result_2 = {\n                    loading: false,\n                    error: error,\n                    data: void 0,\n                    called: true,\n                    client: client,\n                };\n                if (!equal(ref.current.result, result_2)) {\n                    setResult(ref.current.result = result_2);\n                }\n            }\n            var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\n            if (onError) {\n                onError(error, clientOptions);\n                return { data: void 0, errors: error };\n            }\n            throw error;\n        });\n    }, []);\n    var reset = useCallback(function () {\n        if (ref.current.isMounted) {\n            setResult({ called: false, loading: false, client: client });\n        }\n    }, []);\n    useEffect(function () {\n        ref.current.isMounted = true;\n        return function () {\n            ref.current.isMounted = false;\n        };\n    }, []);\n    return [execute, __assign({ reset: reset }, result)];\n}\n//# sourceMappingURL=useMutation.js.map","import React from 'react';\n\nconst LoadingDots = (): JSX.Element => {\n  const firstDotStyles = { animationDelay: '-0.32s' };\n  const secondDotStyles = { animationDelay: '-0.16s' };\n  return (\n    <div className=\"flex items-center justify-center space-x-10\">\n      <div className=\"animate-ping w-5 h-5 bg-gray-700 rounded-full\" style={firstDotStyles}></div>\n      <div className=\"animate-ping w-5 h-5 bg-gray-700 rounded-full\" style={secondDotStyles}></div>\n      <div className=\"animate-ping w-5 h-5 bg-gray-700 rounded-full\"></div>\n    </div>\n  );\n};\n\nLoadingDots.displayName = 'LoadingDots';\nexport default LoadingDots;\n","export type Maybe<T> = T;\nexport type InputMaybe<T> = T;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A valid absolute (starting with either a valid protocol or a leading www) or relative (with a leading slash) URL string */\n  AbsoluteOrRelativeURL: string;\n  /** Date scalar type */\n  Date: string;\n  /** Hex Color scalar type */\n  HexColor: string;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** A valid relative URL string with a leading slash (/) */\n  RelativeURL: string;\n  /** Slug scalar type */\n  Slug: string;\n  /** A valid absolute URL string starting with either a valid protocol or a leading www */\n  URL: string;\n};\n\nexport enum AccessLevel {\n  EmailCaptureOpen = 'emailCaptureOpen',\n  Open = 'open',\n  StudentsOnly = 'studentsOnly'\n}\n\nexport type Aggregation = {\n  __typename?: 'Aggregation';\n  buckets?: Maybe<Array<Maybe<AggregationBucket>>>;\n  key?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n};\n\nexport type AggregationBucket = {\n  __typename?: 'AggregationBucket';\n  count?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  query?: Maybe<Scalars['String']>;\n  value?: Maybe<Scalars['String']>;\n};\n\nexport type AllocatedLearningPath = {\n  __typename?: 'AllocatedLearningPath';\n  learningPath?: Maybe<LearningPath>;\n  learningPathId: Scalars['ID'];\n};\n\nexport type AllocatedLicense = {\n  __typename?: 'AllocatedLicense';\n  license?: Maybe<License>;\n  licenseId: Scalars['ID'];\n  licenseRole: AllocatedLicenseRole;\n  status?: Maybe<Scalars['String']>;\n};\n\nexport enum AllocatedLicenseRole {\n  Manager = 'manager',\n  Student = 'student'\n}\n\nexport enum AlternativePricingType {\n  Membership = 'membership'\n}\n\nexport type AppearanceSettings = {\n  __typename?: 'AppearanceSettings';\n  accentColor?: Maybe<Scalars['HexColor']>;\n  altFont?: Maybe<Scalars['String']>;\n  backgroundAsset?: Maybe<Scalars['String']>;\n  backgroundAssetTiled?: Maybe<Scalars['Boolean']>;\n  company?: Maybe<Company>;\n  customCss?: Maybe<Scalars['String']>;\n  font?: Maybe<Scalars['String']>;\n  globalNavigationLinks?: Maybe<Array<Maybe<GlobalNavigationLink>>>;\n  id: Scalars['ID'];\n  linkColor?: Maybe<Scalars['HexColor']>;\n  logoAsset?: Maybe<Scalars['URL']>;\n  retinaLogo?: Maybe<Scalars['Boolean']>;\n  secondaryColor?: Maybe<Scalars['HexColor']>;\n};\n\nexport type ArchivedContent = {\n  __typename?: 'ArchivedContent';\n  archivedAt?: Maybe<Scalars['Date']>;\n  company?: Maybe<Company>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  reinstatable: Scalars['Boolean'];\n  resource?: Maybe<Scalars['ID']>;\n  resourceType?: Maybe<Scalars['String']>;\n  status?: Maybe<Scalars['String']>;\n  user?: Maybe<Scalars['ID']>;\n  waitlistActive: Scalars['Boolean'];\n};\n\nexport type ArticlePage = PageEntity & {\n  __typename?: 'ArticlePage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  languages: Array<ArticlePageLanguage>;\n  lessonId: Scalars['ID'];\n  publishDate?: Maybe<Scalars['Date']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n  videoAsset?: Maybe<Scalars['String']>;\n};\n\nexport type ArticlePageLanguage = {\n  __typename?: 'ArticlePageLanguage';\n  allowAudioDownload?: Maybe<Scalars['Boolean']>;\n  audioAsset?: Maybe<Scalars['String']>;\n  audioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  body?: Maybe<Scalars['String']>;\n  copyright?: Maybe<Scalars['String']>;\n  externalUrl?: Maybe<Scalars['String']>;\n  externalUrlCallToAction?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  language?: Maybe<Scalars['String']>;\n  pdfAsset?: Maybe<Scalars['String']>;\n  pdfAssetSecondary?: Maybe<Scalars['String']>;\n  pdfAssetSecondaryUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  pdfAssetTitle?: Maybe<Scalars['String']>;\n  pdfAssetTitleSecondary?: Maybe<Scalars['String']>;\n  pdfAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  subtitle?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type AssessmentPageEntity = {\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  instructorAssessment?: Maybe<Scalars['Boolean']>;\n  lessonId: Scalars['ID'];\n  questions: Array<QuizQuestion>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type AssignmentPage = PageEntity & {\n  __typename?: 'AssignmentPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  allowExternalActivity?: Maybe<Scalars['Boolean']>;\n  allowVideoSubmission?: Maybe<Scalars['Boolean']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  dueAt?: Maybe<Scalars['Date']>;\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  enableDiscussionAssignment?: Maybe<Scalars['Boolean']>;\n  externalActivityButtonText?: Maybe<Scalars['String']>;\n  externalActivityButtonUrl?: Maybe<Scalars['String']>;\n  hideDiscussionUntilCommentPost?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  preventProgression?: Maybe<Scalars['Boolean']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type AudioPage = PageEntity & {\n  __typename?: 'AudioPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  audioAsset?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  sidebarIsHidden?: Maybe<Scalars['Boolean']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type AwardType = {\n  __typename?: 'AwardType';\n  deleted?: Maybe<Scalars['Boolean']>;\n  icon?: Maybe<AwardTypeIcon>;\n  id: Scalars['ID'];\n  includeOnDashboard?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Scalars['String']>;\n  pluralLabel?: Maybe<Scalars['String']>;\n};\n\nexport enum AwardTypeIcon {\n  Businessuser = 'businessuser',\n  Check = 'check',\n  Checkfile = 'checkfile',\n  Flag = 'flag',\n  FullStar = 'fullStar',\n  Gift = 'gift',\n  Globe = 'globe',\n  HalfStar = 'halfStar',\n  Heart = 'heart',\n  Lightbulb = 'lightbulb',\n  Like = 'like',\n  Loading = 'loading',\n  Signpost = 'signpost',\n  Star = 'star',\n  Stopwatch = 'stopwatch',\n  Tag = 'tag'\n}\n\nexport type BackgroundJob = {\n  __typename?: 'BackgroundJob';\n  createdAt: Scalars['Date'];\n  description?: Maybe<Scalars['String']>;\n  errorMessage?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  repeatable: Scalars['Boolean'];\n  status: BackgroundJobStatus;\n  type: Scalars['String'];\n};\n\nexport enum BackgroundJobStatus {\n  Complete = 'complete',\n  Failed = 'failed',\n  Processing = 'processing',\n  Queued = 'queued'\n}\n\nexport type Block = {\n  __typename?: 'Block';\n  id: Scalars['ID'];\n};\n\nexport type Bookmark = {\n  __typename?: 'Bookmark';\n  bookmarkFolder: BookmarkFolder;\n  course: Course;\n  createdAt: Scalars['Date'];\n  deleted: Scalars['Boolean'];\n  id: Scalars['ID'];\n  note?: Maybe<Scalars['String']>;\n  topic?: Maybe<Topic>;\n  topicId?: Maybe<Scalars['ID']>;\n  user: User;\n};\n\nexport type BookmarkFolder = {\n  __typename?: 'BookmarkFolder';\n  bookmarkCount?: Maybe<Scalars['Int']>;\n  bookmarks?: Maybe<Array<Bookmark>>;\n  defaultFolder?: Maybe<Scalars['Boolean']>;\n  deleted: Scalars['Boolean'];\n  externalResourceId?: Maybe<Scalars['ID']>;\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  user: User;\n};\n\nexport type Bundle = {\n  __typename?: 'Bundle';\n  annualPlanId?: Maybe<Scalars['ID']>;\n  annualPriceInCents?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  needShippingAddress?: Maybe<Scalars['Boolean']>;\n  planId?: Maybe<Scalars['ID']>;\n  priceInCents?: Maybe<Scalars['Int']>;\n  purchasable?: Maybe<Scalars['Boolean']>;\n  slug: Scalars['Slug'];\n  taxable?: Maybe<Scalars['Boolean']>;\n  variations?: Maybe<Array<Maybe<BundleVariation>>>;\n  weight?: Maybe<Scalars['Float']>;\n};\n\nexport type BundleVariation = {\n  __typename?: 'BundleVariation';\n  label?: Maybe<Scalars['String']>;\n};\n\nexport type CatalogCategory = {\n  __typename?: 'CatalogCategory';\n  id: Scalars['ID'];\n  label: Scalars['String'];\n  slug: Scalars['Slug'];\n  subcategories?: Maybe<Array<Maybe<CatalogSubcategory>>>;\n};\n\nexport type CatalogContent = {\n  __typename?: 'CatalogContent';\n  contentItems?: Maybe<Array<Content>>;\n  meta: CatalogMeta;\n};\n\nexport type CatalogMeta = {\n  __typename?: 'CatalogMeta';\n  aggregations?: Maybe<Array<Aggregation>>;\n  contentTypeFilterEnabled: Scalars['Boolean'];\n  contentTypes?: Maybe<Array<Scalars['String']>>;\n  debug?: Maybe<Scalars['Boolean']>;\n  displayAuthorsEnabled: Scalars['Boolean'];\n  displayBundle?: Maybe<Bundle>;\n  displayDescriptionOnCalendar: Scalars['Boolean'];\n  displayStartDateEnabled: Scalars['Boolean'];\n  displayTypeCalendarEnabled: Scalars['Boolean'];\n  displayTypeGridEnabled: Scalars['Boolean'];\n  displayTypeListEnabled: Scalars['Boolean'];\n  hasMore: Scalars['Boolean'];\n  isCurated: Scalars['Boolean'];\n  queryCustomFields: Scalars['JSON'];\n  resultsDisplayType: ContentItemDisplayType;\n  /** @deprecated Use `selectedSortColumn` and `selectedSortDirection` */\n  selectedSort: Scalars['String'];\n  selectedSortColumn: SortColumn;\n  selectedSortDirection: SortDirection;\n  sortCourseStartDateEnabled: Scalars['Boolean'];\n  sortCreatedAtEnabled: Scalars['Boolean'];\n  sortPublishDateEnabled: Scalars['Boolean'];\n  sortRelevanceEnabled: Scalars['Boolean'];\n  sortTitleEnabled: Scalars['Boolean'];\n  sortUpdatedAtEnabled: Scalars['Boolean'];\n  tokenLabel?: Maybe<Scalars['String']>;\n  total?: Maybe<Scalars['Int']>;\n};\n\nexport type CatalogSettings = {\n  __typename?: 'CatalogSettings';\n  boostRibbon?: Maybe<Scalars['String']>;\n  categories?: Maybe<Array<CatalogCategory>>;\n  contentTypeFilterEnabled?: Maybe<Scalars['Boolean']>;\n  defaultQuery?: Maybe<Scalars['String']>;\n  defaultSort?: Maybe<Scalars['String']>;\n  displayAuthorsEnabled?: Maybe<Scalars['Boolean']>;\n  displayBundle?: Maybe<Array<Bundle>>;\n  displayBundleId?: Maybe<Scalars['ID']>;\n  displayStartDateEnabled?: Maybe<Scalars['Boolean']>;\n  displayTypeCalendarEnabled?: Maybe<Scalars['Boolean']>;\n  displayTypeGridEnabled?: Maybe<Scalars['Boolean']>;\n  displayTypeListEnabled?: Maybe<Scalars['Boolean']>;\n  hidePastEvents?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  onlyDisplayAccessibleContent?: Maybe<Scalars['Boolean']>;\n  resultsDisplayType: ContentItemDisplayType;\n  sortCourseStartDateEnabled?: Maybe<Scalars['Boolean']>;\n  sortCreatedAtEnabled?: Maybe<Scalars['Boolean']>;\n  sortPublishDateEnabled?: Maybe<Scalars['Boolean']>;\n  sortRelevanceEnabled?: Maybe<Scalars['Boolean']>;\n  sortTitleEnabled?: Maybe<Scalars['Boolean']>;\n  sortUpdatedAtEnabled?: Maybe<Scalars['Boolean']>;\n};\n\nexport type CatalogSubcategory = {\n  __typename?: 'CatalogSubcategory';\n  description?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  label: Scalars['String'];\n  query: Scalars['String'];\n  slug: Scalars['Slug'];\n};\n\nexport type Certificate = {\n  __typename?: 'Certificate';\n  certificateTemplate?: Maybe<CertificateTemplate>;\n  contentItem?: Maybe<Content>;\n  deleted: Scalars['Boolean'];\n  didExpire: Scalars['Boolean'];\n  expirationDate?: Maybe<Scalars['Date']>;\n  externalResourceTitle?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  identifier?: Maybe<Scalars['String']>;\n  isExpired: Scalars['Boolean'];\n  isExternal: Scalars['Boolean'];\n  issuedAt: Scalars['Date'];\n  pdfAsset?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  progressWasReset: Scalars['Boolean'];\n  recertificationDate?: Maybe<Scalars['Date']>;\n  resource?: Maybe<CertificateResource>;\n  resourceId?: Maybe<Scalars['ID']>;\n  resourceType?: Maybe<CertificateResourceType>;\n  resourceTypeLabel?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  url: Scalars['AbsoluteOrRelativeURL'];\n  user: User;\n};\n\nexport enum CertificateDateFormatType {\n  /** DD-MM-YYYY (ex. 25-07-2019) */\n  EuroShort = 'euroShort',\n  /** YYYY-MM-DD (ex. 2019-07-25) */\n  Iso8601 = 'iso8601',\n  /** MMMM DD, YYYY (ex. July 25, 2019) */\n  UsLong = 'usLong',\n  /** MM-DD-YYYY (ex. 07-25-2019) */\n  UsShort = 'usShort'\n}\n\nexport type CertificateField = {\n  __typename?: 'CertificateField';\n  awardType?: Maybe<AwardType>;\n  awardTypeId?: Maybe<Scalars['ID']>;\n  customField?: Maybe<CustomField>;\n  customFieldSlug?: Maybe<Scalars['Slug']>;\n  dateFormat?: Maybe<CertificateDateFormatType>;\n  hasIdentifierPrefix?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  identifierBodyLength?: Maybe<Scalars['Int']>;\n  identifierPrefix?: Maybe<Scalars['String']>;\n  includeOnExternalCertificate: Scalars['Boolean'];\n  includeOnTranscript: Scalars['Boolean'];\n  label: Scalars['String'];\n  sessionCustomContentFieldSlug?: Maybe<Scalars['Slug']>;\n  text?: Maybe<Scalars['String']>;\n  type: CertificateFieldType;\n  userCustomField?: Maybe<UserCustomField>;\n  userCustomFieldSlug?: Maybe<Scalars['Slug']>;\n};\n\nexport enum CertificateFieldType {\n  /** Award Type */\n  AwardLabel = 'awardLabel',\n  /** Content Completion Date */\n  ContentCompletionDate = 'contentCompletionDate',\n  /** Custom Content Field */\n  ContentFieldLabel = 'contentFieldLabel',\n  /** Content Start Date */\n  ContentStartDate = 'contentStartDate',\n  /** Content Title */\n  CourseLabel = 'courseLabel',\n  /** Certificate Issued Date */\n  DateLabel = 'dateLabel',\n  /** Certificate Expiration Date */\n  ExpirationDateLabel = 'expirationDateLabel',\n  /** Unique Identifier */\n  Identifier = 'identifier',\n  /** Learner Client Name */\n  LearnerClientNameLabel = 'learnerClientNameLabel',\n  /** Learner Name */\n  NameLabel = 'nameLabel',\n  /** Session Custom Content Field */\n  SessionCustomContentField = 'sessionCustomContentField',\n  /** Short Text */\n  TextLabel = 'textLabel',\n  /** Custom Learner Field */\n  UserFieldLabel = 'userFieldLabel',\n  /** Learner Ref 1 */\n  UserRef1Label = 'userRef1Label',\n  /** Learner Ref 2 */\n  UserRef2Label = 'userRef2Label',\n  /** Learner Ref 3 */\n  UserRef3Label = 'userRef3Label',\n  /** Learner Ref 4 */\n  UserRef4Label = 'userRef4Label',\n  /** Learner Ref 5 */\n  UserRef5Label = 'userRef5Label',\n  /** Learner Ref 6 */\n  UserRef6Label = 'userRef6Label',\n  /** Learner Ref 7 */\n  UserRef7Label = 'userRef7Label',\n  /** Learner Ref 8 */\n  UserRef8Label = 'userRef8Label',\n  /** Learner Ref 9 */\n  UserRef9Label = 'userRef9Label',\n  /** Learner Ref 10 */\n  UserRef10Label = 'userRef10Label',\n  /** Link to View Certificate */\n  ViewCertificateLink = 'viewCertificateLink'\n}\n\nexport type CertificateResource = Course | LearningPath;\n\nexport enum CertificateResourceType {\n  Course = 'course',\n  LearningPath = 'learningPath'\n}\n\nexport type CertificateTemplate = {\n  __typename?: 'CertificateTemplate';\n  asset?: Maybe<Scalars['URL']>;\n  assetLibraryId?: Maybe<Scalars['ID']>;\n  customCss?: Maybe<Scalars['String']>;\n  expirationDate?: Maybe<Scalars['Date']>;\n  expirationDays?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  isExpired: Scalars['Boolean'];\n  labels?: Maybe<Array<Maybe<CertificateTemplateLabel>>>;\n  recertificationAction?: Maybe<CertificateTemplateRecertificationActionType>;\n  recertificationActionText?: Maybe<Scalars['String']>;\n  recertificationActionUrl?: Maybe<Scalars['URL']>;\n  recertificationAfterDays?: Maybe<Scalars['Int']>;\n  recertificationAutoReset?: Maybe<Scalars['Boolean']>;\n  recertificationInstructions?: Maybe<Scalars['String']>;\n  resource: CertificateTemplateResource;\n  resourceType: CertificateTemplateResourceType;\n  supplementalAssets?: Maybe<Array<Scalars['URL']>>;\n  title?: Maybe<Scalars['String']>;\n  userCustomField?: Maybe<UserCustomField>;\n  userCustomFieldSlug?: Maybe<Scalars['Slug']>;\n  userCustomFieldValue?: Maybe<Scalars['String']>;\n};\n\nexport type CertificateTemplateLabel = {\n  __typename?: 'CertificateTemplateLabel';\n  certificateField?: Maybe<CertificateField>;\n  certificateFieldId: Scalars['ID'];\n  fontColor: Scalars['HexColor'];\n  fontSize: Scalars['Int'];\n  id: Scalars['ID'];\n  textAlign: TextAlignment;\n  x: Scalars['Int'];\n  y: Scalars['Int'];\n};\n\nexport enum CertificateTemplateRecertificationActionType {\n  /** Custom action text & URL */\n  ActionUrl = 'actionUrl',\n  /** Recertify in current Session */\n  RecertifyInSession = 'recertifyInSession',\n  /** Reset progress in Content */\n  ResetProgress = 'resetProgress'\n}\n\nexport type CertificateTemplateResource = Course | LearningPath;\n\nexport enum CertificateTemplateResourceType {\n  Course = 'course',\n  LearningPath = 'learningPath'\n}\n\nexport type CertificateUploadField = {\n  awardAmount?: InputMaybe<Scalars['Float']>;\n  awardTypeId?: InputMaybe<Scalars['ID']>;\n  certificateFieldId: Scalars['ID'];\n  date?: InputMaybe<Scalars['Date']>;\n  type: CertificateFieldType;\n  value?: InputMaybe<Scalars['String']>;\n};\n\nexport type Client = {\n  __typename?: 'Client';\n  allocatedCredits?: Maybe<Scalars['Float']>;\n  appearance?: Maybe<AppearanceSettings>;\n  autoFilterForSelectedLanguage?: Maybe<Scalars['Boolean']>;\n  catalog?: Maybe<CatalogSettings>;\n  clientSubscriptionNeedsSetup?: Maybe<Scalars['Boolean']>;\n  courseIds?: Maybe<Array<Scalars['ID']>>;\n  courseTagIds?: Maybe<Array<Scalars['ID']>>;\n  courseTags?: Maybe<Array<Tag>>;\n  courses?: Maybe<Array<Course>>;\n  createdAt?: Maybe<Scalars['Date']>;\n  currentBalance?: Maybe<Scalars['Float']>;\n  currentUserManagerAllocatedLicenseTree?: Maybe<Array<LicenseNode>>;\n  customHost?: Maybe<Scalars['String']>;\n  dashboardLayoutId?: Maybe<Scalars['ID']>;\n  defaultLanguage?: Maybe<Scalars['String']>;\n  disabled: Scalars['Boolean'];\n  emailLayout?: Maybe<EmailLayoutSettings>;\n  enableBranding: Scalars['Boolean'];\n  enableCommunitiesSegmentation?: Maybe<Scalars['Boolean']>;\n  enableContentDetailPage?: Maybe<Scalars['Boolean']>;\n  enableCreditPurchasing?: Maybe<Scalars['Boolean']>;\n  enableCustomEmailSettings?: Maybe<Scalars['Boolean']>;\n  enableDiscussions?: Maybe<Scalars['Boolean']>;\n  enableEcommerce: Scalars['Boolean'];\n  enableGlobalLinks: Scalars['Boolean'];\n  enableLicenseDashboards?: Maybe<Scalars['Boolean']>;\n  enableNavLinks: Scalars['Boolean'];\n  enableOnboardingSurvey: Scalars['Boolean'];\n  enableRecommendationAssessment?: Maybe<Scalars['Boolean']>;\n  enableSegmentation: Scalars['Boolean'];\n  id: Scalars['ID'];\n  languageSelectorEnabled?: Maybe<Scalars['Boolean']>;\n  languages?: Maybe<Array<Scalars['String']>>;\n  learningPathIds?: Maybe<Array<Scalars['ID']>>;\n  learningPaths?: Maybe<Array<LearningPath>>;\n  licenseEndDate?: Maybe<Scalars['Date']>;\n  licenseTree?: Maybe<Array<LicenseNode>>;\n  licenses?: Maybe<Array<License>>;\n  name: Scalars['String'];\n  notificationEmails?: Maybe<Scalars['String']>;\n  panorama: Scalars['Boolean'];\n  pendingJobs?: Maybe<Array<Maybe<BackgroundJob>>>;\n  primaryLicense?: Maybe<License>;\n  purchasableContentIds?: Maybe<Array<Scalars['ID']>>;\n  purchasableTags?: Maybe<Array<Tag>>;\n  redemptionLayoutId?: Maybe<Scalars['ID']>;\n  schoolName?: Maybe<Scalars['String']>;\n  seatsAllocatedCount?: Maybe<Scalars['Int']>;\n  seatsLimit?: Maybe<Scalars['Int']>;\n  seatsUsedCount?: Maybe<Scalars['Int']>;\n  secretKey?: Maybe<Scalars['String']>;\n  sku?: Maybe<Scalars['String']>;\n  slug: Scalars['Slug'];\n  sso?: Maybe<SsoSettings>;\n  startingBalance?: Maybe<Scalars['Float']>;\n  tags?: Maybe<Array<Tag>>;\n  updatedAt?: Maybe<Scalars['Date']>;\n};\n\nexport type Company = {\n  __typename?: 'Company';\n  appearanceSettings?: Maybe<AppearanceSettings>;\n  catalogBlock?: Maybe<Block>;\n  catalogVisibilityEmails?: Maybe<Array<Scalars['String']>>;\n  copyrightName?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  micrositeFooter?: Maybe<MicrositeBlock>;\n  micrositeHeader?: Maybe<MicrositeBlock>;\n  name?: Maybe<Scalars['String']>;\n  organization?: Maybe<Organization>;\n  rootLayout?: Maybe<RootLayout>;\n  schoolName?: Maybe<Scalars['String']>;\n  subdomain?: Maybe<Scalars['String']>;\n};\n\nexport type CompetencyAssessment = {\n  __typename?: 'CompetencyAssessment';\n  continueAfterTimerExpires: Scalars['Boolean'];\n  createdAt: Scalars['Date'];\n  failMessage?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  isGraded: Scalars['Boolean'];\n  minimumPassingPercentage?: Maybe<Scalars['Int']>;\n  passMessage?: Maybe<Scalars['String']>;\n  questions?: Maybe<Array<CompetencyAssessmentQuestion>>;\n  resourceItems?: Maybe<Array<CompetencyAssessmentResource>>;\n  resources?: Maybe<Array<Resource>>;\n  sku?: Maybe<Scalars['String']>;\n  timeLimitInSeconds?: Maybe<Scalars['Int']>;\n  title: Scalars['String'];\n  updatedAt: Scalars['Date'];\n};\n\nexport type CompetencyAssessmentQuestion = {\n  __typename?: 'CompetencyAssessmentQuestion';\n  body: Scalars['String'];\n  choices?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  mustSelectAllCorrectChoices: Scalars['Boolean'];\n  type: CompetencyAssessmentQuestionType;\n};\n\nexport enum CompetencyAssessmentQuestionType {\n  DropDown = 'dropDown',\n  MultipleChoice = 'multipleChoice',\n  SelectBoxes = 'selectBoxes'\n}\n\nexport type CompetencyAssessmentResource = Layout | LearningPath;\n\nexport type Content = {\n  __typename?: 'Content';\n  acceptBadgeUrl?: Maybe<Scalars['String']>;\n  altDescriptionBody?: Maybe<Scalars['String']>;\n  alternativePricingRef?: Maybe<Scalars['Int']>;\n  alternativePricingType?: Maybe<AlternativePricingType>;\n  asset?: Maybe<Scalars['String']>;\n  authors?: Maybe<Array<Maybe<Scalars['String']>>>;\n  authorsAndInstructors?: Maybe<Array<Scalars['String']>>;\n  availabilityStatus?: Maybe<Scalars['String']>;\n  badgeName?: Maybe<Scalars['String']>;\n  badgeUrl?: Maybe<Scalars['String']>;\n  bulkPurchasingEnabled?: Maybe<Scalars['Boolean']>;\n  canAddToQueue?: Maybe<Scalars['Boolean']>;\n  contentTypeAssetAspectRatio?: Maybe<Scalars['String']>;\n  contentTypeLabel?: Maybe<Scalars['String']>;\n  courseEndDate?: Maybe<Scalars['Date']>;\n  courseGracePeriodEnded: Scalars['Boolean'];\n  courseGroup?: Maybe<Scalars['String']>;\n  coursePresold: Scalars['Boolean'];\n  courseStartDate?: Maybe<Scalars['Date']>;\n  createdAt?: Maybe<Scalars['Date']>;\n  credlyBadgeExpiresAt?: Maybe<Scalars['Date']>;\n  currentUserMayReschedule: Scalars['Boolean'];\n  currentUserUnmetCoursePrerequisites?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  currentUserUnmetLearningPathPrerequisites?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  customFields?: Maybe<Scalars['JSON']>;\n  description?: Maybe<Scalars['String']>;\n  displayCourse?: Maybe<Scalars['ID']>;\n  displayCourseSlug?: Maybe<Scalars['Slug']>;\n  displayDate?: Maybe<Scalars['Date']>;\n  embeddedEnabled?: Maybe<Scalars['Boolean']>;\n  enrollmentCount?: Maybe<Scalars['Int']>;\n  enrollmentEndDate?: Maybe<Scalars['Date']>;\n  enrollmentStartDate?: Maybe<Scalars['Date']>;\n  expiresAt?: Maybe<Scalars['Date']>;\n  hasChildren: Scalars['Boolean'];\n  hideCourseDescription: Scalars['Boolean'];\n  id: Scalars['ID'];\n  imageUrl?: Maybe<Scalars['String']>;\n  isActive: Scalars['Boolean'];\n  issuedAt?: Maybe<Scalars['Date']>;\n  kind?: Maybe<ContentKind>;\n  language?: Maybe<Scalars['String']>;\n  location?: Maybe<Location>;\n  meetingStartDate?: Maybe<Scalars['Date']>;\n  metaDescription?: Maybe<Scalars['String']>;\n  metaTitle?: Maybe<Scalars['String']>;\n  priceInCents?: Maybe<Scalars['Int']>;\n  publishDate?: Maybe<Scalars['Date']>;\n  rating?: Maybe<Scalars['Int']>;\n  ribbon?: Maybe<Ribbon>;\n  seatsLimit?: Maybe<Scalars['Int']>;\n  sessionTitle?: Maybe<Scalars['String']>;\n  sku?: Maybe<Scalars['String']>;\n  slug: Scalars['Slug'];\n  source?: Maybe<Scalars['String']>;\n  state?: Maybe<Scalars['String']>;\n  status?: Maybe<Status>;\n  suggestedRetailPriceInCents?: Maybe<Scalars['Int']>;\n  tags?: Maybe<Array<Maybe<Tag>>>;\n  timeZone?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['Date']>;\n  url?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  waitlistCount?: Maybe<Scalars['Int']>;\n  waitlistingEnabled: Scalars['Boolean'];\n  waitlistingTriggered: Scalars['Boolean'];\n};\n\nexport type ContentGroup = {\n  __typename?: 'ContentGroup';\n  count: Scalars['Int'];\n  kind: ContentGroupKind;\n};\n\nexport enum ContentGroupKind {\n  ArchivedContentItems = 'archivedContentItems',\n  BookmarkFolders = 'bookmarkFolders',\n  Certificates = 'certificates',\n  CompletedItems = 'completedItems',\n  ContentItems = 'contentItems',\n  CredlyBadgeCourses = 'credlyBadgeCourses',\n  EventItems = 'eventItems',\n  LearningPaths = 'learningPaths',\n  WaitlistedCourses = 'waitlistedCourses'\n}\n\nexport enum ContentItemDisplayType {\n  Calendar = 'calendar',\n  Grid = 'grid',\n  List = 'list'\n}\n\nexport enum ContentKind {\n  Article = 'article',\n  Bundle = 'bundle',\n  Course = 'course',\n  CourseGroup = 'courseGroup',\n  DiscountGroup = 'discountGroup',\n  InPersonEvent = 'inPersonEvent',\n  InPersonEventCourse = 'inPersonEventCourse',\n  LearningPath = 'learningPath',\n  MicroCourse = 'microCourse',\n  PickableGroup = 'pickableGroup',\n  Product = 'product',\n  Sellable = 'sellable',\n  ShareableContentObject = 'shareableContentObject',\n  Video = 'video',\n  Webinar = 'webinar',\n  WebinarCourse = 'webinarCourse',\n  XApiObject = 'xApiObject'\n}\n\nexport type ContentType = {\n  __typename?: 'ContentType';\n  assetAspectRatio?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n};\n\nexport type Course = {\n  __typename?: 'Course';\n  accessDays?: Maybe<Scalars['Int']>;\n  alternativePricingRef?: Maybe<Scalars['Int']>;\n  alternativePricingType?: Maybe<AlternativePricingType>;\n  appearanceBlock?: Maybe<Scalars['ID']>;\n  appearanceHash?: Maybe<Scalars['String']>;\n  askLearnerPassword?: Maybe<Scalars['Boolean']>;\n  availabilityStatus?: Maybe<Scalars['String']>;\n  awardClaimingOptions?: Maybe<Array<CourseAwardClaimingOption>>;\n  balanceRequirement?: Maybe<Scalars['Float']>;\n  bulkPurchasingEnabled: Scalars['Boolean'];\n  completionTimePerPage?: Maybe<Scalars['Int']>;\n  confirmationBlock?: Maybe<Scalars['ID']>;\n  courseEndDate?: Maybe<Scalars['Date']>;\n  courseGroup?: Maybe<CourseGroup>;\n  courseStartDate?: Maybe<Scalars['Date']>;\n  createdAt?: Maybe<Scalars['Date']>;\n  currentUserHasAccess: Scalars['Boolean'];\n  customFields?: Maybe<Scalars['JSON']>;\n  discussionsEnabled?: Maybe<Scalars['Boolean']>;\n  displayMap: Scalars['Boolean'];\n  displayResults: Scalars['Boolean'];\n  embeddedEnabled?: Maybe<Scalars['Boolean']>;\n  enrollmentActive?: Maybe<Scalars['Boolean']>;\n  enrollmentEndDate?: Maybe<Scalars['Date']>;\n  enrollmentStartDate?: Maybe<Scalars['Date']>;\n  finalAssessment?: Maybe<Scalars['String']>;\n  forceLinearProgress?: Maybe<Scalars['Boolean']>;\n  freeWithRegistration?: Maybe<Scalars['Boolean']>;\n  fulfillmentCenter?: Maybe<Scalars['ID']>;\n  futurePublishDate?: Maybe<Scalars['Date']>;\n  galleryEnabled?: Maybe<Scalars['Boolean']>;\n  gracePeriodEndDate?: Maybe<Scalars['Date']>;\n  hasChildren: Scalars['Boolean'];\n  hasMultipleCurrencies: Scalars['Boolean'];\n  id: Scalars['ID'];\n  inPersonEventInfo?: Maybe<InPersonEventInfo>;\n  instructorAccessEnabled?: Maybe<Scalars['Boolean']>;\n  instructorAccessPriceInCents?: Maybe<Scalars['Int']>;\n  instructorEmails?: Maybe<Array<Maybe<Scalars['String']>>>;\n  isActive: Scalars['Boolean'];\n  isChild?: Maybe<Scalars['Boolean']>;\n  kind?: Maybe<CourseGroupKind>;\n  lastTierPriceInCents?: Maybe<Scalars['Int']>;\n  linkedWorkbookEnabled?: Maybe<Scalars['Boolean']>;\n  linkedWorkbookSkipEnabled?: Maybe<Scalars['Boolean']>;\n  location?: Maybe<Location>;\n  meetings?: Maybe<Array<Meeting>>;\n  meetingsOverviewEnabled?: Maybe<Scalars['Boolean']>;\n  parentCourseId?: Maybe<Scalars['ID']>;\n  paywallsBlock?: Maybe<Scalars['ID']>;\n  prerequisiteCourses?: Maybe<Array<Maybe<Course>>>;\n  prerequisiteLearningPaths?: Maybe<Array<Maybe<LearningPath>>>;\n  priceInCents?: Maybe<Scalars['Int']>;\n  prices: Array<ItemPrice>;\n  publishDate?: Maybe<Scalars['Date']>;\n  purchasable: Scalars['Boolean'];\n  resourcesEnabled?: Maybe<Scalars['Boolean']>;\n  roster?: Maybe<Scalars['Boolean']>;\n  rosterSubmittedDate?: Maybe<Scalars['Date']>;\n  sampleLesson?: Maybe<Lesson>;\n  sampleLessonId?: Maybe<Scalars['ID']>;\n  scormCollectUserDetails?: Maybe<Scalars['Boolean']>;\n  seatPackages?: Maybe<Array<SeatPackage>>;\n  seatTiers?: Maybe<Array<SeatTier>>;\n  seatsAllocatedCount: Scalars['Int'];\n  seatsLimit?: Maybe<Scalars['Int']>;\n  seatsLimitMet: Scalars['Boolean'];\n  seatsUsedCount: Scalars['Int'];\n  sections?: Maybe<Array<Maybe<Section>>>;\n  sessionIsTitled: Scalars['Boolean'];\n  showProgress?: Maybe<Scalars['Boolean']>;\n  showSyllabusWhileUnenrolled?: Maybe<Scalars['Boolean']>;\n  sku?: Maybe<Scalars['String']>;\n  slug: Scalars['Slug'];\n  status?: Maybe<Status>;\n  suggestedRetailPriceInCents?: Maybe<Scalars['Int']>;\n  superquizEnabled?: Maybe<Scalars['Boolean']>;\n  syllabusTitlesEnabled?: Maybe<Scalars['Boolean']>;\n  taxCategory?: Maybe<Scalars['ID']>;\n  taxable?: Maybe<Scalars['Boolean']>;\n  termsBlock?: Maybe<Scalars['ID']>;\n  title?: Maybe<Scalars['String']>;\n  topicGroup?: Maybe<Scalars['ID']>;\n  updatedAt?: Maybe<Scalars['Date']>;\n  waitlistActive?: Maybe<Scalars['Boolean']>;\n  waitlistCount?: Maybe<Scalars['Int']>;\n  waitlistingEnabled: Scalars['Boolean'];\n  waitlistingTriggered: Scalars['Boolean'];\n  webinarDates?: Maybe<Array<Maybe<DateRange>>>;\n  webinarDetails?: Maybe<WebinarBlock>;\n  webinarId?: Maybe<Scalars['String']>;\n  webinarTimeZone?: Maybe<Scalars['String']>;\n  workbookEnabled?: Maybe<Scalars['Boolean']>;\n};\n\nexport type CourseAwardClaimingOption = {\n  __typename?: 'CourseAwardClaimingOption';\n  awardAmounts?: Maybe<Array<Scalars['Float']>>;\n  awardType: AwardType;\n  awardTypeId: Scalars['ID'];\n  range: Scalars['String'];\n};\n\nexport type CourseCompletionCriteriaProgress = {\n  __typename?: 'CourseCompletionCriteriaProgress';\n  completed?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  percent: Scalars['Int'];\n  required?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  type?: Maybe<CourseCompletionCriteriaType>;\n};\n\nexport enum CourseCompletionCriteriaType {\n  /** Percentage of Page Viewed */\n  ArticlePercentViewed = 'articlePercentViewed',\n  /** Time Spent Viewing Page */\n  ArticleTimeViewedInSeconds = 'articleTimeViewedInSeconds',\n  /** Bongo Assignment Completed */\n  BongoAssignmentCompleted = 'bongoAssignmentCompleted',\n  /** Assessment Passed */\n  CourseAssessmentPassed = 'courseAssessmentPassed',\n  /** Assignment Completed */\n  CourseAssignmentComplete = 'courseAssignmentComplete',\n  /** Meeting Attended */\n  CourseMeetingAttended = 'courseMeetingAttended',\n  /** Percentage of Pages Viewed */\n  CoursePercentViewed = 'coursePercentViewed',\n  /** Page Viewed */\n  CourseTopicViewed = 'courseTopicViewed',\n  /** SCORM Complete */\n  ScormComplete = 'scormComplete',\n  /** Survey Gizmo Complete */\n  SurveyGizmoComplete = 'surveyGizmoComplete',\n  /** Percentage of Video Viewed */\n  VideoPercentViewed = 'videoPercentViewed',\n  /** Video topic of viewed */\n  VideoTopicId = 'videoTopicId',\n  /** xAPI Complete */\n  XApiComplete = 'xApiComplete'\n}\n\nexport type CourseGroup = {\n  __typename?: 'CourseGroup';\n  allowRescheduling?: Maybe<Scalars['Boolean']>;\n  archived?: Maybe<Scalars['Boolean']>;\n  asset?: Maybe<Scalars['String']>;\n  authors?: Maybe<Array<Maybe<Scalars['String']>>>;\n  availabilityStatus?: Maybe<Scalars['String']>;\n  contentType?: Maybe<ContentType>;\n  courses?: Maybe<Array<Maybe<Course>>>;\n  createdAt?: Maybe<Scalars['Date']>;\n  currentUserMayReschedule?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<Scalars['JSON']>;\n  description?: Maybe<Scalars['String']>;\n  detailAsset?: Maybe<Scalars['String']>;\n  displayBundle?: Maybe<DisplayBundle>;\n  displayCourse?: Maybe<Course>;\n  externalDetailUrl?: Maybe<Scalars['String']>;\n  externalPurchaseUrl?: Maybe<Scalars['String']>;\n  hasParentCourseGroup?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  isbn?: Maybe<Scalars['String']>;\n  kind?: Maybe<CourseGroupKind>;\n  language?: Maybe<Scalars['String']>;\n  layout?: Maybe<Layout>;\n  metaDescription?: Maybe<Scalars['String']>;\n  metaTitle?: Maybe<Scalars['String']>;\n  ownedByActiveScope: Scalars['Boolean'];\n  rating?: Maybe<Scalars['Int']>;\n  relatedCourseGroups?: Maybe<Array<Maybe<CourseGroup>>>;\n  relatedQuery?: Maybe<Scalars['String']>;\n  relatedQueryLimit?: Maybe<Scalars['Int']>;\n  relatedQuerySignature?: Maybe<Scalars['String']>;\n  relatedQuerySort?: Maybe<Scalars['String']>;\n  relatedShowDescription?: Maybe<Scalars['Boolean']>;\n  relatedShowImageAsset?: Maybe<Scalars['Boolean']>;\n  ribbon?: Maybe<Scalars['Slug']>;\n  slug: Scalars['Slug'];\n  source?: Maybe<Scalars['String']>;\n  tabs?: Maybe<Array<Maybe<CourseTab>>>;\n  tags?: Maybe<Array<Maybe<Tag>>>;\n  title?: Maybe<Scalars['String']>;\n  videoAsset?: Maybe<Scalars['String']>;\n};\n\nexport enum CourseGroupKind {\n  Article = 'article',\n  CourseGroup = 'courseGroup',\n  InPersonEvent = 'inPersonEvent',\n  InPersonEventCourse = 'inPersonEventCourse',\n  MicroCourse = 'microCourse',\n  ShareableContentObject = 'shareableContentObject',\n  Video = 'video',\n  Webinar = 'webinar',\n  WebinarCourse = 'webinarCourse',\n  XApiObject = 'xApiObject'\n}\n\nexport type CourseTab = {\n  __typename?: 'CourseTab';\n  body?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['ID']>;\n  instructors?: Maybe<Array<Maybe<Instructor>>>;\n  label?: Maybe<Scalars['String']>;\n  products?: Maybe<Array<Maybe<Product>>>;\n  sections?: Maybe<Array<Maybe<Section>>>;\n  tabType?: Maybe<Scalars['String']>;\n  testimonials?: Maybe<Array<Maybe<Testimonial>>>;\n};\n\nexport type CustomField = {\n  __typename?: 'CustomField';\n  id: Scalars['ID'];\n  includeLabelOnContent: Scalars['Boolean'];\n  includeValueOnContent: Scalars['Boolean'];\n  indexed: Scalars['Boolean'];\n  label: Scalars['String'];\n  multiple: Scalars['Boolean'];\n  slug: Scalars['Slug'];\n  sort?: Maybe<Scalars['String']>;\n};\n\nexport type DateRange = {\n  __typename?: 'DateRange';\n  endDate?: Maybe<Scalars['Date']>;\n  startDate?: Maybe<Scalars['Date']>;\n};\n\nexport type DisplayBundle = {\n  __typename?: 'DisplayBundle';\n  annualPlanId?: Maybe<Scalars['ID']>;\n  annualPriceInCents?: Maybe<Scalars['Int']>;\n  asset?: Maybe<Scalars['URL']>;\n  id?: Maybe<Scalars['ID']>;\n  name?: Maybe<Scalars['String']>;\n  planId?: Maybe<Scalars['ID']>;\n  priceInCents?: Maybe<Scalars['Int']>;\n  slug: Scalars['Slug'];\n};\n\nexport type EmailLayoutSettings = {\n  __typename?: 'EmailLayoutSettings';\n  bccAddress?: Maybe<Scalars['String']>;\n  emailCaptureTerms?: Maybe<Scalars['String']>;\n  footer?: Maybe<Scalars['String']>;\n  fromAddress?: Maybe<Scalars['String']>;\n  fromName?: Maybe<Scalars['String']>;\n  header?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n};\n\nexport type ExpandableListItem = {\n  __typename?: 'ExpandableListItem';\n  altText?: Maybe<Scalars['String']>;\n  asset?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  title: Scalars['String'];\n};\n\nexport type FlipCardPage = PageEntity & {\n  __typename?: 'FlipCardPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  caption?: Maybe<Scalars['String']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  flipCards: Array<FlipCards>;\n  gridLayout?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  sidebarIsHidden?: Maybe<Scalars['Boolean']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type FlipCards = {\n  __typename?: 'FlipCards';\n  altText?: Maybe<Scalars['String']>;\n  asset: Scalars['String'];\n  backgroundColor?: Maybe<Scalars['String']>;\n  cardType?: Maybe<Scalars['String']>;\n  description: Scalars['String'];\n  frontText?: Maybe<Scalars['String']>;\n  textColor?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type GlobalNavigationLink = {\n  __typename?: 'GlobalNavigationLink';\n  href?: Maybe<Scalars['String']>;\n  label: Scalars['String'];\n};\n\nexport type InPersonEventInfo = {\n  __typename?: 'InPersonEventInfo';\n  heroAsset?: Maybe<Scalars['URL']>;\n  subtitle?: Maybe<Scalars['String']>;\n};\n\nexport type Instructor = {\n  __typename?: 'Instructor';\n  asset?: Maybe<Scalars['URL']>;\n  bio?: Maybe<Scalars['String']>;\n  fullName?: Maybe<Scalars['String']>;\n};\n\nexport type ItemPrice = {\n  __typename?: 'ItemPrice';\n  annualPriceInCents?: Maybe<Scalars['Int']>;\n  currencyCode: Scalars['String'];\n  id: Scalars['ID'];\n  instructorAccessPriceInCents?: Maybe<Scalars['Int']>;\n  priceInCents?: Maybe<Scalars['Int']>;\n  suggestedRetailPriceInCents?: Maybe<Scalars['Int']>;\n  variations: Array<ItemPriceVariation>;\n};\n\nexport type ItemPriceVariation = {\n  __typename?: 'ItemPriceVariation';\n  label: Scalars['String'];\n  priceInCents: Scalars['Int'];\n};\n\nexport type Language = {\n  __typename?: 'Language';\n  code: Scalars['String'];\n  id?: Maybe<Scalars['ID']>;\n  isCustom?: Maybe<Scalars['Boolean']>;\n  label: Scalars['String'];\n  selectorLabel?: Maybe<Scalars['String']>;\n};\n\nexport type Layout = {\n  __typename?: 'Layout';\n  hasEnrollmentWidget: Scalars['Boolean'];\n  id: Scalars['ID'];\n  kind?: Maybe<LayoutKind>;\n  scripts?: Maybe<Scalars['String']>;\n  widgets?: Maybe<Scalars['JSON']>;\n};\n\nexport enum LayoutKind {\n  InPersonEventLayout = 'InPersonEventLayout',\n  ArticleLayout = 'articleLayout',\n  BundleSidebarLayout = 'bundleSidebarLayout',\n  CatalogLayout = 'catalogLayout',\n  CourseDetailSidebarLayout = 'courseDetailSidebarLayout',\n  DashboardLayout = 'dashboardLayout',\n  DiscountGroupSidebarLayout = 'discountGroupSidebarLayout',\n  HomepageLayout = 'homepageLayout',\n  LearningPathLearnerLayout = 'learningPathLearnerLayout',\n  LearningPathSidebarLayout = 'learningPathSidebarLayout',\n  PageLayout = 'pageLayout',\n  PickableGroupSidebarLayout = 'pickableGroupSidebarLayout',\n  ProductSidebarLayout = 'productSidebarLayout',\n  RedemptionLayout = 'redemptionLayout',\n  RegistrationLayout = 'registrationLayout',\n  SupportLayout = 'supportLayout',\n  TranscriptLayout = 'transcriptLayout'\n}\n\nexport type LearningPath = {\n  __typename?: 'LearningPath';\n  accessDays?: Maybe<Scalars['Int']>;\n  alternativePricingRef?: Maybe<Scalars['Int']>;\n  alternativePricingType?: Maybe<AlternativePricingType>;\n  asset?: Maybe<Scalars['URL']>;\n  authors?: Maybe<Array<Scalars['String']>>;\n  availabilityStatus?: Maybe<Scalars['String']>;\n  bulkPurchasingEnabled: Scalars['Boolean'];\n  client?: Maybe<Client>;\n  confirmationHtml?: Maybe<Scalars['String']>;\n  contentType?: Maybe<Scalars['String']>;\n  createdAt?: Maybe<Scalars['Date']>;\n  currentUserEarnedCertificate: Scalars['Boolean'];\n  currentUserPendingCertificate: Scalars['Boolean'];\n  currentUserStartActionDate?: Maybe<Scalars['Date']>;\n  customFields?: Maybe<Scalars['JSON']>;\n  detailAsset?: Maybe<Scalars['URL']>;\n  endDate?: Maybe<Scalars['Date']>;\n  enrollmentEndDate?: Maybe<Scalars['Date']>;\n  enrollmentStartDate?: Maybe<Scalars['Date']>;\n  externalDetailUrl?: Maybe<Scalars['String']>;\n  freeWithRegistration?: Maybe<Scalars['Boolean']>;\n  fulfillmentCenter?: Maybe<Scalars['ID']>;\n  futurePublishDate?: Maybe<Scalars['Date']>;\n  hasMultipleCurrencies: Scalars['Boolean'];\n  heroAsset?: Maybe<Scalars['URL']>;\n  id: Scalars['ID'];\n  isPayAsYouGo?: Maybe<Scalars['Boolean']>;\n  kind?: Maybe<Scalars['String']>;\n  language?: Maybe<Scalars['String']>;\n  lastTierPriceInCents?: Maybe<Scalars['Int']>;\n  layout?: Maybe<Layout>;\n  layoutId?: Maybe<Scalars['ID']>;\n  learnerLayout?: Maybe<Layout>;\n  learnerLayoutId?: Maybe<Scalars['ID']>;\n  longDescription?: Maybe<Scalars['String']>;\n  metaDescription?: Maybe<Scalars['String']>;\n  metaTitle?: Maybe<Scalars['String']>;\n  milestones?: Maybe<Array<Maybe<Milestone>>>;\n  name: Scalars['String'];\n  prerequisiteCourses?: Maybe<Array<Maybe<Course>>>;\n  prerequisiteLearningPaths?: Maybe<Array<Maybe<LearningPath>>>;\n  priceInCents?: Maybe<Scalars['Int']>;\n  prices: Array<ItemPrice>;\n  publishDate?: Maybe<Scalars['Date']>;\n  purchasable: Scalars['Boolean'];\n  relatedQuery?: Maybe<Scalars['String']>;\n  relatedQuerySignature?: Maybe<Scalars['String']>;\n  resourceType: Scalars['String'];\n  ribbon?: Maybe<Ribbon>;\n  seatPackages?: Maybe<Array<SeatPackage>>;\n  seatTiers?: Maybe<Array<SeatTier>>;\n  seatsLimit?: Maybe<Scalars['Int']>;\n  shortDescription?: Maybe<Scalars['String']>;\n  sku?: Maybe<Scalars['String']>;\n  slug: Scalars['Slug'];\n  source?: Maybe<Scalars['String']>;\n  startDate?: Maybe<Scalars['Date']>;\n  status: Status;\n  suggestedRetailPriceInCents?: Maybe<Scalars['Int']>;\n  tabs?: Maybe<LearningPathTabs>;\n  tags?: Maybe<Array<Maybe<Tag>>>;\n  taxCategory?: Maybe<Scalars['ID']>;\n  taxable?: Maybe<Scalars['Boolean']>;\n  updatedAt?: Maybe<Scalars['Date']>;\n  videoAsset?: Maybe<Scalars['ID']>;\n};\n\nexport type LearningPathTab = {\n  __typename?: 'LearningPathTab';\n  body?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  instructors?: Maybe<Array<Maybe<Instructor>>>;\n  label?: Maybe<Scalars['String']>;\n  products?: Maybe<Array<Maybe<Product>>>;\n  tabType?: Maybe<Scalars['String']>;\n};\n\nexport type LearningPathTabs = {\n  __typename?: 'LearningPathTabs';\n  generated?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  tabs?: Maybe<Array<LearningPathTab>>;\n};\n\nexport type Lesson = {\n  __typename?: 'Lesson';\n  accessLevel?: Maybe<AccessLevel>;\n  id: Scalars['ID'];\n  section?: Maybe<Section>;\n  slug: Scalars['Slug'];\n  slugOrId?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  topics: Array<PageResource>;\n};\n\nexport type License = {\n  __typename?: 'License';\n  accessDays?: Maybe<Scalars['Int']>;\n  appearance?: Maybe<AppearanceSettings>;\n  childLicenses?: Maybe<Array<License>>;\n  client?: Maybe<Client>;\n  courseIds?: Maybe<Array<Scalars['ID']>>;\n  courseTagIds?: Maybe<Array<Scalars['ID']>>;\n  courseTags?: Maybe<Array<Tag>>;\n  courses?: Maybe<Array<Course>>;\n  createdAt?: Maybe<Scalars['Date']>;\n  dashboardLayoutId?: Maybe<Scalars['ID']>;\n  enableBranding?: Maybe<Scalars['Boolean']>;\n  expirationDate?: Maybe<Scalars['Date']>;\n  id: Scalars['ID'];\n  isDefault?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Scalars['String']>;\n  learningPathIds?: Maybe<Array<Scalars['ID']>>;\n  learningPaths?: Maybe<Array<LearningPath>>;\n  name: Scalars['String'];\n  parentLicense?: Maybe<License>;\n  parentLicenseId?: Maybe<Scalars['ID']>;\n  ref1?: Maybe<Scalars['String']>;\n  ref2?: Maybe<Scalars['String']>;\n  ref3?: Maybe<Scalars['String']>;\n  ref4?: Maybe<Scalars['String']>;\n  ref5?: Maybe<Scalars['String']>;\n  ref6?: Maybe<Scalars['String']>;\n  ref7?: Maybe<Scalars['String']>;\n  ref8?: Maybe<Scalars['String']>;\n  ref9?: Maybe<Scalars['String']>;\n  ref10?: Maybe<Scalars['String']>;\n  schoolName?: Maybe<Scalars['String']>;\n  seatsLimit?: Maybe<Scalars['Int']>;\n  sku?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['Date']>;\n};\n\nexport type LicenseNode = {\n  __typename?: 'LicenseNode';\n  ancestorIds?: Maybe<Array<Scalars['ID']>>;\n  createdAt?: Maybe<Scalars['Date']>;\n  depth: Scalars['Int'];\n  hierarchicalName: Scalars['String'];\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  parentLicenseId?: Maybe<Scalars['ID']>;\n};\n\nexport type ListRollPage = PageEntity & {\n  __typename?: 'ListRollPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  description?: Maybe<Scalars['String']>;\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  expandableLists: Array<ExpandableListItem>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type Location = {\n  __typename?: 'Location';\n  address1: Scalars['String'];\n  address2?: Maybe<Scalars['String']>;\n  city: Scalars['String'];\n  country?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  room?: Maybe<Scalars['String']>;\n  state?: Maybe<Scalars['String']>;\n  timeZone?: Maybe<Scalars['String']>;\n  zipCode?: Maybe<Scalars['String']>;\n};\n\nexport type Marker = {\n  __typename?: 'Marker';\n  seconds: Scalars['Int'];\n  text: Scalars['String'];\n};\n\nexport type MatchPairPage = PageEntity & {\n  __typename?: 'MatchPairPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  matchPairs: Array<MatchPairs>;\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  sidebarIsHidden?: Maybe<Scalars['Boolean']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type MatchPairs = {\n  __typename?: 'MatchPairs';\n  asset: Scalars['String'];\n  caption: Scalars['String'];\n  clue: Scalars['String'];\n  label: Scalars['String'];\n};\n\nexport type Meeting = {\n  __typename?: 'Meeting';\n  attendeeInfo?: Maybe<Scalars['String']>;\n  attendees?: Maybe<Array<User>>;\n  course: Course;\n  courseId: Scalars['ID'];\n  endDate: Scalars['Date'];\n  id: Scalars['ID'];\n  instructors?: Maybe<Array<Scalars['String']>>;\n  location?: Maybe<Location>;\n  locationId?: Maybe<Scalars['ID']>;\n  startDate: Scalars['Date'];\n  timeZone?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type MeetingPage = PageEntity & {\n  __typename?: 'MeetingPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  meeting?: Maybe<Scalars['String']>;\n  meetingAttendeeInfo?: Maybe<Scalars['String']>;\n  meetingSubtitle?: Maybe<Scalars['String']>;\n  meetingTitle?: Maybe<Scalars['String']>;\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  preventProgression?: Maybe<Scalars['Boolean']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type MicrositeBlock = {\n  __typename?: 'MicrositeBlock';\n  html?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  links?: Maybe<Array<MicrositeBlockLink>>;\n};\n\nexport type MicrositeBlockLink = {\n  __typename?: 'MicrositeBlockLink';\n  asset?: Maybe<Scalars['String']>;\n  href: Scalars['String'];\n  label: Scalars['String'];\n};\n\nexport type Milestone = {\n  __typename?: 'Milestone';\n  completionCriteria?: Maybe<Array<MilestoneCompletionCriteria>>;\n  completionCriteriaDescription?: Maybe<Scalars['String']>;\n  contentItems?: Maybe<Array<Content>>;\n  id: Scalars['ID'];\n  kind: MilestoneKind;\n  learningPath: LearningPath;\n  milestoneCompetencyAssessment?: Maybe<MilestoneCompetencyAssessment>;\n  milestoneCourses?: Maybe<Array<MilestoneCourse>>;\n  name: Scalars['String'];\n  releaseDate?: Maybe<Scalars['Date']>;\n  releaseDays?: Maybe<Scalars['Int']>;\n  requirement: MilestoneRequirement;\n};\n\nexport type MilestoneCompetencyAssessment = {\n  __typename?: 'MilestoneCompetencyAssessment';\n  allowRetakes?: Maybe<Scalars['Boolean']>;\n  asset?: Maybe<Scalars['String']>;\n  buttonText?: Maybe<Scalars['String']>;\n  competencyAssessment?: Maybe<CompetencyAssessment>;\n  competencyAssessmentId: Scalars['ID'];\n  displayType: MilestoneCompetencyAssessmentDisplayType;\n  id: Scalars['ID'];\n  largeAsset?: Maybe<Scalars['String']>;\n  passingScoreRequired?: Maybe<Scalars['Boolean']>;\n  requirement?: Maybe<MilestoneRequirement>;\n  smallAsset?: Maybe<Scalars['String']>;\n  subtitle?: Maybe<Scalars['String']>;\n  title: Scalars['String'];\n  type: MilestoneCompetencyAssessmentType;\n};\n\nexport enum MilestoneCompetencyAssessmentDisplayType {\n  Image = 'image',\n  Text = 'text'\n}\n\nexport enum MilestoneCompetencyAssessmentType {\n  Assessment = 'assessment',\n  DynamicContent = 'dynamicContent'\n}\n\nexport type MilestoneCompletionCriteria = {\n  __typename?: 'MilestoneCompletionCriteria';\n  awardType?: Maybe<AwardType>;\n  id: Scalars['ID'];\n  threshold: Scalars['Int'];\n  type: MilestoneCompletionCriteriaType;\n};\n\nexport enum MilestoneCompletionCriteriaType {\n  /** Require learner to earn an award */\n  Award = 'award',\n  /** Require learner to complete a certain number of electives */\n  Electives = 'electives',\n  /** Required Competency Assessment */\n  RequiredCompetencyAssessmentsAssessment = 'requiredCompetencyAssessmentsAssessment',\n  /** Required Competency Assessment with dynamic content */\n  RequiredCompetencyAssessmentsDynamicContent = 'requiredCompetencyAssessmentsDynamicContent',\n  /** Required Competency Assessment with passing score */\n  RequiredCompetencyAssessmentsPassingScore = 'requiredCompetencyAssessmentsPassingScore',\n  /** Required Content (auto-generated, not selectable) */\n  RequiredCourses = 'requiredCourses'\n}\n\nexport enum MilestoneContentGrouping {\n  Course = 'course',\n  CourseGroup = 'courseGroup'\n}\n\nexport type MilestoneCourse = {\n  __typename?: 'MilestoneCourse';\n  altDescriptionBody?: Maybe<Scalars['String']>;\n  contentGrouping: MilestoneContentGrouping;\n  contentId: Scalars['ID'];\n  contentTitle: Scalars['String'];\n  hideCourseDescription: Scalars['Boolean'];\n  id: Scalars['ID'];\n  requirement: MilestoneRequirement;\n};\n\nexport enum MilestoneKind {\n  CompetencyAssessment = 'competencyAssessment',\n  Content = 'content'\n}\n\nexport enum MilestoneRequirement {\n  /** Elective */\n  Elective = 'elective',\n  /** Required */\n  Required = 'required'\n}\n\nexport type Organization = {\n  __typename?: 'Organization';\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type PdfViewerPage = PageEntity & {\n  __typename?: 'PDFViewerPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  asset?: Maybe<Scalars['String']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  fileDownloadDisabled?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  printDisabled?: Maybe<Scalars['Boolean']>;\n  searchDisabled?: Maybe<Scalars['Boolean']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type PageEntity = {\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type PageResource =\n  | ArticlePage\n  | AssignmentPage\n  | AudioPage\n  | FlipCardPage\n  | ListRollPage\n  | MatchPairPage\n  | MeetingPage\n  | PdfViewerPage\n  | PresentationPage\n  | QuizPage\n  | ScormPage\n  | SlideshowPage\n  | SurveyPage\n  | TallyPage\n  | TestPage\n  | TextPage\n  | VideoPage\n  | WorkbookPage;\n\nexport type PresentationPage = PageEntity & {\n  __typename?: 'PresentationPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  client?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  company: Scalars['String'];\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lesson?: Maybe<Scalars['String']>;\n  lessonId: Scalars['ID'];\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  showSidebar?: Maybe<Scalars['Boolean']>;\n  slides: Array<Slides>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type Product = {\n  __typename?: 'Product';\n  alternativePricingRef?: Maybe<Scalars['Int']>;\n  alternativePricingType?: Maybe<AlternativePricingType>;\n  asset?: Maybe<Scalars['URL']>;\n  id: Scalars['ID'];\n  language?: Maybe<Scalars['String']>;\n  longDescription?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  priceInCents?: Maybe<Scalars['Int']>;\n  purchasable?: Maybe<Scalars['Boolean']>;\n  relatedProducts?: Maybe<Array<Maybe<Product>>>;\n  status?: Maybe<Status>;\n  suggestedRetailPriceInCents?: Maybe<Scalars['Int']>;\n};\n\nexport type PurchasedBundle = {\n  __typename?: 'PurchasedBundle';\n  bundle?: Maybe<Bundle>;\n  bundleId: Scalars['ID'];\n};\n\nexport type PurchasedCourse = {\n  __typename?: 'PurchasedCourse';\n  certificate?: Maybe<Scalars['ID']>;\n  certificateIssuedAt?: Maybe<Scalars['Date']>;\n  course?: Maybe<Course>;\n  courseId: Scalars['ID'];\n  instructorAccessPurchased?: Maybe<Scalars['Boolean']>;\n  status: Scalars['String'];\n};\n\nexport type QuestionChoice = {\n  __typename?: 'QuestionChoice';\n  altText?: Maybe<Scalars['String']>;\n  asset?: Maybe<Scalars['String']>;\n  choiceId?: Maybe<Scalars['String']>;\n  correct: Scalars['Boolean'];\n  points?: Maybe<Scalars['Int']>;\n  response?: Maybe<Scalars['String']>;\n  value?: Maybe<Scalars['String']>;\n};\n\nexport enum QuestionDisplayOption {\n  Always = 'always',\n  AssessmentOnly = 'assessmentOnly',\n  ResultsOnly = 'resultsOnly'\n}\n\nexport type QuestionTable = {\n  __typename?: 'QuestionTable';\n  headers?: Maybe<Array<QuestionTableCell>>;\n  rows?: Maybe<Array<Maybe<Array<QuestionTableCell>>>>;\n};\n\nexport type QuestionTableCell = {\n  __typename?: 'QuestionTableCell';\n  locked: Scalars['Boolean'];\n  value?: Maybe<Scalars['String']>;\n  weight?: Maybe<Scalars['String']>;\n};\n\nexport type QuizPage = AssessmentPageEntity &\n  PageEntity & {\n    __typename?: 'QuizPage';\n    accessibilityAudioAsset?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n    allowToResume?: Maybe<Scalars['Boolean']>;\n    catalogAsset?: Maybe<Scalars['String']>;\n    clientId?: Maybe<Scalars['ID']>;\n    companyId: Scalars['ID'];\n    completionTimeSeconds?: Maybe<Scalars['Int']>;\n    contentDescription?: Maybe<Scalars['String']>;\n    contentEstimate?: Maybe<Scalars['String']>;\n    contentTime?: Maybe<Scalars['String']>;\n    continueAfterTimerExpires?: Maybe<Scalars['Boolean']>;\n    createdAt: Scalars['Date'];\n    displayAllHints?: Maybe<Scalars['Boolean']>;\n    displayAttemptNumbers?: Maybe<Scalars['Int']>;\n    editableByChildren?: Maybe<Scalars['Boolean']>;\n    failMessage?: Maybe<Scalars['String']>;\n    hintControlEnabled?: Maybe<Scalars['Boolean']>;\n    id: Scalars['ID'];\n    indentationLevel?: Maybe<Scalars['Int']>;\n    instructorAssessment?: Maybe<Scalars['Boolean']>;\n    isGraded?: Maybe<Scalars['Boolean']>;\n    lessonId: Scalars['ID'];\n    maxAttempts?: Maybe<Scalars['Int']>;\n    minPassingPercent?: Maybe<Scalars['Int']>;\n    navigationDisabled?: Maybe<Scalars['Boolean']>;\n    passMessage?: Maybe<Scalars['String']>;\n    preventProgression?: Maybe<Scalars['Boolean']>;\n    questionSkipEnabled?: Maybe<Scalars['Boolean']>;\n    questions: Array<QuizQuestion>;\n    showAnswerAfterPass?: Maybe<Scalars['Boolean']>;\n    startMessage?: Maybe<Scalars['String']>;\n    timeLimitInSeconds?: Maybe<Scalars['Int']>;\n    timePerQuestionInSeconds?: Maybe<Scalars['Int']>;\n    timerEnabled?: Maybe<Scalars['Boolean']>;\n    title?: Maybe<Scalars['String']>;\n    type: TopicType;\n    updatedAt: Scalars['Date'];\n  };\n\nexport type QuizQuestion = {\n  __typename?: 'QuizQuestion';\n  addAndDeleteRowsEnabled?: Maybe<Scalars['Boolean']>;\n  additionalContent?: Maybe<Scalars['String']>;\n  body?: Maybe<Scalars['String']>;\n  choices?: Maybe<Array<QuestionChoice>>;\n  copyAnswerFromAssessmentId?: Maybe<Scalars['String']>;\n  copyAnswerFromQuestionId?: Maybe<Scalars['String']>;\n  displayOption?: Maybe<QuestionDisplayOption>;\n  fileSubmissionAsset?: Maybe<Scalars['String']>;\n  gradedAsCorrect?: Maybe<Scalars['Boolean']>;\n  hasChoices?: Maybe<Scalars['Boolean']>;\n  isBooleanChoice?: Maybe<Scalars['Boolean']>;\n  isBooleanChoiceOrMultipleChoice?: Maybe<Scalars['Boolean']>;\n  isEssay?: Maybe<Scalars['Boolean']>;\n  isFileSubmission?: Maybe<Scalars['Boolean']>;\n  isImageComparison?: Maybe<Scalars['Boolean']>;\n  isLikert?: Maybe<Scalars['Boolean']>;\n  isMultipleChoice?: Maybe<Scalars['Boolean']>;\n  isOpenEnded?: Maybe<Scalars['Boolean']>;\n  isOpenEndedOrEssay: Scalars['Boolean'];\n  isSelectBoxes?: Maybe<Scalars['Boolean']>;\n  isTable?: Maybe<Scalars['Boolean']>;\n  mustSelectAllCorrectChoices?: Maybe<Scalars['Boolean']>;\n  openEndedResponse?: Maybe<Scalars['String']>;\n  parentQuestion?: Maybe<Scalars['String']>;\n  placeholder?: Maybe<Scalars['String']>;\n  postText?: Maybe<Scalars['String']>;\n  postText2?: Maybe<Scalars['String']>;\n  postTextDisplayOption?: Maybe<QuestionDisplayOption>;\n  postTextDisplayOption2?: Maybe<QuestionDisplayOption>;\n  preText?: Maybe<Scalars['String']>;\n  preText2?: Maybe<Scalars['String']>;\n  preTextDisplayOption?: Maybe<QuestionDisplayOption>;\n  preTextDisplayOption2?: Maybe<QuestionDisplayOption>;\n  preselectedChoices?: Maybe<Array<QuestionChoice>>;\n  questionCategoryId?: Maybe<Scalars['ID']>;\n  questionId?: Maybe<Scalars['String']>;\n  questionType?: Maybe<Scalars['String']>;\n  required?: Maybe<Scalars['Boolean']>;\n  response?: Maybe<Scalars['String']>;\n  scormInteractionType?: Maybe<Scalars['String']>;\n  selectedChoice?: Maybe<QuestionChoice>;\n  selectedChoiceOrNoChoiceAvailable?: Maybe<Scalars['Boolean']>;\n  shouldCheckAnswers?: Maybe<Scalars['Boolean']>;\n  shouldDisplayOnResults?: Maybe<Scalars['Boolean']>;\n  table?: Maybe<QuestionTable>;\n  tableResponse?: Maybe<QuestionTable>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type Resource = {\n  __typename?: 'Resource';\n  id: Scalars['ID'];\n  type: Scalars['String'];\n};\n\nexport type Ribbon = {\n  __typename?: 'Ribbon';\n  color?: Maybe<Scalars['String']>;\n  contrastColor?: Maybe<Scalars['String']>;\n  darkerColor?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  slug: Scalars['Slug'];\n};\n\nexport type RootLayout = {\n  __typename?: 'RootLayout';\n  favicon?: Maybe<Scalars['String']>;\n  footerScripts?: Maybe<Scalars['String']>;\n  headerScripts?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n};\n\nexport type RssItem = {\n  __typename?: 'RssItem';\n  author?: Maybe<Scalars['String']>;\n  categories: Array<Scalars['String']>;\n  date?: Maybe<Scalars['Date']>;\n  description?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  imageAltTitle?: Maybe<Scalars['String']>;\n  imageUrl?: Maybe<Scalars['String']>;\n  link?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type SsoAttributeMapping = {\n  __typename?: 'SSOAttributeMapping';\n  keyAttribute?: Maybe<Scalars['String']>;\n  keyName: Scalars['String'];\n};\n\nexport type SsoSettings = {\n  __typename?: 'SSOSettings';\n  bundle?: Maybe<Bundle>;\n  bundleId?: Maybe<Scalars['ID']>;\n  casAttributeMappings?: Maybe<Array<Maybe<SsoAttributeMapping>>>;\n  casServerUrl?: Maybe<Scalars['URL']>;\n  externalEcommerceUrl?: Maybe<Scalars['URL']>;\n  externalLoginUrl?: Maybe<Scalars['URL']>;\n  externalLogoutUrl?: Maybe<Scalars['URL']>;\n  externalProfileUrl?: Maybe<Scalars['URL']>;\n  externalRegisterUrl?: Maybe<Scalars['URL']>;\n  hasOpenIdClientSecret: Scalars['Boolean'];\n  id: Scalars['ID'];\n  openIdAttributeMappings?: Maybe<Array<Maybe<SsoAttributeMapping>>>;\n  openIdAuthorizationParameters?: Maybe<Scalars['JSON']>;\n  openIdAuthorizationUrl?: Maybe<Scalars['URL']>;\n  openIdClientId?: Maybe<Scalars['String']>;\n  openIdClientSecret?: Maybe<Scalars['String']>;\n  openIdEndSessionUrl?: Maybe<Scalars['URL']>;\n  openIdIssuer?: Maybe<Scalars['URL']>;\n  openIdSigningAlgorithm?: Maybe<Scalars['String']>;\n  openIdTokenUrl?: Maybe<Scalars['URL']>;\n  openIdUserInfoUrl?: Maybe<Scalars['URL']>;\n  openIdWellKnownUrl?: Maybe<Scalars['URL']>;\n  samlAllowUnencryptedAssertions?: Maybe<Scalars['Boolean']>;\n  samlAttributeMappings?: Maybe<Array<Maybe<SsoAttributeMapping>>>;\n  samlForceReAuth?: Maybe<Scalars['Boolean']>;\n  samlIdpCertificate?: Maybe<Scalars['String']>;\n  samlSignRequests?: Maybe<Scalars['Boolean']>;\n  samlSingleLogoutUrl?: Maybe<Scalars['URL']>;\n  samlSingleSignonUrl?: Maybe<Scalars['URL']>;\n};\n\nexport type ScormPage = PageEntity & {\n  __typename?: 'ScormPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  centralLibraryItemId?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  directoryEntryPoint?: Maybe<Scalars['String']>;\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  embeddedEnabled?: Maybe<Scalars['Boolean']>;\n  enabledRevertProgress?: Maybe<Scalars['Boolean']>;\n  fullscreenEmbed?: Maybe<Scalars['Boolean']>;\n  height?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  isCentralLibraryItem?: Maybe<Scalars['Boolean']>;\n  lessonId: Scalars['ID'];\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  preventProgression?: Maybe<Scalars['Boolean']>;\n  resetSessionAfterComplete?: Maybe<Scalars['Boolean']>;\n  scoTitle?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n  useProxy?: Maybe<Scalars['Boolean']>;\n  width?: Maybe<Scalars['Int']>;\n};\n\nexport type SeatPackage = {\n  __typename?: 'SeatPackage';\n  seats: Scalars['Int'];\n};\n\nexport type SeatTier = {\n  __typename?: 'SeatTier';\n  priceInCents: Scalars['Int'];\n  seats: Scalars['Int'];\n};\n\nexport type Section = {\n  __typename?: 'Section';\n  id: Scalars['ID'];\n  lessons?: Maybe<Array<Maybe<Lesson>>>;\n  slug: Scalars['Slug'];\n  status?: Maybe<Status>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type Slides = {\n  __typename?: 'Slides';\n  altText?: Maybe<Scalars['String']>;\n  asset: Scalars['String'];\n  audioAsset?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  timeSeconds?: Maybe<Scalars['Int']>;\n  title?: Maybe<Scalars['String']>;\n  unrestrictedHeight: Scalars['Boolean'];\n};\n\nexport type SlideshowPage = PageEntity & {\n  __typename?: 'SlideshowPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  showSidebar?: Maybe<Scalars['Boolean']>;\n  slides: Array<Slides>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport enum SortColumn {\n  CourseStartDate = 'courseStartDate',\n  CreatedAt = 'createdAt',\n  DisplayDate = 'displayDate',\n  Label = 'label',\n  LastActiveAt = 'lastActiveAt',\n  Name = 'name',\n  ParentName = 'parentName',\n  PublishDate = 'publishDate',\n  Relevance = 'relevance',\n  Title = 'title',\n  UpdatedAt = 'updatedAt'\n}\n\nexport enum SortDirection {\n  Asc = 'asc',\n  Desc = 'desc'\n}\n\nexport enum Status {\n  Archived = 'archived',\n  Authoring = 'authoring',\n  Deleted = 'deleted',\n  Draft = 'draft',\n  LoginRestriction = 'loginRestriction',\n  Pending = 'pending',\n  Published = 'published'\n}\n\nexport type SurveyPage = AssessmentPageEntity &\n  PageEntity & {\n    __typename?: 'SurveyPage';\n    accessibilityAudioAsset?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n    catalogAsset?: Maybe<Scalars['String']>;\n    clientId?: Maybe<Scalars['ID']>;\n    companyId: Scalars['ID'];\n    completionTimeSeconds?: Maybe<Scalars['Int']>;\n    contentDescription?: Maybe<Scalars['String']>;\n    contentEstimate?: Maybe<Scalars['String']>;\n    contentTime?: Maybe<Scalars['String']>;\n    createdAt: Scalars['Date'];\n    editableByChildren?: Maybe<Scalars['Boolean']>;\n    id: Scalars['ID'];\n    indentationLevel?: Maybe<Scalars['Int']>;\n    instructorAssessment?: Maybe<Scalars['Boolean']>;\n    isGraded?: Maybe<Scalars['Boolean']>;\n    lessonId: Scalars['ID'];\n    preventProgression?: Maybe<Scalars['Boolean']>;\n    questions: Array<QuizQuestion>;\n    resultsMessage?: Maybe<Scalars['String']>;\n    title?: Maybe<Scalars['String']>;\n    type: TopicType;\n    updatedAt: Scalars['Date'];\n  };\n\nexport type Tag = {\n  __typename?: 'Tag';\n  id: Scalars['ID'];\n  isFolder: Scalars['Boolean'];\n  label?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['Date']>;\n};\n\nexport type TallyPage = AssessmentPageEntity &\n  PageEntity & {\n    __typename?: 'TallyPage';\n    accessibilityAudioAsset?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n    altText?: Maybe<Scalars['String']>;\n    asset: Scalars['String'];\n    audioAsset?: Maybe<Scalars['String']>;\n    caption?: Maybe<Scalars['String']>;\n    catalogAsset?: Maybe<Scalars['String']>;\n    clientId?: Maybe<Scalars['ID']>;\n    companyId: Scalars['ID'];\n    completionTimeSeconds?: Maybe<Scalars['Int']>;\n    contentDescription?: Maybe<Scalars['String']>;\n    contentEstimate?: Maybe<Scalars['String']>;\n    contentTime?: Maybe<Scalars['String']>;\n    createdAt: Scalars['Date'];\n    displayAllHints?: Maybe<Scalars['Boolean']>;\n    editableByChildren?: Maybe<Scalars['Boolean']>;\n    id: Scalars['ID'];\n    indentationLevel?: Maybe<Scalars['Int']>;\n    instructorAssessment?: Maybe<Scalars['Boolean']>;\n    lessonId: Scalars['ID'];\n    questionSkipEnabled?: Maybe<Scalars['Boolean']>;\n    questions: Array<QuizQuestion>;\n    resultsMessage?: Maybe<Scalars['String']>;\n    scoreTiers: Array<TallyPageScoreTier>;\n    startMessage?: Maybe<Scalars['String']>;\n    timeSeconds?: Maybe<Scalars['Int']>;\n    title?: Maybe<Scalars['String']>;\n    type: TopicType;\n    unrestrictedHeight: Scalars['Boolean'];\n    updatedAt: Scalars['Date'];\n  };\n\nexport type TallyPageScoreTier = {\n  __typename?: 'TallyPageScoreTier';\n  body?: Maybe<Scalars['String']>;\n  lowerBound: Scalars['Int'];\n  title: Scalars['String'];\n  upperBound: Scalars['Int'];\n};\n\nexport type TestPage = AssessmentPageEntity &\n  PageEntity & {\n    __typename?: 'TestPage';\n    accessibilityAudioAsset?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n    allowToResume?: Maybe<Scalars['Boolean']>;\n    catalogAsset?: Maybe<Scalars['String']>;\n    clientId?: Maybe<Scalars['ID']>;\n    companyId: Scalars['ID'];\n    completionTimeSeconds?: Maybe<Scalars['Int']>;\n    contentDescription?: Maybe<Scalars['String']>;\n    contentEstimate?: Maybe<Scalars['String']>;\n    contentTime?: Maybe<Scalars['String']>;\n    continueAfterTimerExpires?: Maybe<Scalars['Boolean']>;\n    createdAt: Scalars['Date'];\n    editableByChildren?: Maybe<Scalars['Boolean']>;\n    failMessage?: Maybe<Scalars['String']>;\n    hideQuestionResults?: Maybe<Scalars['Boolean']>;\n    id: Scalars['ID'];\n    indentationLevel?: Maybe<Scalars['Int']>;\n    instructorAssessment?: Maybe<Scalars['Boolean']>;\n    isGraded?: Maybe<Scalars['Boolean']>;\n    lessonId: Scalars['ID'];\n    maxAttempts?: Maybe<Scalars['Int']>;\n    minPassingPercent?: Maybe<Scalars['Int']>;\n    passMessage?: Maybe<Scalars['String']>;\n    preventProgression?: Maybe<Scalars['Boolean']>;\n    questionSkipEnabled?: Maybe<Scalars['Boolean']>;\n    questions: Array<QuizQuestion>;\n    randomizeChoices: Scalars['Boolean'];\n    startMessage?: Maybe<Scalars['String']>;\n    subsetSize?: Maybe<Scalars['Int']>;\n    timeLimitInSeconds?: Maybe<Scalars['Int']>;\n    timePerQuestionInSeconds?: Maybe<Scalars['Int']>;\n    title?: Maybe<Scalars['String']>;\n    type: TopicType;\n    updatedAt: Scalars['Date'];\n  };\n\nexport type Testimonial = {\n  __typename?: 'Testimonial';\n  body?: Maybe<Scalars['String']>;\n  createdAt?: Maybe<Scalars['Date']>;\n  id?: Maybe<Scalars['ID']>;\n  rating?: Maybe<Scalars['Int']>;\n  user?: Maybe<User>;\n};\n\nexport enum TextAlignment {\n  Center = 'center',\n  Left = 'left'\n}\n\nexport type TextPage = PageEntity & {\n  __typename?: 'TextPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  body?: Maybe<Scalars['String']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  sidebarIsHidden: Scalars['Boolean'];\n  sidebarItems: Array<TextPageSidebar>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type TextPageSidebar = {\n  __typename?: 'TextPageSidebar';\n  adDimensions?: Maybe<Scalars['String']>;\n  adTargeting?: Maybe<Scalars['String']>;\n  adUnitId?: Maybe<Scalars['String']>;\n  altText?: Maybe<Scalars['String']>;\n  asset?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  videoAsset?: Maybe<Scalars['String']>;\n};\n\nexport type Topic = {\n  __typename?: 'Topic';\n  failMessage?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  originalId?: Maybe<Scalars['ID']>;\n  passMessage?: Maybe<Scalars['String']>;\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  questionSkipEnabled?: Maybe<Scalars['Boolean']>;\n  quizQuestions?: Maybe<Array<Scalars['ID']>>;\n  resultsMessage?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt?: Maybe<Scalars['Date']>;\n};\n\nexport enum TopicType {\n  Ad = 'ad',\n  Article = 'article',\n  Assignment = 'assignment',\n  Audio = 'audio',\n  Bongo = 'bongo',\n  DiscussionBoard = 'discussionBoard',\n  Embed = 'embed',\n  FlipCardSet = 'flipCardSet',\n  HighlightZoneQuiz = 'highlightZoneQuiz',\n  HighlightZoneSet = 'highlightZoneSet',\n  Image = 'image',\n  InPersonEvent = 'inPersonEvent',\n  ListRoll = 'listRoll',\n  Lti = 'lti',\n  MatchPairSet = 'matchPairSet',\n  MeetingInfo = 'meetingInfo',\n  Notebook = 'notebook',\n  PdfViewer = 'pdfViewer',\n  Presentation = 'presentation',\n  Quiz = 'quiz',\n  Recipe = 'recipe',\n  ShareableContentObject = 'shareableContentObject',\n  Slideshow = 'slideshow',\n  SocialShareCardSet = 'socialShareCardSet',\n  Survey = 'survey',\n  SurveyGizmo = 'surveyGizmo',\n  Tally = 'tally',\n  Test = 'test',\n  Text = 'text',\n  Video = 'video',\n  Workbook = 'workbook',\n  XApiObject = 'xApiObject'\n}\n\nexport type User = {\n  __typename?: 'User';\n  abbreviatedName?: Maybe<Scalars['String']>;\n  accessedFlows?: Maybe<Array<Scalars['String']>>;\n  activeLicense?: Maybe<License>;\n  address1?: Maybe<Scalars['String']>;\n  address2?: Maybe<Scalars['String']>;\n  adminClients?: Maybe<Array<Maybe<Client>>>;\n  allocatedLearningPaths?: Maybe<Array<AllocatedLearningPath>>;\n  allocatedLicenses?: Maybe<Array<AllocatedLicense>>;\n  asset?: Maybe<Scalars['String']>;\n  attendedMeetings?: Maybe<Array<UserAttendedMeeting>>;\n  availableCoursesCount: Scalars['Int'];\n  balance?: Maybe<Scalars['Float']>;\n  bio?: Maybe<Scalars['String']>;\n  certificatesCount: Scalars['Int'];\n  city?: Maybe<Scalars['String']>;\n  client?: Maybe<Client>;\n  clientId?: Maybe<Scalars['ID']>;\n  collaborationsCount: Scalars['Int'];\n  completedCoursesCount: Scalars['Int'];\n  country?: Maybe<Scalars['String']>;\n  createdAt?: Maybe<Scalars['Date']>;\n  customFields?: Maybe<Scalars['JSON']>;\n  disabled: Scalars['Boolean'];\n  email?: Maybe<Scalars['String']>;\n  externalCustomerId?: Maybe<Scalars['ID']>;\n  firstName?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  invitedByName?: Maybe<Scalars['String']>;\n  lang?: Maybe<Scalars['String']>;\n  lastActiveAt?: Maybe<Scalars['Date']>;\n  lastInitial?: Maybe<Scalars['String']>;\n  lastName?: Maybe<Scalars['String']>;\n  learnerUserId?: Maybe<Scalars['ID']>;\n  managerUserId?: Maybe<Scalars['ID']>;\n  mustVerifyEmail: Scalars['Boolean'];\n  name?: Maybe<Scalars['String']>;\n  purchasedBundles?: Maybe<Array<PurchasedBundle>>;\n  purchasedCourses?: Maybe<Array<PurchasedCourse>>;\n  recommendedSlugs?: Maybe<Array<UserRecommendedSlug>>;\n  recommendedTags?: Maybe<Array<UserRecommendedTag>>;\n  ref1?: Maybe<Scalars['String']>;\n  ref2?: Maybe<Scalars['String']>;\n  ref3?: Maybe<Scalars['String']>;\n  ref4?: Maybe<Scalars['String']>;\n  ref5?: Maybe<Scalars['String']>;\n  ref6?: Maybe<Scalars['String']>;\n  ref7?: Maybe<Scalars['String']>;\n  ref8?: Maybe<Scalars['String']>;\n  ref9?: Maybe<Scalars['String']>;\n  ref10?: Maybe<Scalars['String']>;\n  roleKey?: Maybe<Scalars['String']>;\n  sfAccountId?: Maybe<Scalars['ID']>;\n  sfContactId?: Maybe<Scalars['ID']>;\n  shippingName?: Maybe<Scalars['String']>;\n  shouldHighlight: Scalars['Boolean'];\n  startedCoursesCount: Scalars['Int'];\n  state?: Maybe<Scalars['String']>;\n  stripeCustomerId?: Maybe<Scalars['ID']>;\n  telephone?: Maybe<Scalars['String']>;\n  twoFactorEnabled?: Maybe<Scalars['Boolean']>;\n  updatedAt?: Maybe<Scalars['Date']>;\n  waitlistedCourses?: Maybe<Array<WaitlistedCourse>>;\n  zipCode?: Maybe<Scalars['String']>;\n};\n\nexport type UserAttendedMeeting = {\n  __typename?: 'UserAttendedMeeting';\n  attendanceDate: Scalars['Date'];\n  meeting?: Maybe<Meeting>;\n  user: User;\n};\n\nexport type UserAwardCount = {\n  __typename?: 'UserAwardCount';\n  count?: Maybe<Scalars['Int']>;\n  icon?: Maybe<AwardTypeIcon>;\n  id: Scalars['ID'];\n  label?: Maybe<Scalars['String']>;\n};\n\nexport type UserCustomField = {\n  __typename?: 'UserCustomField';\n  choices?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  label: Scalars['String'];\n  ref?: Maybe<Scalars['Int']>;\n  required: Scalars['Boolean'];\n  slug: Scalars['Slug'];\n  type: UserCustomFieldType;\n};\n\nexport enum UserCustomFieldType {\n  /** Drop Down */\n  DropDown = 'dropDown',\n  /** Text Field */\n  SingleField = 'singleField',\n  /** Phone Number */\n  Telephone = 'telephone'\n}\n\nexport type UserProgress = {\n  __typename?: 'UserProgress';\n  percentComplete?: Maybe<Scalars['Int']>;\n  totalTime?: Maybe<Scalars['Int']>;\n  totalViews?: Maybe<Scalars['Int']>;\n};\n\nexport type UserRecommendedSlug = {\n  __typename?: 'UserRecommendedSlug';\n  boost: Scalars['Int'];\n  slug: Scalars['String'];\n};\n\nexport type UserRecommendedTag = {\n  __typename?: 'UserRecommendedTag';\n  boost: Scalars['Int'];\n  label: Scalars['String'];\n};\n\nexport type VideoPage = PageEntity & {\n  __typename?: 'VideoPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  asset?: Maybe<Scalars['String']>;\n  body?: Maybe<Scalars['String']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  markers: Array<Marker>;\n  postAsset?: Maybe<Scalars['String']>;\n  posterImageAsset?: Maybe<Scalars['String']>;\n  preAsset?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  sidebarIsHidden?: Maybe<Scalars['Boolean']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type WaitlistedCourse = {\n  __typename?: 'WaitlistedCourse';\n  course?: Maybe<Course>;\n  courseId: Scalars['ID'];\n};\n\nexport type WebinarBlock = {\n  __typename?: 'WebinarBlock';\n  attendeeDialIn?: Maybe<Scalars['String']>;\n  coOrganizers?: Maybe<Array<Scalars['String']>>;\n  enableAutoRecording?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  joinUrl?: Maybe<Scalars['String']>;\n  organizerDialIn?: Maybe<Scalars['String']>;\n  originalWebinarDates?: Maybe<Array<WebinarDate>>;\n  recurrence?: Maybe<Scalars['JSON']>;\n  retrieveRecording?: Maybe<Scalars['Boolean']>;\n  timeZone?: Maybe<Scalars['String']>;\n  webexDescription?: Maybe<Scalars['String']>;\n  webexLabName?: Maybe<Scalars['String']>;\n  webexNumComputers?: Maybe<Scalars['Int']>;\n  webexReserveHOL?: Maybe<Scalars['Boolean']>;\n  webexSessionPassword?: Maybe<Scalars['String']>;\n  webinarDates?: Maybe<Array<WebinarDate>>;\n  webinarProvider: Scalars['String'];\n  webinarType?: Maybe<Scalars['String']>;\n};\n\nexport type WebinarDate = {\n  __typename?: 'WebinarDate';\n  endTime: Scalars['Date'];\n  goToTrainingKey?: Maybe<Scalars['String']>;\n  goToWebinarKey?: Maybe<Scalars['String']>;\n  meeting?: Maybe<Scalars['ID']>;\n  startTime: Scalars['Date'];\n  webexTrainingSessionKey?: Maybe<Scalars['String']>;\n  zoomOccurrenceKey?: Maybe<Scalars['String']>;\n};\n\nexport type WorkbookPage = AssessmentPageEntity &\n  PageEntity & {\n    __typename?: 'WorkbookPage';\n    accessibilityAudioAsset?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n    catalogAsset?: Maybe<Scalars['String']>;\n    clientId?: Maybe<Scalars['ID']>;\n    companyId: Scalars['ID'];\n    completionTimeSeconds?: Maybe<Scalars['Int']>;\n    contentDescription?: Maybe<Scalars['String']>;\n    contentEstimate?: Maybe<Scalars['String']>;\n    contentTime?: Maybe<Scalars['String']>;\n    createdAt: Scalars['Date'];\n    editableByChildren?: Maybe<Scalars['Boolean']>;\n    id: Scalars['ID'];\n    indentationLevel?: Maybe<Scalars['Int']>;\n    instructorAssessment?: Maybe<Scalars['Boolean']>;\n    lessonId: Scalars['ID'];\n    linked?: Maybe<Scalars['Boolean']>;\n    preventProgression?: Maybe<Scalars['Boolean']>;\n    questions: Array<QuizQuestion>;\n    resultsMessage?: Maybe<Scalars['String']>;\n    startMessage?: Maybe<Scalars['String']>;\n    title?: Maybe<Scalars['String']>;\n    type: TopicType;\n    updatedAt: Scalars['Date'];\n  };\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nexport type ContentFragmentFragment = {\n  __typename?: 'Content';\n  alternativePricingType?: Types.AlternativePricingType;\n  asset?: string;\n  altDescriptionBody?: string;\n  alternativePricingRef?: number;\n  authors?: Array<string>;\n  authorsAndInstructors?: Array<string>;\n  availabilityStatus?: string;\n  bulkPurchasingEnabled?: boolean;\n  canAddToQueue?: boolean;\n  contentTypeAssetAspectRatio?: string;\n  contentTypeLabel?: string;\n  courseEndDate?: string;\n  courseGracePeriodEnded: boolean;\n  courseGroup?: string;\n  coursePresold: boolean;\n  courseStartDate?: string;\n  createdAt?: string;\n  currentUserMayReschedule: boolean;\n  currentUserUnmetCoursePrerequisites?: Array<string>;\n  currentUserUnmetLearningPathPrerequisites?: Array<string>;\n  customFields?: any;\n  description?: string;\n  displayCourse?: string;\n  displayCourseSlug?: string;\n  displayDate?: string;\n  embeddedEnabled?: boolean;\n  enrollmentCount?: number;\n  expiresAt?: string;\n  kind?: Types.ContentKind;\n  hasChildren: boolean;\n  hideCourseDescription: boolean;\n  id: string;\n  isActive: boolean;\n  language?: string;\n  meetingStartDate?: string;\n  metaDescription?: string;\n  metaTitle?: string;\n  priceInCents?: number;\n  publishDate?: string;\n  rating?: number;\n  seatsLimit?: number;\n  sessionTitle?: string;\n  status?: Types.Status;\n  sku?: string;\n  slug: string;\n  source?: string;\n  suggestedRetailPriceInCents?: number;\n  timeZone?: string;\n  title?: string;\n  updatedAt?: string;\n  waitlistCount?: number;\n  waitlistingEnabled: boolean;\n  waitlistingTriggered: boolean;\n  location?: {\n    __typename?: 'Location';\n    id: string;\n    name: string;\n    room?: string;\n    address1: string;\n    address2?: string;\n    city: string;\n    state?: string;\n    zipCode?: string;\n    country?: string;\n    timeZone?: string;\n  };\n  ribbon?: {\n    __typename?: 'Ribbon';\n    color?: string;\n    contrastColor?: string;\n    darkerColor?: string;\n    label?: string;\n    slug: string;\n  };\n};\n\nexport const ContentFragmentFragmentDoc = gql`\n  fragment ContentFragment on Content {\n    alternativePricingType\n    asset\n    altDescriptionBody\n    alternativePricingRef\n    alternativePricingType\n    authors\n    authorsAndInstructors\n    availabilityStatus\n    bulkPurchasingEnabled\n    canAddToQueue\n    contentTypeAssetAspectRatio\n    contentTypeLabel\n    courseEndDate\n    courseGracePeriodEnded\n    courseGroup\n    coursePresold\n    courseStartDate\n    createdAt\n    currentUserMayReschedule\n    currentUserUnmetCoursePrerequisites\n    currentUserUnmetLearningPathPrerequisites\n    customFields\n    description\n    displayCourse\n    displayCourseSlug\n    displayDate\n    embeddedEnabled\n    enrollmentCount\n    expiresAt\n    kind\n    hasChildren\n    hideCourseDescription\n    id\n    isActive\n    language\n    location {\n      id\n      name\n      room\n      address1\n      address2\n      city\n      state\n      zipCode\n      country\n      timeZone\n    }\n    meetingStartDate\n    metaDescription\n    metaTitle\n    priceInCents\n    publishDate\n    rating\n    ribbon {\n      color\n      contrastColor\n      darkerColor\n      label\n      slug\n    }\n    seatsLimit\n    sessionTitle\n    status\n    sku\n    slug\n    source\n    suggestedRetailPriceInCents\n    timeZone\n    title\n    updatedAt\n    waitlistCount\n    waitlistingEnabled\n    waitlistingTriggered\n  }\n`;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nexport type LocationFragmentFragment = {\n  __typename?: 'Location';\n  id: string;\n  name: string;\n  room?: string;\n  address1: string;\n  address2?: string;\n  city: string;\n  state?: string;\n  zipCode?: string;\n  country?: string;\n  timeZone?: string;\n};\n\nexport const LocationFragmentFragmentDoc = gql`\n  fragment LocationFragment on Location {\n    id\n    name\n    room\n    address1\n    address2\n    city\n    state\n    zipCode\n    country\n    timeZone\n  }\n`;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nexport type CatalogMetaFragmentFragment = {\n  __typename?: 'CatalogMeta';\n  contentTypeFilterEnabled: boolean;\n  contentTypes?: Array<string>;\n  displayAuthorsEnabled: boolean;\n  displayStartDateEnabled: boolean;\n  displayDescriptionOnCalendar: boolean;\n  displayTypeCalendarEnabled: boolean;\n  displayTypeGridEnabled: boolean;\n  displayTypeListEnabled: boolean;\n  hasMore: boolean;\n  isCurated: boolean;\n  queryCustomFields: any;\n  resultsDisplayType: Types.ContentItemDisplayType;\n  selectedSortColumn: Types.SortColumn;\n  selectedSortDirection: Types.SortDirection;\n  sortCourseStartDateEnabled: boolean;\n  sortCreatedAtEnabled: boolean;\n  sortPublishDateEnabled: boolean;\n  sortRelevanceEnabled: boolean;\n  sortTitleEnabled: boolean;\n  sortUpdatedAtEnabled: boolean;\n  tokenLabel?: string;\n  total?: number;\n  aggregations?: Array<{\n    __typename?: 'Aggregation';\n    key?: string;\n    label?: string;\n    buckets?: Array<{\n      __typename?: 'AggregationBucket';\n      query?: string;\n      value?: string;\n      label?: string;\n      description?: string;\n      count?: number;\n    }>;\n  }>;\n  displayBundle?: {\n    __typename?: 'Bundle';\n    id: string;\n    name: string;\n    slug: string;\n    priceInCents?: number;\n    annualPriceInCents?: number;\n  };\n};\n\nexport const CatalogMetaFragmentFragmentDoc = gql`\n  fragment CatalogMetaFragment on CatalogMeta {\n    aggregations {\n      key\n      label\n      buckets {\n        query\n        value\n        label\n        description\n        count\n      }\n    }\n    contentTypeFilterEnabled\n    contentTypes\n    displayAuthorsEnabled\n    displayBundle {\n      id\n      name\n      slug\n      priceInCents\n      annualPriceInCents\n    }\n    displayStartDateEnabled\n    displayDescriptionOnCalendar\n    displayTypeCalendarEnabled\n    displayTypeGridEnabled\n    displayTypeListEnabled\n    hasMore\n    isCurated\n    queryCustomFields\n    resultsDisplayType\n    selectedSortColumn\n    selectedSortDirection\n    sortCourseStartDateEnabled\n    sortCreatedAtEnabled\n    sortPublishDateEnabled\n    sortRelevanceEnabled\n    sortTitleEnabled\n    sortUpdatedAtEnabled\n    tokenLabel\n    total\n  }\n`;\n","import * as Types from '../global-types';\n\nimport { ContentFragmentFragment } from './ContentFragment.generated';\nimport { LocationFragmentFragment } from './LocationFragment.generated';\nimport { CatalogMetaFragmentFragment } from './CatalogMetaFragment.generated';\nimport { gql } from '@apollo/client';\nimport { ContentFragmentFragmentDoc } from './ContentFragment.generated';\nimport { LocationFragmentFragmentDoc } from './LocationFragment.generated';\nimport { CatalogMetaFragmentFragmentDoc } from './CatalogMetaFragment.generated';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type CatalogContentQueryVariables = Types.Exact<{\n  sortColumn?: Types.InputMaybe<Types.SortColumn>;\n  sortDirection?: Types.InputMaybe<Types.SortDirection>;\n  resultsDisplayType?: Types.InputMaybe<Types.ContentItemDisplayType>;\n  page: Types.Scalars['Int'];\n  token?: Types.InputMaybe<Types.Scalars['String']>;\n  labels?: Types.InputMaybe<Array<Types.Scalars['String']> | Types.Scalars['String']>;\n  values?: Types.InputMaybe<Array<Types.Scalars['String']> | Types.Scalars['String']>;\n  contentTypes?: Types.InputMaybe<Array<Types.Scalars['String']> | Types.Scalars['String']>;\n  query?: Types.InputMaybe<Types.Scalars['String']>;\n}>;\n\nexport type CatalogContentQuery = {\n  __typename?: 'Query';\n  CatalogContent: {\n    __typename?: 'CatalogContent';\n    contentItems?: Array<\n      {\n        __typename?: 'Content';\n        location?: { __typename?: 'Location' } & LocationFragmentFragment;\n      } & ContentFragmentFragment\n    >;\n    meta: { __typename?: 'CatalogMeta' } & CatalogMetaFragmentFragment;\n  };\n};\n\nexport const CatalogContentDocument = gql`\n  query CatalogContent(\n    $sortColumn: SortColumn\n    $sortDirection: SortDirection\n    $resultsDisplayType: ContentItemDisplayType\n    $page: Int!\n    $token: String\n    $labels: [String!]\n    $values: [String!]\n    $contentTypes: [String!]\n    $query: String\n  ) {\n    CatalogContent(\n      sortColumn: $sortColumn\n      sortDirection: $sortDirection\n      resultsDisplayType: $resultsDisplayType\n      page: $page\n      token: $token\n      labels: $labels\n      values: $values\n      contentTypes: $contentTypes\n      query: $query\n    ) {\n      contentItems {\n        ...ContentFragment\n        location {\n          ...LocationFragment\n        }\n      }\n      meta {\n        ...CatalogMetaFragment\n      }\n    }\n  }\n  ${ContentFragmentFragmentDoc}\n  ${LocationFragmentFragmentDoc}\n  ${CatalogMetaFragmentFragmentDoc}\n`;\n\n/**\n * __useCatalogContentQuery__\n *\n * To run a query within a React component, call `useCatalogContentQuery` and pass it any options that fit your needs.\n * When your component renders, `useCatalogContentQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCatalogContentQuery({\n *   variables: {\n *      sortColumn: // value for 'sortColumn'\n *      sortDirection: // value for 'sortDirection'\n *      resultsDisplayType: // value for 'resultsDisplayType'\n *      page: // value for 'page'\n *      token: // value for 'token'\n *      labels: // value for 'labels'\n *      values: // value for 'values'\n *      contentTypes: // value for 'contentTypes'\n *      query: // value for 'query'\n *   },\n * });\n */\nexport function useCatalogContentQuery(\n  baseOptions: Apollo.QueryHookOptions<CatalogContentQuery, CatalogContentQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<CatalogContentQuery, CatalogContentQueryVariables>(\n    CatalogContentDocument,\n    options\n  );\n}\nexport function useCatalogContentLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<CatalogContentQuery, CatalogContentQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<CatalogContentQuery, CatalogContentQueryVariables>(\n    CatalogContentDocument,\n    options\n  );\n}\nexport type CatalogContentQueryHookResult = ReturnType<typeof useCatalogContentQuery>;\nexport type CatalogContentLazyQueryHookResult = ReturnType<typeof useCatalogContentLazyQuery>;\nexport type CatalogContentQueryResult = Apollo.QueryResult<\n  CatalogContentQuery,\n  CatalogContentQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { ContentFragmentFragment } from './ContentFragment.generated';\nimport { gql } from '@apollo/client';\nimport { ContentFragmentFragmentDoc } from './ContentFragment.generated';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type CatalogQueryVariables = Types.Exact<{\n  query?: Types.InputMaybe<Types.Scalars['String']>;\n  querySignature?: Types.InputMaybe<Types.Scalars['String']>;\n  querySort?: Types.InputMaybe<Types.Scalars['String']>;\n}>;\n\nexport type CatalogQuery = {\n  __typename?: 'Query';\n  CatalogQuery: {\n    __typename?: 'CatalogContent';\n    contentItems?: Array<{ __typename?: 'Content' } & ContentFragmentFragment>;\n  };\n};\n\nexport const CatalogDocument = gql`\n  query Catalog($query: String, $querySignature: String, $querySort: String) {\n    CatalogQuery(query: $query, querySignature: $querySignature, querySort: $querySort) {\n      contentItems {\n        ...ContentFragment\n      }\n    }\n  }\n  ${ContentFragmentFragmentDoc}\n`;\n\n/**\n * __useCatalogQuery__\n *\n * To run a query within a React component, call `useCatalogQuery` and pass it any options that fit your needs.\n * When your component renders, `useCatalogQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCatalogQuery({\n *   variables: {\n *      query: // value for 'query'\n *      querySignature: // value for 'querySignature'\n *      querySort: // value for 'querySort'\n *   },\n * });\n */\nexport function useCatalogQuery(\n  baseOptions?: Apollo.QueryHookOptions<CatalogQuery, CatalogQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<CatalogQuery, CatalogQueryVariables>(CatalogDocument, options);\n}\nexport function useCatalogLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<CatalogQuery, CatalogQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<CatalogQuery, CatalogQueryVariables>(CatalogDocument, options);\n}\nexport type CatalogQueryHookResult = ReturnType<typeof useCatalogQuery>;\nexport type CatalogLazyQueryHookResult = ReturnType<typeof useCatalogLazyQuery>;\nexport type CatalogQueryResult = Apollo.QueryResult<CatalogQuery, CatalogQueryVariables>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type LanguagesQueryQueryVariables = Types.Exact<{ [key: string]: never }>;\n\nexport type LanguagesQueryQuery = {\n  __typename?: 'Query';\n  Languages: Array<{\n    __typename?: 'Language';\n    id?: string;\n    label: string;\n    code: string;\n    isCustom?: boolean;\n    selectorLabel?: string;\n  }>;\n};\n\nexport const LanguagesQueryDocument = gql`\n  query LanguagesQuery {\n    Languages {\n      id\n      label\n      code\n      isCustom\n      selectorLabel\n    }\n  }\n`;\n\n/**\n * __useLanguagesQueryQuery__\n *\n * To run a query within a React component, call `useLanguagesQueryQuery` and pass it any options that fit your needs.\n * When your component renders, `useLanguagesQueryQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLanguagesQueryQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useLanguagesQueryQuery(\n  baseOptions?: Apollo.QueryHookOptions<LanguagesQueryQuery, LanguagesQueryQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<LanguagesQueryQuery, LanguagesQueryQueryVariables>(\n    LanguagesQueryDocument,\n    options\n  );\n}\nexport function useLanguagesQueryLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<LanguagesQueryQuery, LanguagesQueryQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<LanguagesQueryQuery, LanguagesQueryQueryVariables>(\n    LanguagesQueryDocument,\n    options\n  );\n}\nexport type LanguagesQueryQueryHookResult = ReturnType<typeof useLanguagesQueryQuery>;\nexport type LanguagesQueryLazyQueryHookResult = ReturnType<typeof useLanguagesQueryLazyQuery>;\nexport type LanguagesQueryQueryResult = Apollo.QueryResult<\n  LanguagesQueryQuery,\n  LanguagesQueryQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { ContentFragmentFragment } from './ContentFragment.generated';\nimport { gql } from '@apollo/client';\nimport { ContentFragmentFragmentDoc } from './ContentFragment.generated';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type ContentsQueryVariables = Types.Exact<{\n  ids: Array<Types.Scalars['ID']> | Types.Scalars['ID'];\n}>;\n\nexport type ContentsQuery = {\n  __typename?: 'Query';\n  QueryContents: Array<{ __typename?: 'Content' } & ContentFragmentFragment>;\n};\n\nexport const ContentsDocument = gql`\n  query Contents($ids: [ID!]!) {\n    QueryContents(ids: $ids) {\n      ...ContentFragment\n    }\n  }\n  ${ContentFragmentFragmentDoc}\n`;\n\n/**\n * __useContentsQuery__\n *\n * To run a query within a React component, call `useContentsQuery` and pass it any options that fit your needs.\n * When your component renders, `useContentsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useContentsQuery({\n *   variables: {\n *      ids: // value for 'ids'\n *   },\n * });\n */\nexport function useContentsQuery(\n  baseOptions: Apollo.QueryHookOptions<ContentsQuery, ContentsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<ContentsQuery, ContentsQueryVariables>(ContentsDocument, options);\n}\nexport function useContentsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<ContentsQuery, ContentsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<ContentsQuery, ContentsQueryVariables>(ContentsDocument, options);\n}\nexport type ContentsQueryHookResult = ReturnType<typeof useContentsQuery>;\nexport type ContentsLazyQueryHookResult = ReturnType<typeof useContentsLazyQuery>;\nexport type ContentsQueryResult = Apollo.QueryResult<ContentsQuery, ContentsQueryVariables>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type RssItemsQueryVariables = Types.Exact<{\n  feedUrl: Types.Scalars['String'];\n}>;\n\nexport type RssItemsQuery = {\n  __typename?: 'Query';\n  RssItems: Array<{ __typename?: 'RssItem'; title?: string; link?: string }>;\n};\n\nexport const RssItemsDocument = gql`\n  query RssItems($feedUrl: String!) {\n    RssItems(feedUrl: $feedUrl) {\n      title\n      link\n    }\n  }\n`;\n\n/**\n * __useRssItemsQuery__\n *\n * To run a query within a React component, call `useRssItemsQuery` and pass it any options that fit your needs.\n * When your component renders, `useRssItemsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRssItemsQuery({\n *   variables: {\n *      feedUrl: // value for 'feedUrl'\n *   },\n * });\n */\nexport function useRssItemsQuery(\n  baseOptions: Apollo.QueryHookOptions<RssItemsQuery, RssItemsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<RssItemsQuery, RssItemsQueryVariables>(RssItemsDocument, options);\n}\nexport function useRssItemsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<RssItemsQuery, RssItemsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<RssItemsQuery, RssItemsQueryVariables>(RssItemsDocument, options);\n}\nexport type RssItemsQueryHookResult = ReturnType<typeof useRssItemsQuery>;\nexport type RssItemsLazyQueryHookResult = ReturnType<typeof useRssItemsLazyQuery>;\nexport type RssItemsQueryResult = Apollo.QueryResult<RssItemsQuery, RssItemsQueryVariables>;\n","import * as Types from '../global-types';\n\nimport { ContentFragmentFragment } from './ContentFragment.generated';\nimport { gql } from '@apollo/client';\nimport { ContentFragmentFragmentDoc } from './ContentFragment.generated';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserRecentContentQueryVariables = Types.Exact<{\n  limit?: Types.InputMaybe<Types.Scalars['Int']>;\n}>;\n\nexport type UserRecentContentQuery = {\n  __typename?: 'Query';\n  UserRecentContent: Array<{ __typename?: 'Content' } & ContentFragmentFragment>;\n};\n\nexport const UserRecentContentDocument = gql`\n  query UserRecentContent($limit: Int) {\n    UserRecentContent(limit: $limit) {\n      ...ContentFragment\n    }\n  }\n  ${ContentFragmentFragmentDoc}\n`;\n\n/**\n * __useUserRecentContentQuery__\n *\n * To run a query within a React component, call `useUserRecentContentQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserRecentContentQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserRecentContentQuery({\n *   variables: {\n *      limit: // value for 'limit'\n *   },\n * });\n */\nexport function useUserRecentContentQuery(\n  baseOptions?: Apollo.QueryHookOptions<UserRecentContentQuery, UserRecentContentQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserRecentContentQuery, UserRecentContentQueryVariables>(\n    UserRecentContentDocument,\n    options\n  );\n}\nexport function useUserRecentContentLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<UserRecentContentQuery, UserRecentContentQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserRecentContentQuery, UserRecentContentQueryVariables>(\n    UserRecentContentDocument,\n    options\n  );\n}\nexport type UserRecentContentQueryHookResult = ReturnType<typeof useUserRecentContentQuery>;\nexport type UserRecentContentLazyQueryHookResult = ReturnType<typeof useUserRecentContentLazyQuery>;\nexport type UserRecentContentQueryResult = Apollo.QueryResult<\n  UserRecentContentQuery,\n  UserRecentContentQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserContentItemsQueryVariables = Types.Exact<{\n  query?: Types.InputMaybe<Types.Scalars['String']>;\n  kind?: Types.InputMaybe<Array<Types.ContentKind> | Types.ContentKind>;\n  sortColumn?: Types.InputMaybe<Types.SortColumn>;\n  sortDirection?: Types.InputMaybe<Types.SortDirection>;\n}>;\n\nexport type UserContentItemsQuery = {\n  __typename?: 'Query';\n  UserContentItems?: Array<{\n    __typename?: 'Content';\n    asset?: string;\n    title?: string;\n    sessionTitle?: string;\n    kind?: Types.ContentKind;\n    id: string;\n    slug: string;\n    meetingStartDate?: string;\n    contentTypeLabel?: string;\n    availabilityStatus?: string;\n    courseStartDate?: string;\n    courseEndDate?: string;\n    coursePresold: boolean;\n    description?: string;\n    displayCourse?: string;\n    displayCourseSlug?: string;\n    displayDate?: string;\n    courseGracePeriodEnded: boolean;\n    authors?: Array<string>;\n    publishDate?: string;\n    source?: string;\n    expiresAt?: string;\n    currentUserMayReschedule: boolean;\n    timeZone?: string;\n    embeddedEnabled?: boolean;\n    currentUserUnmetCoursePrerequisites?: Array<string>;\n    currentUserUnmetLearningPathPrerequisites?: Array<string>;\n    hasChildren: boolean;\n    hideCourseDescription: boolean;\n    isActive: boolean;\n    waitlistingEnabled: boolean;\n    waitlistingTriggered: boolean;\n  }>;\n};\n\nexport const UserContentItemsDocument = gql`\n  query UserContentItems(\n    $query: String\n    $kind: [ContentKind!]\n    $sortColumn: SortColumn\n    $sortDirection: SortDirection\n  ) {\n    UserContentItems(\n      query: $query\n      kind: $kind\n      sortColumn: $sortColumn\n      sortDirection: $sortDirection\n    ) {\n      asset\n      title\n      sessionTitle\n      kind\n      id\n      slug\n      meetingStartDate\n      contentTypeLabel\n      availabilityStatus\n      courseStartDate\n      courseEndDate\n      coursePresold\n      description\n      displayCourse\n      displayCourseSlug\n      displayDate\n      courseGracePeriodEnded\n      authors\n      publishDate\n      source\n      expiresAt\n      currentUserMayReschedule\n      timeZone\n      embeddedEnabled\n      currentUserUnmetCoursePrerequisites\n      currentUserUnmetLearningPathPrerequisites\n      hasChildren\n      hideCourseDescription\n      isActive\n      waitlistingEnabled\n      waitlistingTriggered\n    }\n  }\n`;\n\n/**\n * __useUserContentItemsQuery__\n *\n * To run a query within a React component, call `useUserContentItemsQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserContentItemsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserContentItemsQuery({\n *   variables: {\n *      query: // value for 'query'\n *      kind: // value for 'kind'\n *      sortColumn: // value for 'sortColumn'\n *      sortDirection: // value for 'sortDirection'\n *   },\n * });\n */\nexport function useUserContentItemsQuery(\n  baseOptions?: Apollo.QueryHookOptions<UserContentItemsQuery, UserContentItemsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserContentItemsQuery, UserContentItemsQueryVariables>(\n    UserContentItemsDocument,\n    options\n  );\n}\nexport function useUserContentItemsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<UserContentItemsQuery, UserContentItemsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserContentItemsQuery, UserContentItemsQueryVariables>(\n    UserContentItemsDocument,\n    options\n  );\n}\nexport type UserContentItemsQueryHookResult = ReturnType<typeof useUserContentItemsQuery>;\nexport type UserContentItemsLazyQueryHookResult = ReturnType<typeof useUserContentItemsLazyQuery>;\nexport type UserContentItemsQueryResult = Apollo.QueryResult<\n  UserContentItemsQuery,\n  UserContentItemsQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserArchivesQueryVariables = Types.Exact<{ [key: string]: never }>;\n\nexport type UserArchivesQuery = {\n  __typename?: 'Query';\n  UserArchives?: Array<{\n    __typename?: 'ArchivedContent';\n    id: string;\n    user?: string;\n    resource?: string;\n    resourceType?: string;\n    status?: string;\n    archivedAt?: string;\n    name?: string;\n    reinstatable: boolean;\n    waitlistActive: boolean;\n  }>;\n};\n\nexport const UserArchivesDocument = gql`\n  query UserArchives {\n    UserArchives {\n      id\n      user\n      resource\n      resourceType\n      status\n      archivedAt\n      name\n      reinstatable\n      waitlistActive\n    }\n  }\n`;\n\n/**\n * __useUserArchivesQuery__\n *\n * To run a query within a React component, call `useUserArchivesQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserArchivesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserArchivesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUserArchivesQuery(\n  baseOptions?: Apollo.QueryHookOptions<UserArchivesQuery, UserArchivesQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserArchivesQuery, UserArchivesQueryVariables>(\n    UserArchivesDocument,\n    options\n  );\n}\nexport function useUserArchivesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<UserArchivesQuery, UserArchivesQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserArchivesQuery, UserArchivesQueryVariables>(\n    UserArchivesDocument,\n    options\n  );\n}\nexport type UserArchivesQueryHookResult = ReturnType<typeof useUserArchivesQuery>;\nexport type UserArchivesLazyQueryHookResult = ReturnType<typeof useUserArchivesLazyQuery>;\nexport type UserArchivesQueryResult = Apollo.QueryResult<\n  UserArchivesQuery,\n  UserArchivesQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserWaitlistQueryVariables = Types.Exact<{ [key: string]: never }>;\n\nexport type UserWaitlistQuery = {\n  __typename?: 'Query';\n  UserWaitlist?: Array<{\n    __typename?: 'Content';\n    id: string;\n    contentTypeLabel?: string;\n    title?: string;\n    kind?: Types.ContentKind;\n    slug: string;\n    displayCourse?: string;\n    displayCourseSlug?: string;\n  }>;\n};\n\nexport const UserWaitlistDocument = gql`\n  query UserWaitlist {\n    UserWaitlist {\n      id\n      contentTypeLabel\n      title\n      kind\n      slug\n      displayCourse\n      displayCourseSlug\n    }\n  }\n`;\n\n/**\n * __useUserWaitlistQuery__\n *\n * To run a query within a React component, call `useUserWaitlistQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserWaitlistQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserWaitlistQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUserWaitlistQuery(\n  baseOptions?: Apollo.QueryHookOptions<UserWaitlistQuery, UserWaitlistQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserWaitlistQuery, UserWaitlistQueryVariables>(\n    UserWaitlistDocument,\n    options\n  );\n}\nexport function useUserWaitlistLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<UserWaitlistQuery, UserWaitlistQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserWaitlistQuery, UserWaitlistQueryVariables>(\n    UserWaitlistDocument,\n    options\n  );\n}\nexport type UserWaitlistQueryHookResult = ReturnType<typeof useUserWaitlistQuery>;\nexport type UserWaitlistLazyQueryHookResult = ReturnType<typeof useUserWaitlistLazyQuery>;\nexport type UserWaitlistQueryResult = Apollo.QueryResult<\n  UserWaitlistQuery,\n  UserWaitlistQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserBookmarksQueryVariables = Types.Exact<{ [key: string]: never }>;\n\nexport type UserBookmarksQuery = {\n  __typename?: 'Query';\n  UserBookmarks?: Array<{\n    __typename?: 'BookmarkFolder';\n    id: string;\n    name: string;\n    defaultFolder?: boolean;\n    bookmarkCount?: number;\n  }>;\n};\n\nexport const UserBookmarksDocument = gql`\n  query UserBookmarks {\n    UserBookmarks {\n      id\n      name\n      defaultFolder\n      bookmarkCount\n    }\n  }\n`;\n\n/**\n * __useUserBookmarksQuery__\n *\n * To run a query within a React component, call `useUserBookmarksQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserBookmarksQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserBookmarksQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUserBookmarksQuery(\n  baseOptions?: Apollo.QueryHookOptions<UserBookmarksQuery, UserBookmarksQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserBookmarksQuery, UserBookmarksQueryVariables>(\n    UserBookmarksDocument,\n    options\n  );\n}\nexport function useUserBookmarksLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<UserBookmarksQuery, UserBookmarksQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserBookmarksQuery, UserBookmarksQueryVariables>(\n    UserBookmarksDocument,\n    options\n  );\n}\nexport type UserBookmarksQueryHookResult = ReturnType<typeof useUserBookmarksQuery>;\nexport type UserBookmarksLazyQueryHookResult = ReturnType<typeof useUserBookmarksLazyQuery>;\nexport type UserBookmarksQueryResult = Apollo.QueryResult<\n  UserBookmarksQuery,\n  UserBookmarksQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserCertificatesQueryVariables = Types.Exact<{\n  query?: Types.InputMaybe<Types.Scalars['String']>;\n  includeExpiredCertificates?: Types.InputMaybe<Types.Scalars['Boolean']>;\n}>;\n\nexport type UserCertificatesQuery = {\n  __typename?: 'Query';\n  UserCertificates?: Array<{\n    __typename?: 'Certificate';\n    id: string;\n    resourceId?: string;\n    expirationDate?: string;\n    isExpired: boolean;\n    externalResourceTitle?: string;\n    url: string;\n    source?: string;\n    contentItem?: {\n      __typename?: 'Content';\n      id: string;\n      asset?: string;\n      courseEndDate?: string;\n      courseStartDate?: string;\n      coursePresold: boolean;\n      description?: string;\n      kind?: Types.ContentKind;\n      slug: string;\n      availabilityStatus?: string;\n      contentTypeLabel?: string;\n      title?: string;\n      timeZone?: string;\n    };\n  }>;\n};\n\nexport const UserCertificatesDocument = gql`\n  query UserCertificates($query: String, $includeExpiredCertificates: Boolean) {\n    UserCertificates(query: $query, includeExpiredCertificates: $includeExpiredCertificates) {\n      id\n      resourceId\n      expirationDate\n      isExpired\n      externalResourceTitle\n      url\n      source\n      contentItem {\n        id\n        asset\n        courseEndDate\n        courseStartDate\n        coursePresold\n        description\n        kind\n        slug\n        availabilityStatus\n        contentTypeLabel\n        title\n        timeZone\n      }\n    }\n  }\n`;\n\n/**\n * __useUserCertificatesQuery__\n *\n * To run a query within a React component, call `useUserCertificatesQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserCertificatesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserCertificatesQuery({\n *   variables: {\n *      query: // value for 'query'\n *      includeExpiredCertificates: // value for 'includeExpiredCertificates'\n *   },\n * });\n */\nexport function useUserCertificatesQuery(\n  baseOptions?: Apollo.QueryHookOptions<UserCertificatesQuery, UserCertificatesQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserCertificatesQuery, UserCertificatesQueryVariables>(\n    UserCertificatesDocument,\n    options\n  );\n}\nexport function useUserCertificatesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<UserCertificatesQuery, UserCertificatesQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserCertificatesQuery, UserCertificatesQueryVariables>(\n    UserCertificatesDocument,\n    options\n  );\n}\nexport type UserCertificatesQueryHookResult = ReturnType<typeof useUserCertificatesQuery>;\nexport type UserCertificatesLazyQueryHookResult = ReturnType<typeof useUserCertificatesLazyQuery>;\nexport type UserCertificatesQueryResult = Apollo.QueryResult<\n  UserCertificatesQuery,\n  UserCertificatesQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type ContentGroupsQueryVariables = Types.Exact<{\n  query?: Types.InputMaybe<Types.Scalars['String']>;\n  includeExpiredCertificates?: Types.InputMaybe<Types.Scalars['Boolean']>;\n}>;\n\nexport type ContentGroupsQuery = {\n  __typename?: 'Query';\n  UserContentGroups?: Array<{\n    __typename?: 'ContentGroup';\n    kind: Types.ContentGroupKind;\n    count: number;\n  }>;\n};\n\nexport const ContentGroupsDocument = gql`\n  query ContentGroups($query: String, $includeExpiredCertificates: Boolean) {\n    UserContentGroups(query: $query, includeExpiredCertificates: $includeExpiredCertificates) {\n      kind\n      count\n    }\n  }\n`;\n\n/**\n * __useContentGroupsQuery__\n *\n * To run a query within a React component, call `useContentGroupsQuery` and pass it any options that fit your needs.\n * When your component renders, `useContentGroupsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useContentGroupsQuery({\n *   variables: {\n *      query: // value for 'query'\n *      includeExpiredCertificates: // value for 'includeExpiredCertificates'\n *   },\n * });\n */\nexport function useContentGroupsQuery(\n  baseOptions?: Apollo.QueryHookOptions<ContentGroupsQuery, ContentGroupsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<ContentGroupsQuery, ContentGroupsQueryVariables>(\n    ContentGroupsDocument,\n    options\n  );\n}\nexport function useContentGroupsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<ContentGroupsQuery, ContentGroupsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<ContentGroupsQuery, ContentGroupsQueryVariables>(\n    ContentGroupsDocument,\n    options\n  );\n}\nexport type ContentGroupsQueryHookResult = ReturnType<typeof useContentGroupsQuery>;\nexport type ContentGroupsLazyQueryHookResult = ReturnType<typeof useContentGroupsLazyQuery>;\nexport type ContentGroupsQueryResult = Apollo.QueryResult<\n  ContentGroupsQuery,\n  ContentGroupsQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserBookmarksByFolderQueryVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type UserBookmarksByFolderQuery = {\n  __typename?: 'Query';\n  UserBookmarksByFolder?: Array<{\n    __typename?: 'Bookmark';\n    id: string;\n    topicId?: string;\n    note?: string;\n    createdAt: string;\n    course: {\n      __typename?: 'Course';\n      id: string;\n      title?: string;\n      slug: string;\n      status?: Types.Status;\n      courseGroup?: {\n        __typename?: 'CourseGroup';\n        id: string;\n        authors?: Array<string>;\n        source?: string;\n        asset?: string;\n        kind?: Types.CourseGroupKind;\n        contentType?: { __typename?: 'ContentType'; label?: string };\n      };\n    };\n  }>;\n};\n\nexport const UserBookmarksByFolderDocument = gql`\n  query UserBookmarksByFolder($id: ID!) {\n    UserBookmarksByFolder(id: $id) {\n      id\n      course {\n        id\n        title\n        slug\n        status\n        courseGroup {\n          id\n          authors\n          source\n          asset\n          kind\n          contentType {\n            label\n          }\n        }\n      }\n      topicId\n      note\n      createdAt\n    }\n  }\n`;\n\n/**\n * __useUserBookmarksByFolderQuery__\n *\n * To run a query within a React component, call `useUserBookmarksByFolderQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserBookmarksByFolderQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserBookmarksByFolderQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useUserBookmarksByFolderQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    UserBookmarksByFolderQuery,\n    UserBookmarksByFolderQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserBookmarksByFolderQuery, UserBookmarksByFolderQueryVariables>(\n    UserBookmarksByFolderDocument,\n    options\n  );\n}\nexport function useUserBookmarksByFolderLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    UserBookmarksByFolderQuery,\n    UserBookmarksByFolderQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserBookmarksByFolderQuery, UserBookmarksByFolderQueryVariables>(\n    UserBookmarksByFolderDocument,\n    options\n  );\n}\nexport type UserBookmarksByFolderQueryHookResult = ReturnType<typeof useUserBookmarksByFolderQuery>;\nexport type UserBookmarksByFolderLazyQueryHookResult = ReturnType<\n  typeof useUserBookmarksByFolderLazyQuery\n>;\nexport type UserBookmarksByFolderQueryResult = Apollo.QueryResult<\n  UserBookmarksByFolderQuery,\n  UserBookmarksByFolderQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserCourseCompletionProgressQueryVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type UserCourseCompletionProgressQuery = {\n  __typename?: 'Query';\n  UserCourseCompletionProgress?: Array<{\n    __typename?: 'CourseCompletionCriteriaProgress';\n    type?: Types.CourseCompletionCriteriaType;\n    required?: Array<string>;\n    completed?: Array<string>;\n    percent: number;\n  }>;\n};\n\nexport const UserCourseCompletionProgressDocument = gql`\n  query UserCourseCompletionProgress($id: ID!) {\n    UserCourseCompletionProgress(id: $id) {\n      type\n      required\n      completed\n      percent\n    }\n  }\n`;\n\n/**\n * __useUserCourseCompletionProgressQuery__\n *\n * To run a query within a React component, call `useUserCourseCompletionProgressQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserCourseCompletionProgressQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserCourseCompletionProgressQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useUserCourseCompletionProgressQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    UserCourseCompletionProgressQuery,\n    UserCourseCompletionProgressQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<\n    UserCourseCompletionProgressQuery,\n    UserCourseCompletionProgressQueryVariables\n  >(UserCourseCompletionProgressDocument, options);\n}\nexport function useUserCourseCompletionProgressLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    UserCourseCompletionProgressQuery,\n    UserCourseCompletionProgressQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<\n    UserCourseCompletionProgressQuery,\n    UserCourseCompletionProgressQueryVariables\n  >(UserCourseCompletionProgressDocument, options);\n}\nexport type UserCourseCompletionProgressQueryHookResult = ReturnType<\n  typeof useUserCourseCompletionProgressQuery\n>;\nexport type UserCourseCompletionProgressLazyQueryHookResult = ReturnType<\n  typeof useUserCourseCompletionProgressLazyQuery\n>;\nexport type UserCourseCompletionProgressQueryResult = Apollo.QueryResult<\n  UserCourseCompletionProgressQuery,\n  UserCourseCompletionProgressQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserCourseProgressQueryVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type UserCourseProgressQuery = {\n  __typename?: 'Query';\n  UserCourseProgress?: {\n    __typename?: 'UserProgress';\n    totalViews?: number;\n    totalTime?: number;\n    percentComplete?: number;\n  };\n};\n\nexport const UserCourseProgressDocument = gql`\n  query UserCourseProgress($id: ID!) {\n    UserCourseProgress(id: $id) {\n      totalViews\n      totalTime\n      percentComplete\n    }\n  }\n`;\n\n/**\n * __useUserCourseProgressQuery__\n *\n * To run a query within a React component, call `useUserCourseProgressQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserCourseProgressQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserCourseProgressQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useUserCourseProgressQuery(\n  baseOptions: Apollo.QueryHookOptions<UserCourseProgressQuery, UserCourseProgressQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserCourseProgressQuery, UserCourseProgressQueryVariables>(\n    UserCourseProgressDocument,\n    options\n  );\n}\nexport function useUserCourseProgressLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    UserCourseProgressQuery,\n    UserCourseProgressQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserCourseProgressQuery, UserCourseProgressQueryVariables>(\n    UserCourseProgressDocument,\n    options\n  );\n}\nexport type UserCourseProgressQueryHookResult = ReturnType<typeof useUserCourseProgressQuery>;\nexport type UserCourseProgressLazyQueryHookResult = ReturnType<\n  typeof useUserCourseProgressLazyQuery\n>;\nexport type UserCourseProgressQueryResult = Apollo.QueryResult<\n  UserCourseProgressQuery,\n  UserCourseProgressQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserCourseAwardCountsQueryVariables = Types.Exact<{\n  courseId: Types.Scalars['ID'];\n}>;\n\nexport type UserCourseAwardCountsQuery = {\n  __typename?: 'Query';\n  UserCourseAwardCounts: Array<{\n    __typename?: 'UserAwardCount';\n    id: string;\n    label?: string;\n    icon?: Types.AwardTypeIcon;\n    count?: number;\n  }>;\n};\n\nexport const UserCourseAwardCountsDocument = gql`\n  query UserCourseAwardCounts($courseId: ID!) {\n    UserCourseAwardCounts(courseId: $courseId) {\n      id\n      label\n      icon\n      count\n    }\n  }\n`;\n\n/**\n * __useUserCourseAwardCountsQuery__\n *\n * To run a query within a React component, call `useUserCourseAwardCountsQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserCourseAwardCountsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserCourseAwardCountsQuery({\n *   variables: {\n *      courseId: // value for 'courseId'\n *   },\n * });\n */\nexport function useUserCourseAwardCountsQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    UserCourseAwardCountsQuery,\n    UserCourseAwardCountsQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserCourseAwardCountsQuery, UserCourseAwardCountsQueryVariables>(\n    UserCourseAwardCountsDocument,\n    options\n  );\n}\nexport function useUserCourseAwardCountsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    UserCourseAwardCountsQuery,\n    UserCourseAwardCountsQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserCourseAwardCountsQuery, UserCourseAwardCountsQueryVariables>(\n    UserCourseAwardCountsDocument,\n    options\n  );\n}\nexport type UserCourseAwardCountsQueryHookResult = ReturnType<typeof useUserCourseAwardCountsQuery>;\nexport type UserCourseAwardCountsLazyQueryHookResult = ReturnType<\n  typeof useUserCourseAwardCountsLazyQuery\n>;\nexport type UserCourseAwardCountsQueryResult = Apollo.QueryResult<\n  UserCourseAwardCountsQuery,\n  UserCourseAwardCountsQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserCourseCollaborationsQueryVariables = Types.Exact<{\n  courseId: Types.Scalars['ID'];\n}>;\n\nexport type UserCourseCollaborationsQuery = {\n  __typename?: 'Query';\n  UserCourseCollaborations: number;\n};\n\nexport const UserCourseCollaborationsDocument = gql`\n  query UserCourseCollaborations($courseId: ID!) {\n    UserCourseCollaborations(courseId: $courseId)\n  }\n`;\n\n/**\n * __useUserCourseCollaborationsQuery__\n *\n * To run a query within a React component, call `useUserCourseCollaborationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserCourseCollaborationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserCourseCollaborationsQuery({\n *   variables: {\n *      courseId: // value for 'courseId'\n *   },\n * });\n */\nexport function useUserCourseCollaborationsQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    UserCourseCollaborationsQuery,\n    UserCourseCollaborationsQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserCourseCollaborationsQuery, UserCourseCollaborationsQueryVariables>(\n    UserCourseCollaborationsDocument,\n    options\n  );\n}\nexport function useUserCourseCollaborationsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    UserCourseCollaborationsQuery,\n    UserCourseCollaborationsQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserCourseCollaborationsQuery, UserCourseCollaborationsQueryVariables>(\n    UserCourseCollaborationsDocument,\n    options\n  );\n}\nexport type UserCourseCollaborationsQueryHookResult = ReturnType<\n  typeof useUserCourseCollaborationsQuery\n>;\nexport type UserCourseCollaborationsLazyQueryHookResult = ReturnType<\n  typeof useUserCourseCollaborationsLazyQuery\n>;\nexport type UserCourseCollaborationsQueryResult = Apollo.QueryResult<\n  UserCourseCollaborationsQuery,\n  UserCourseCollaborationsQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserCertificateFieldsQueryVariables = Types.Exact<{ [key: string]: never }>;\n\nexport type UserCertificateFieldsQuery = {\n  __typename?: 'Query';\n  UserCertificateFields?: Array<{\n    __typename?: 'CertificateField';\n    id: string;\n    type: Types.CertificateFieldType;\n    label: string;\n    awardTypeId?: string;\n    awardType?: { __typename?: 'AwardType'; id: string; pluralLabel?: string };\n  }>;\n};\n\nexport const UserCertificateFieldsDocument = gql`\n  query UserCertificateFields {\n    UserCertificateFields {\n      id\n      type\n      label\n      awardTypeId\n      awardType {\n        id\n        pluralLabel\n      }\n    }\n  }\n`;\n\n/**\n * __useUserCertificateFieldsQuery__\n *\n * To run a query within a React component, call `useUserCertificateFieldsQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserCertificateFieldsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserCertificateFieldsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUserCertificateFieldsQuery(\n  baseOptions?: Apollo.QueryHookOptions<\n    UserCertificateFieldsQuery,\n    UserCertificateFieldsQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserCertificateFieldsQuery, UserCertificateFieldsQueryVariables>(\n    UserCertificateFieldsDocument,\n    options\n  );\n}\nexport function useUserCertificateFieldsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    UserCertificateFieldsQuery,\n    UserCertificateFieldsQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserCertificateFieldsQuery, UserCertificateFieldsQueryVariables>(\n    UserCertificateFieldsDocument,\n    options\n  );\n}\nexport type UserCertificateFieldsQueryHookResult = ReturnType<typeof useUserCertificateFieldsQuery>;\nexport type UserCertificateFieldsLazyQueryHookResult = ReturnType<\n  typeof useUserCertificateFieldsLazyQuery\n>;\nexport type UserCertificateFieldsQueryResult = Apollo.QueryResult<\n  UserCertificateFieldsQuery,\n  UserCertificateFieldsQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type AddResourceToQueueMutationVariables = Types.Exact<{\n  resourceType?: Types.InputMaybe<Types.ContentKind>;\n  resourceId: Types.Scalars['ID'];\n}>;\n\nexport type AddResourceToQueueMutation = { __typename?: 'Mutation'; AddResourceToQueue: boolean };\n\nexport const AddResourceToQueueDocument = gql`\n  mutation AddResourceToQueue($resourceType: ContentKind, $resourceId: ID!) {\n    AddResourceToQueue(resourceType: $resourceType, resourceId: $resourceId)\n  }\n`;\nexport type AddResourceToQueueMutationFn = Apollo.MutationFunction<\n  AddResourceToQueueMutation,\n  AddResourceToQueueMutationVariables\n>;\n\n/**\n * __useAddResourceToQueueMutation__\n *\n * To run a mutation, you first call `useAddResourceToQueueMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddResourceToQueueMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addResourceToQueueMutation, { data, loading, error }] = useAddResourceToQueueMutation({\n *   variables: {\n *      resourceType: // value for 'resourceType'\n *      resourceId: // value for 'resourceId'\n *   },\n * });\n */\nexport function useAddResourceToQueueMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    AddResourceToQueueMutation,\n    AddResourceToQueueMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<AddResourceToQueueMutation, AddResourceToQueueMutationVariables>(\n    AddResourceToQueueDocument,\n    options\n  );\n}\nexport type AddResourceToQueueMutationHookResult = ReturnType<typeof useAddResourceToQueueMutation>;\nexport type AddResourceToQueueMutationResult = Apollo.MutationResult<AddResourceToQueueMutation>;\nexport type AddResourceToQueueMutationOptions = Apollo.BaseMutationOptions<\n  AddResourceToQueueMutation,\n  AddResourceToQueueMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type ArchiveUserCourseMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type ArchiveUserCourseMutation = { __typename?: 'Mutation'; ArchiveUserCourse?: string };\n\nexport const ArchiveUserCourseDocument = gql`\n  mutation ArchiveUserCourse($id: ID!) {\n    ArchiveUserCourse(id: $id)\n  }\n`;\nexport type ArchiveUserCourseMutationFn = Apollo.MutationFunction<\n  ArchiveUserCourseMutation,\n  ArchiveUserCourseMutationVariables\n>;\n\n/**\n * __useArchiveUserCourseMutation__\n *\n * To run a mutation, you first call `useArchiveUserCourseMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveUserCourseMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveUserCourseMutation, { data, loading, error }] = useArchiveUserCourseMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveUserCourseMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    ArchiveUserCourseMutation,\n    ArchiveUserCourseMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<ArchiveUserCourseMutation, ArchiveUserCourseMutationVariables>(\n    ArchiveUserCourseDocument,\n    options\n  );\n}\nexport type ArchiveUserCourseMutationHookResult = ReturnType<typeof useArchiveUserCourseMutation>;\nexport type ArchiveUserCourseMutationResult = Apollo.MutationResult<ArchiveUserCourseMutation>;\nexport type ArchiveUserCourseMutationOptions = Apollo.BaseMutationOptions<\n  ArchiveUserCourseMutation,\n  ArchiveUserCourseMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type ArchiveUserLearningPathMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type ArchiveUserLearningPathMutation = {\n  __typename?: 'Mutation';\n  ArchiveUserLearningPath?: string;\n};\n\nexport const ArchiveUserLearningPathDocument = gql`\n  mutation ArchiveUserLearningPath($id: ID!) {\n    ArchiveUserLearningPath(id: $id)\n  }\n`;\nexport type ArchiveUserLearningPathMutationFn = Apollo.MutationFunction<\n  ArchiveUserLearningPathMutation,\n  ArchiveUserLearningPathMutationVariables\n>;\n\n/**\n * __useArchiveUserLearningPathMutation__\n *\n * To run a mutation, you first call `useArchiveUserLearningPathMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveUserLearningPathMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveUserLearningPathMutation, { data, loading, error }] = useArchiveUserLearningPathMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveUserLearningPathMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    ArchiveUserLearningPathMutation,\n    ArchiveUserLearningPathMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<\n    ArchiveUserLearningPathMutation,\n    ArchiveUserLearningPathMutationVariables\n  >(ArchiveUserLearningPathDocument, options);\n}\nexport type ArchiveUserLearningPathMutationHookResult = ReturnType<\n  typeof useArchiveUserLearningPathMutation\n>;\nexport type ArchiveUserLearningPathMutationResult =\n  Apollo.MutationResult<ArchiveUserLearningPathMutation>;\nexport type ArchiveUserLearningPathMutationOptions = Apollo.BaseMutationOptions<\n  ArchiveUserLearningPathMutation,\n  ArchiveUserLearningPathMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type ReinstateUserLearningPathMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type ReinstateUserLearningPathMutation = {\n  __typename?: 'Mutation';\n  ReinstateUserLearningPath?: string;\n};\n\nexport const ReinstateUserLearningPathDocument = gql`\n  mutation ReinstateUserLearningPath($id: ID!) {\n    ReinstateUserLearningPath(id: $id)\n  }\n`;\nexport type ReinstateUserLearningPathMutationFn = Apollo.MutationFunction<\n  ReinstateUserLearningPathMutation,\n  ReinstateUserLearningPathMutationVariables\n>;\n\n/**\n * __useReinstateUserLearningPathMutation__\n *\n * To run a mutation, you first call `useReinstateUserLearningPathMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReinstateUserLearningPathMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reinstateUserLearningPathMutation, { data, loading, error }] = useReinstateUserLearningPathMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReinstateUserLearningPathMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    ReinstateUserLearningPathMutation,\n    ReinstateUserLearningPathMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<\n    ReinstateUserLearningPathMutation,\n    ReinstateUserLearningPathMutationVariables\n  >(ReinstateUserLearningPathDocument, options);\n}\nexport type ReinstateUserLearningPathMutationHookResult = ReturnType<\n  typeof useReinstateUserLearningPathMutation\n>;\nexport type ReinstateUserLearningPathMutationResult =\n  Apollo.MutationResult<ReinstateUserLearningPathMutation>;\nexport type ReinstateUserLearningPathMutationOptions = Apollo.BaseMutationOptions<\n  ReinstateUserLearningPathMutation,\n  ReinstateUserLearningPathMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type ReinstateUserCourseMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type ReinstateUserCourseMutation = { __typename?: 'Mutation'; ReinstateUserCourse?: string };\n\nexport const ReinstateUserCourseDocument = gql`\n  mutation ReinstateUserCourse($id: ID!) {\n    ReinstateUserCourse(id: $id)\n  }\n`;\nexport type ReinstateUserCourseMutationFn = Apollo.MutationFunction<\n  ReinstateUserCourseMutation,\n  ReinstateUserCourseMutationVariables\n>;\n\n/**\n * __useReinstateUserCourseMutation__\n *\n * To run a mutation, you first call `useReinstateUserCourseMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReinstateUserCourseMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reinstateUserCourseMutation, { data, loading, error }] = useReinstateUserCourseMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReinstateUserCourseMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    ReinstateUserCourseMutation,\n    ReinstateUserCourseMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<ReinstateUserCourseMutation, ReinstateUserCourseMutationVariables>(\n    ReinstateUserCourseDocument,\n    options\n  );\n}\nexport type ReinstateUserCourseMutationHookResult = ReturnType<\n  typeof useReinstateUserCourseMutation\n>;\nexport type ReinstateUserCourseMutationResult = Apollo.MutationResult<ReinstateUserCourseMutation>;\nexport type ReinstateUserCourseMutationOptions = Apollo.BaseMutationOptions<\n  ReinstateUserCourseMutation,\n  ReinstateUserCourseMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UnenrollFromWaitlistMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type UnenrollFromWaitlistMutation = {\n  __typename?: 'Mutation';\n  UnenrollFromWaitlist: boolean;\n};\n\nexport const UnenrollFromWaitlistDocument = gql`\n  mutation UnenrollFromWaitlist($id: ID!) {\n    UnenrollFromWaitlist(id: $id)\n  }\n`;\nexport type UnenrollFromWaitlistMutationFn = Apollo.MutationFunction<\n  UnenrollFromWaitlistMutation,\n  UnenrollFromWaitlistMutationVariables\n>;\n\n/**\n * __useUnenrollFromWaitlistMutation__\n *\n * To run a mutation, you first call `useUnenrollFromWaitlistMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUnenrollFromWaitlistMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [unenrollFromWaitlistMutation, { data, loading, error }] = useUnenrollFromWaitlistMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useUnenrollFromWaitlistMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    UnenrollFromWaitlistMutation,\n    UnenrollFromWaitlistMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<UnenrollFromWaitlistMutation, UnenrollFromWaitlistMutationVariables>(\n    UnenrollFromWaitlistDocument,\n    options\n  );\n}\nexport type UnenrollFromWaitlistMutationHookResult = ReturnType<\n  typeof useUnenrollFromWaitlistMutation\n>;\nexport type UnenrollFromWaitlistMutationResult =\n  Apollo.MutationResult<UnenrollFromWaitlistMutation>;\nexport type UnenrollFromWaitlistMutationOptions = Apollo.BaseMutationOptions<\n  UnenrollFromWaitlistMutation,\n  UnenrollFromWaitlistMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UpdateBookmarkFolderMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n  name: Types.Scalars['String'];\n}>;\n\nexport type UpdateBookmarkFolderMutation = {\n  __typename?: 'Mutation';\n  UpdateBookmarkFolder: { __typename?: 'BookmarkFolder'; id: string; name: string };\n};\n\nexport const UpdateBookmarkFolderDocument = gql`\n  mutation UpdateBookmarkFolder($id: ID!, $name: String!) {\n    UpdateBookmarkFolder(id: $id, name: $name) {\n      id\n      name\n    }\n  }\n`;\nexport type UpdateBookmarkFolderMutationFn = Apollo.MutationFunction<\n  UpdateBookmarkFolderMutation,\n  UpdateBookmarkFolderMutationVariables\n>;\n\n/**\n * __useUpdateBookmarkFolderMutation__\n *\n * To run a mutation, you first call `useUpdateBookmarkFolderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateBookmarkFolderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateBookmarkFolderMutation, { data, loading, error }] = useUpdateBookmarkFolderMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *   },\n * });\n */\nexport function useUpdateBookmarkFolderMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    UpdateBookmarkFolderMutation,\n    UpdateBookmarkFolderMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<UpdateBookmarkFolderMutation, UpdateBookmarkFolderMutationVariables>(\n    UpdateBookmarkFolderDocument,\n    options\n  );\n}\nexport type UpdateBookmarkFolderMutationHookResult = ReturnType<\n  typeof useUpdateBookmarkFolderMutation\n>;\nexport type UpdateBookmarkFolderMutationResult =\n  Apollo.MutationResult<UpdateBookmarkFolderMutation>;\nexport type UpdateBookmarkFolderMutationOptions = Apollo.BaseMutationOptions<\n  UpdateBookmarkFolderMutation,\n  UpdateBookmarkFolderMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type DestroyBookmarkFolderMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type DestroyBookmarkFolderMutation = {\n  __typename?: 'Mutation';\n  DestroyBookmarkFolder: string;\n};\n\nexport const DestroyBookmarkFolderDocument = gql`\n  mutation DestroyBookmarkFolder($id: ID!) {\n    DestroyBookmarkFolder(id: $id)\n  }\n`;\nexport type DestroyBookmarkFolderMutationFn = Apollo.MutationFunction<\n  DestroyBookmarkFolderMutation,\n  DestroyBookmarkFolderMutationVariables\n>;\n\n/**\n * __useDestroyBookmarkFolderMutation__\n *\n * To run a mutation, you first call `useDestroyBookmarkFolderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDestroyBookmarkFolderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [destroyBookmarkFolderMutation, { data, loading, error }] = useDestroyBookmarkFolderMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDestroyBookmarkFolderMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    DestroyBookmarkFolderMutation,\n    DestroyBookmarkFolderMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<DestroyBookmarkFolderMutation, DestroyBookmarkFolderMutationVariables>(\n    DestroyBookmarkFolderDocument,\n    options\n  );\n}\nexport type DestroyBookmarkFolderMutationHookResult = ReturnType<\n  typeof useDestroyBookmarkFolderMutation\n>;\nexport type DestroyBookmarkFolderMutationResult =\n  Apollo.MutationResult<DestroyBookmarkFolderMutation>;\nexport type DestroyBookmarkFolderMutationOptions = Apollo.BaseMutationOptions<\n  DestroyBookmarkFolderMutation,\n  DestroyBookmarkFolderMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type CreateCertificateFromUploadMutationVariables = Types.Exact<{\n  asset: Types.Scalars['URL'];\n  certificateUploadFields?: Types.InputMaybe<\n    Array<Types.CertificateUploadField> | Types.CertificateUploadField\n  >;\n}>;\n\nexport type CreateCertificateFromUploadMutation = {\n  __typename?: 'Mutation';\n  CreateCertificateFromUpload: {\n    __typename: 'Certificate';\n    id: string;\n    externalResourceTitle?: string;\n  };\n};\n\nexport const CreateCertificateFromUploadDocument = gql`\n  mutation CreateCertificateFromUpload(\n    $asset: URL!\n    $certificateUploadFields: [CertificateUploadField!]\n  ) {\n    CreateCertificateFromUpload(asset: $asset, certificateUploadFields: $certificateUploadFields) {\n      __typename\n      id\n      externalResourceTitle\n    }\n  }\n`;\nexport type CreateCertificateFromUploadMutationFn = Apollo.MutationFunction<\n  CreateCertificateFromUploadMutation,\n  CreateCertificateFromUploadMutationVariables\n>;\n\n/**\n * __useCreateCertificateFromUploadMutation__\n *\n * To run a mutation, you first call `useCreateCertificateFromUploadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateCertificateFromUploadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createCertificateFromUploadMutation, { data, loading, error }] = useCreateCertificateFromUploadMutation({\n *   variables: {\n *      asset: // value for 'asset'\n *      certificateUploadFields: // value for 'certificateUploadFields'\n *   },\n * });\n */\nexport function useCreateCertificateFromUploadMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    CreateCertificateFromUploadMutation,\n    CreateCertificateFromUploadMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<\n    CreateCertificateFromUploadMutation,\n    CreateCertificateFromUploadMutationVariables\n  >(CreateCertificateFromUploadDocument, options);\n}\nexport type CreateCertificateFromUploadMutationHookResult = ReturnType<\n  typeof useCreateCertificateFromUploadMutation\n>;\nexport type CreateCertificateFromUploadMutationResult =\n  Apollo.MutationResult<CreateCertificateFromUploadMutation>;\nexport type CreateCertificateFromUploadMutationOptions = Apollo.BaseMutationOptions<\n  CreateCertificateFromUploadMutation,\n  CreateCertificateFromUploadMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UpdateBookmarkMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n  note?: Types.InputMaybe<Types.Scalars['String']>;\n  bookmarkFolder: Types.Scalars['ID'];\n}>;\n\nexport type UpdateBookmarkMutation = {\n  __typename?: 'Mutation';\n  UpdateBookmark: { __typename?: 'Bookmark'; id: string };\n};\n\nexport const UpdateBookmarkDocument = gql`\n  mutation UpdateBookmark($id: ID!, $note: String, $bookmarkFolder: ID!) {\n    UpdateBookmark(id: $id, note: $note, bookmarkFolder: $bookmarkFolder) {\n      id\n    }\n  }\n`;\nexport type UpdateBookmarkMutationFn = Apollo.MutationFunction<\n  UpdateBookmarkMutation,\n  UpdateBookmarkMutationVariables\n>;\n\n/**\n * __useUpdateBookmarkMutation__\n *\n * To run a mutation, you first call `useUpdateBookmarkMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateBookmarkMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateBookmarkMutation, { data, loading, error }] = useUpdateBookmarkMutation({\n *   variables: {\n *      id: // value for 'id'\n *      note: // value for 'note'\n *      bookmarkFolder: // value for 'bookmarkFolder'\n *   },\n * });\n */\nexport function useUpdateBookmarkMutation(\n  baseOptions?: Apollo.MutationHookOptions<UpdateBookmarkMutation, UpdateBookmarkMutationVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<UpdateBookmarkMutation, UpdateBookmarkMutationVariables>(\n    UpdateBookmarkDocument,\n    options\n  );\n}\nexport type UpdateBookmarkMutationHookResult = ReturnType<typeof useUpdateBookmarkMutation>;\nexport type UpdateBookmarkMutationResult = Apollo.MutationResult<UpdateBookmarkMutation>;\nexport type UpdateBookmarkMutationOptions = Apollo.BaseMutationOptions<\n  UpdateBookmarkMutation,\n  UpdateBookmarkMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type DestroyBookmarkMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type DestroyBookmarkMutation = { __typename?: 'Mutation'; DestroyBookmark?: string };\n\nexport const DestroyBookmarkDocument = gql`\n  mutation DestroyBookmark($id: ID!) {\n    DestroyBookmark(id: $id)\n  }\n`;\nexport type DestroyBookmarkMutationFn = Apollo.MutationFunction<\n  DestroyBookmarkMutation,\n  DestroyBookmarkMutationVariables\n>;\n\n/**\n * __useDestroyBookmarkMutation__\n *\n * To run a mutation, you first call `useDestroyBookmarkMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDestroyBookmarkMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [destroyBookmarkMutation, { data, loading, error }] = useDestroyBookmarkMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDestroyBookmarkMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    DestroyBookmarkMutation,\n    DestroyBookmarkMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<DestroyBookmarkMutation, DestroyBookmarkMutationVariables>(\n    DestroyBookmarkDocument,\n    options\n  );\n}\nexport type DestroyBookmarkMutationHookResult = ReturnType<typeof useDestroyBookmarkMutation>;\nexport type DestroyBookmarkMutationResult = Apollo.MutationResult<DestroyBookmarkMutation>;\nexport type DestroyBookmarkMutationOptions = Apollo.BaseMutationOptions<\n  DestroyBookmarkMutation,\n  DestroyBookmarkMutationVariables\n>;\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",f=\"month\",h=\"quarter\",c=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=function(t){return t instanceof _},S=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},w=function(t,e){if(p(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=v;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),l=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return O.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(h){case c:return r?l(1,0):l(31,11);case f:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=h+\"Date\",n[d]=h+\"Date\",n[f]=h+\"Month\",n[c]=h+\"FullYear\",n[u]=h+\"Hours\",n[s]=h+\"Minutes\",n[i]=h+\"Seconds\",n[r]=h+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,l=this;r=Number(r);var $=O.p(h),y=function(t){var e=w(l);return O.w(e.date(e.date()+Math.round(t*r)),l)};if($===f)return this.set(f,this.$M+r);if($===c)return this.set(c,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},c=function(t){return O.s(s%12||12,t,\"0\")},d=n.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},$={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,\"0\"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,\"0\"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,\"0\"),s:String(this.$s),ss:O.s(this.$s,2,\"0\"),SSS:O.s(this.$ms,3,\"0\"),Z:i};return r.replace(y,(function(t,e){return e||$[t]||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,v=this-M,g=O.m(this,M);return g=($={},$[c]=g/12,$[f]=g,$[h]=g/3,$[o]=(v-m)/6048e5,$[a]=(v-m)/864e5,$[u]=v/n,$[s]=v/e,$[i]=v/t,$)[y]||v,l?g:O.a(g)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),T=_.prototype;return w.prototype=T,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",f],[\"$y\",c],[\"$D\",d]].forEach((function(t){T[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=D[g],w.Ls=D,w.p={},w}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_advancedFormat=t()}(this,(function(){\"use strict\";return function(e,t){var r=t.prototype,n=r.format;r.format=function(e){var t=this,r=this.$locale();if(!this.isValid())return n.bind(this)(e);var s=this.$utils(),a=(e||\"YYYY-MM-DDTHH:mm:ssZ\").replace(/\\[([^\\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g,(function(e){switch(e){case\"Q\":return Math.ceil((t.$M+1)/3);case\"Do\":return r.ordinal(t.$D);case\"gggg\":return t.weekYear();case\"GGGG\":return t.isoWeekYear();case\"wo\":return r.ordinal(t.week(),\"W\");case\"w\":case\"ww\":return s.s(t.week(),\"w\"===e?1:2,\"0\");case\"W\":case\"WW\":return s.s(t.isoWeek(),\"W\"===e?1:2,\"0\");case\"k\":case\"kk\":return s.s(String(0===t.$H?24:t.$H),\"k\"===e?1:2,\"0\");case\"X\":return Math.floor(t.$d.getTime()/1e3);case\"x\":return t.$d.getTime();case\"z\":return\"[\"+t.offsetName()+\"]\";case\"zzz\":return\"[\"+t.offsetName(\"long\")+\"]\";default:return e}}));return n.bind(this)(a)}}}));","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_utc=i()}(this,(function(){\"use strict\";var t=\"minute\",i=/[+-]\\d\\d(?::?\\d\\d)?/g,e=/([+-]|\\d\\d)/g;return function(s,f,n){var u=f.prototype;n.utc=function(t){var i={date:t,utc:!0,args:arguments};return new f(i)},u.utc=function(i){var e=n(this.toDate(),{locale:this.$L,utc:!0});return i?e.add(this.utcOffset(),t):e},u.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var o=u.parse;u.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),o.call(this,t)};var r=u.init;u.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else r.call(this)};var a=u.utcOffset;u.utcOffset=function(s,f){var n=this.$utils().u;if(n(s))return this.$u?0:n(this.$offset)?a.call(this):this.$offset;if(\"string\"==typeof s&&(s=function(t){void 0===t&&(t=\"\");var s=t.match(i);if(!s)return null;var f=(\"\"+s[0]).match(e)||[\"-\",0,0],n=f[0],u=60*+f[1]+ +f[2];return 0===u?0:\"+\"===n?u:-u}(s),null===s))return this;var u=Math.abs(s)<=16?60*s:s,o=this;if(f)return o.$offset=u,o.$u=0===s,o;if(0!==s){var r=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(o=this.local().add(u+r,t)).$offset=u,o.$x.$localOffset=r}else o=this.utc();return o};var h=u.format;u.format=function(t){var i=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return h.call(this,i)},u.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*t},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var l=u.toDate;u.toDate=function(t){return\"s\"===t&&this.$offset?n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate():l.call(this)};var c=u.diff;u.diff=function(t,i,e){if(t&&this.$u===t.$u)return c.call(this,t,i,e);var s=this.local(),f=n(t).local();return c.call(s,f,i,e)}}}));","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_timezone=e()}(this,(function(){\"use strict\";var t={year:0,month:1,day:2,hour:3,minute:4,second:5},e={};return function(n,i,o){var r,a=function(t,n,i){void 0===i&&(i={});var o=new Date(t),r=function(t,n){void 0===n&&(n={});var i=n.timeZoneName||\"short\",o=t+\"|\"+i,r=e[o];return r||(r=new Intl.DateTimeFormat(\"en-US\",{hour12:!1,timeZone:t,year:\"numeric\",month:\"2-digit\",day:\"2-digit\",hour:\"2-digit\",minute:\"2-digit\",second:\"2-digit\",timeZoneName:i}),e[o]=r),r}(n,i);return r.formatToParts(o)},u=function(e,n){for(var i=a(e,n),r=[],u=0;u<i.length;u+=1){var f=i[u],s=f.type,m=f.value,c=t[s];c>=0&&(r[c]=parseInt(m,10))}var d=r[3],l=24===d?0:d,v=r[0]+\"-\"+r[1]+\"-\"+r[2]+\" \"+l+\":\"+r[4]+\":\"+r[5]+\":000\",h=+e;return(o.utc(v).valueOf()-(h-=h%1e3))/6e4},f=i.prototype;f.tz=function(t,e){void 0===t&&(t=r);var n=this.utcOffset(),i=this.toDate(),a=i.toLocaleString(\"en-US\",{timeZone:t}),u=Math.round((i-new Date(a))/1e3/60),f=o(a).$set(\"millisecond\",this.$ms).utcOffset(15*-Math.round(i.getTimezoneOffset()/15)-u,!0);if(e){var s=f.utcOffset();f=f.add(n-s,\"minute\")}return f.$x.$timezone=t,f},f.offsetName=function(t){var e=this.$x.$timezone||o.tz.guess(),n=a(this.valueOf(),e,{timeZoneName:t}).find((function(t){return\"timezonename\"===t.type.toLowerCase()}));return n&&n.value};var s=f.startOf;f.startOf=function(t,e){if(!this.$x||!this.$x.$timezone)return s.call(this,t,e);var n=o(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\"));return s.call(n,t,e).tz(this.$x.$timezone,!0)},o.tz=function(t,e,n){var i=n&&e,a=n||e||r,f=u(+o(),a);if(\"string\"!=typeof t)return o(t).tz(a);var s=function(t,e,n){var i=t-60*e*1e3,o=u(i,n);if(e===o)return[i,e];var r=u(i-=60*(o-e)*1e3,n);return o===r?[i,o]:[t-60*Math.min(o,r)*1e3,Math.max(o,r)]}(o.utc(t,i).valueOf(),f,a),m=s[0],c=s[1],d=o(m).utcOffset(c);return d.$x.$timezone=a,d},o.tz.guess=function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},o.tz.setDefault=function(t){r=t}}}));","export const DEFAULT_TIMEZONE = 'America/New_York';\n","import dayjs from 'dayjs';\nimport advancedFormat from 'dayjs/plugin/advancedFormat';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\nimport { DEFAULT_TIMEZONE } from './constants';\n\ndayjs.extend(advancedFormat);\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\n/**\n *\n * @param date - string in ISO 8601 format\n * @param timeZone - optional time zone (fallback to default time zone if not set)\n * @param format - date display format\n * @returns formatted string\n */\nconst formatTime = (date: string, timeZone: string | undefined, format: string): string => {\n  const timeZoneOrDefault = timeZone ?? DEFAULT_TIMEZONE;\n  return dayjs(date).tz(timeZoneOrDefault).format(format);\n};\n\nexport default formatTime;\n","import { ContentKind } from '../../graphql/global-types';\nimport dayjs from 'dayjs';\nimport { formatTime } from '../format-time';\n\nexport const VILT_KINDS = [ContentKind.Webinar, ContentKind.WebinarCourse];\nexport const ILT_KINDS = [ContentKind.InPersonEvent, ContentKind.InPersonEventCourse];\n\nexport default function courseRunsPhrase(\n  kind: ContentKind | undefined,\n  startDate: string,\n  endDate: string | undefined,\n  timeZone: string | undefined\n): string {\n  if (kind && (ILT_KINDS.includes(kind) || VILT_KINDS.includes(kind))) {\n    if (endDate) {\n      const isSameDay = dayjs(startDate).isSame(dayjs(endDate), 'day');\n      if (isSameDay) {\n        return `${formatTime(startDate, timeZone, 'ddd, MMM Do YYYY hh:mm a')} – ${formatTime(\n          endDate,\n          timeZone,\n          'hh:mm a z'\n        )}`;\n      }\n\n      return `${formatTime(startDate, timeZone, 'ddd, MMM Do YYYY hh:mm a')} – ${formatTime(\n        endDate,\n        timeZone,\n        'ddd, MMM Do YYYY hh:mm a z'\n      )}`;\n    }\n\n    return `${formatTime(startDate, timeZone, 'ddd, MMM Do YYYY hh:mm a z')}`;\n  }\n\n  if (endDate) {\n    return `${formatTime(startDate, timeZone, 'MMM Do YYYY')} – ${formatTime(\n      endDate,\n      timeZone,\n      'MMM Do YYYY'\n    )}`;\n  }\n\n  return formatTime(startDate, timeZone, 'MMM Do YYYY');\n}\n"],"names":["isObjectLike","value","invariant","condition","message","LineRegExp","getLocation","source","position","lastLineStart","line","match","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","body","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","lines","locationLine","subLineIndex","subLineColumnNum","subLines","i","printPrefixedLines","subLine","existingLines","_","padLen","prefix","toNormalizedOptions","args","firstArg","GraphQLError","rawArgs","_this$nodes","_nodeLocations$","_ref","nodes","positions","path","originalError","extensions","undefinedIfEmpty","nodeLocations","node","loc","pos","originalExtensions","output","formattedError","array","syntaxError","description","DirectiveLocation","TokenKind","Lexer","startOfFileToken","Token","token","nextToken","readNextToken","isPunctuatorTokenKind","kind","isUnicodeScalarValue","code","isSupplementaryCodePoint","isLeadingSurrogate","isTrailingSurrogate","printCodePointAt","lexer","char","createToken","start","end","col","bodyLength","readComment","readBlockString","readString","isDigit","readNumber","isNameStart","readName","firstCode","isFloat","readDigits","chunkStart","escape","readEscapedUnicodeVariableWidth","readEscapedUnicodeFixedWidth","readEscapedCharacter","point","size","readHexDigit","read16BitHexCode","trailingCode","lineStart","currentLine","blockLines","dedentBlockStringLines","isNameContinue","parse","options","Parser","sourceObj","isSource","Source","Kind","hasDescription","keywordToken","OperationTypeNode","operation","name","operationToken","nameOrAlias","alias","isConst","item","hasTypeCondition","varName","directives","type","innerType","operationTypes","interfaces","fields","defaultValue","types","values","getTokenDesc","repeatable","locations","startToken","Location","getTokenKindDesc","atToken","openKind","parseFn","closeKind","delimiterKind","maxTokens","docCache","fragmentSourceMap","printFragmentWarnings","experimentalFragmentVariables","normalize","string","cacheKeyFromLoc","processFragments","ast","seenKeys","definitions","fragmentDefinition","fragmentName","sourceKey","sourceKeySet","__assign","stripLoc","doc","workSet","key","parseDocument","cacheKey","parsed","gql","literals","_i","result","arg","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","extras","gql_1","useApolloClient","override","context","useContext","getApolloContext","client","didWarnUncachedGetSnapshot","uSESKey","realHook","React","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","_a","React.useState","inst","forceUpdate","canUseLayoutEffect","React.useLayoutEffect","checkIfSnapshotChanged","React.useEffect","DocumentType","cache","operationName","parser","document","cached","variables","fragments","queries","mutations","subscriptions","x","definition","payload","verifyDocumentType","requiredOperationName","usedOperationName","hasOwnProperty","useQuery","query","useInternalState","stateRef","useRef","InternalState","state","useState","setTick","tick","previous","maybeDeepFreeze","NetworkStatus","canUseWeakMap","previousResult","previousData","_this","concast","resolve","obsQuery","useCallback","onNext","equal","onError","error","last","subscription","watchQueryOptions","currentWatchQueryOptions","toMerge","globalDefaults","compact","mergeOptions","_b","skip","otherOptions","__rest","_c","fetchPolicy","_d","initialFetchPolicy","data","useMemo","ssrAllowed","nextResult","error_1","isNonEmptyArray","ApolloError","queryResult","resultWithoutPartial","EAGER_METHODS","useLazyQuery","execOptionsRef","optionsRef","queryRef","merged","internalState","useQueryResult","eagerMethods","_loop_1","method","EAGER_METHODS_1","execute","executeOptions","promise","useMutation","mutation","setResult","ref","baseOptions","mutationId","clientOptions","response","errors","result_1","onCompleted","result_2","reset","useEffect","LoadingDots","jsxs","jsx","AlternativePricingType","ContentItemDisplayType","ContentKind","SortColumn","SortDirection","ContentFragmentFragmentDoc","LocationFragmentFragmentDoc","CatalogMetaFragmentFragmentDoc","defaultOptions","CatalogContentDocument","useCatalogContentQuery","Apollo.useQuery","useCatalogContentLazyQuery","Apollo.useLazyQuery","CatalogDocument","useCatalogQuery","useCatalogLazyQuery","LanguagesQueryDocument","useLanguagesQueryQuery","useLanguagesQueryLazyQuery","ContentsDocument","useContentsQuery","useContentsLazyQuery","RssItemsDocument","useRssItemsQuery","useRssItemsLazyQuery","UserRecentContentDocument","useUserRecentContentQuery","useUserRecentContentLazyQuery","UserContentItemsDocument","useUserContentItemsQuery","useUserContentItemsLazyQuery","UserArchivesDocument","useUserArchivesQuery","useUserArchivesLazyQuery","UserWaitlistDocument","useUserWaitlistQuery","useUserWaitlistLazyQuery","UserBookmarksDocument","useUserBookmarksQuery","useUserBookmarksLazyQuery","UserCertificatesDocument","useUserCertificatesQuery","useUserCertificatesLazyQuery","ContentGroupsDocument","useContentGroupsQuery","useContentGroupsLazyQuery","UserBookmarksByFolderDocument","useUserBookmarksByFolderQuery","useUserBookmarksByFolderLazyQuery","UserCourseCompletionProgressDocument","useUserCourseCompletionProgressQuery","useUserCourseCompletionProgressLazyQuery","UserCourseProgressDocument","useUserCourseProgressQuery","useUserCourseProgressLazyQuery","UserCourseAwardCountsDocument","useUserCourseAwardCountsQuery","useUserCourseAwardCountsLazyQuery","UserCourseCollaborationsDocument","useUserCourseCollaborationsQuery","useUserCourseCollaborationsLazyQuery","UserCertificateFieldsDocument","useUserCertificateFieldsQuery","useUserCertificateFieldsLazyQuery","AddResourceToQueueDocument","useAddResourceToQueueMutation","Apollo.useMutation","ArchiveUserCourseDocument","useArchiveUserCourseMutation","ArchiveUserLearningPathDocument","useArchiveUserLearningPathMutation","ReinstateUserLearningPathDocument","useReinstateUserLearningPathMutation","ReinstateUserCourseDocument","useReinstateUserCourseMutation","UnenrollFromWaitlistDocument","useUnenrollFromWaitlistMutation","UpdateBookmarkFolderDocument","useUpdateBookmarkFolderMutation","DestroyBookmarkFolderDocument","useDestroyBookmarkFolderMutation","CreateCertificateFromUploadDocument","useCreateCertificateFromUploadMutation","UpdateBookmarkDocument","useUpdateBookmarkMutation","DestroyBookmarkDocument","useDestroyBookmarkMutation","t","e","module","this","r","s","a","o","f","h","c","d","$","y","M","n","m","v","u","g","D","p","S","w","O","l","T","DEFAULT_TIMEZONE","dayjs","advancedFormat","utc","timezone","formatTime","date","timeZone","format","timeZoneOrDefault","VILT_KINDS","ILT_KINDS","courseRunsPhrase","startDate","endDate"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,51,52,53,54]}