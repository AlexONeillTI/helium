{"version":3,"file":"course-run-ffe2e63c.js","sources":["../../node_modules/graphql-tag/lib/index.js","../../node_modules/@apollo/client/react/hooks/useApolloClient.js","../../node_modules/@apollo/client/react/hooks/useSyncExternalStore.js","../../node_modules/@apollo/client/react/parser/index.js","../../node_modules/@apollo/client/react/hooks/useQuery.js","../../node_modules/@apollo/client/react/hooks/useLazyQuery.js","../../node_modules/@apollo/client/react/hooks/useMutation.js","../../packages/content/src/components/loading-dots/loading-dots.tsx","../../packages/content/src/graphql/global-types.ts","../../packages/content/src/graphql/queries/ContentFragment.generated.tsx","../../packages/content/src/graphql/queries/LocationFragment.generated.tsx","../../packages/content/src/graphql/queries/CatalogMetaFragment.generated.tsx","../../packages/content/src/graphql/queries/CatalogContent.generated.tsx","../../packages/content/src/graphql/queries/CatalogQuery.generated.tsx","../../packages/content/src/graphql/queries/Languages.generated.tsx","../../packages/content/src/graphql/queries/QueryContents.generated.tsx","../../packages/content/src/graphql/queries/RssItems.generated.tsx","../../packages/content/src/graphql/queries/UserRecentContent.generated.tsx","../../packages/content/src/graphql/queries/UserContentItems.generated.tsx","../../packages/content/src/graphql/queries/UserArchives.generated.tsx","../../packages/content/src/graphql/queries/UserWaitlist.generated.tsx","../../packages/content/src/graphql/queries/UserBookmarks.generated.tsx","../../packages/content/src/graphql/queries/UserCertificates.generated.tsx","../../packages/content/src/graphql/queries/UserContentGroups.generated.tsx","../../packages/content/src/graphql/queries/UserBookmarksByFolder.generated.tsx","../../packages/content/src/graphql/queries/UserCourseCompletionProgress.generated.tsx","../../packages/content/src/graphql/queries/UserCourseProgress.generated.tsx","../../packages/content/src/graphql/queries/UserCourseAwardCounts.generated.tsx","../../packages/content/src/graphql/queries/UserCourseCollaborations.generated.tsx","../../packages/content/src/graphql/queries/UserCertificateFields.generated.tsx","../../packages/content/src/graphql/mutations/AddResourceToQueue.generated.tsx","../../packages/content/src/graphql/mutations/ArchiveUserCourse.generated.tsx","../../packages/content/src/graphql/mutations/ArchiveUserLearningPath.generated.tsx","../../packages/content/src/graphql/mutations/ReinstateUserLearningPath.generated.tsx","../../packages/content/src/graphql/mutations/ReinstateUserCourse.generated.tsx","../../packages/content/src/graphql/mutations/UnenrollFromWaitlist.generated.tsx","../../packages/content/src/graphql/mutations/UpdateBookmarkFolder.generated.tsx","../../packages/content/src/graphql/mutations/DestroyBookmarkFolder.generated.tsx","../../packages/content/src/graphql/mutations/CreateCertificateFromUpload.generated.tsx","../../packages/content/src/graphql/mutations/UpdateBookmark.generated.tsx","../../packages/content/src/graphql/mutations/DestroyBookmark.generated.tsx","../../node_modules/dayjs/dayjs.min.js","../../node_modules/dayjs/plugin/advancedFormat.js","../../node_modules/dayjs/plugin/utc.js","../../node_modules/dayjs/plugin/timezone.js","../../packages/content/src/utilities/format-time/constants.ts","../../packages/content/src/utilities/format-time/format-time.ts","../../packages/content/src/utilities/hydrate-content/course-run.ts"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { parse } from 'graphql';\nvar docCache = new Map();\nvar fragmentSourceMap = new Map();\nvar printFragmentWarnings = true;\nvar experimentalFragmentVariables = false;\nfunction normalize(string) {\n    return string.replace(/[\\s,]+/g, ' ').trim();\n}\nfunction cacheKeyFromLoc(loc) {\n    return normalize(loc.source.body.substring(loc.start, loc.end));\n}\nfunction processFragments(ast) {\n    var seenKeys = new Set();\n    var definitions = [];\n    ast.definitions.forEach(function (fragmentDefinition) {\n        if (fragmentDefinition.kind === 'FragmentDefinition') {\n            var fragmentName = fragmentDefinition.name.value;\n            var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n            var sourceKeySet = fragmentSourceMap.get(fragmentName);\n            if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n                if (printFragmentWarnings) {\n                    console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n                        + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n                        + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n                }\n            }\n            else if (!sourceKeySet) {\n                fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n            }\n            sourceKeySet.add(sourceKey);\n            if (!seenKeys.has(sourceKey)) {\n                seenKeys.add(sourceKey);\n                definitions.push(fragmentDefinition);\n            }\n        }\n        else {\n            definitions.push(fragmentDefinition);\n        }\n    });\n    return __assign(__assign({}, ast), { definitions: definitions });\n}\nfunction stripLoc(doc) {\n    var workSet = new Set(doc.definitions);\n    workSet.forEach(function (node) {\n        if (node.loc)\n            delete node.loc;\n        Object.keys(node).forEach(function (key) {\n            var value = node[key];\n            if (value && typeof value === 'object') {\n                workSet.add(value);\n            }\n        });\n    });\n    var loc = doc.loc;\n    if (loc) {\n        delete loc.startToken;\n        delete loc.endToken;\n    }\n    return doc;\n}\nfunction parseDocument(source) {\n    var cacheKey = normalize(source);\n    if (!docCache.has(cacheKey)) {\n        var parsed = parse(source, {\n            experimentalFragmentVariables: experimentalFragmentVariables,\n            allowLegacyFragmentVariables: experimentalFragmentVariables\n        });\n        if (!parsed || parsed.kind !== 'Document') {\n            throw new Error('Not a valid GraphQL document.');\n        }\n        docCache.set(cacheKey, stripLoc(processFragments(parsed)));\n    }\n    return docCache.get(cacheKey);\n}\nexport function gql(literals) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (typeof literals === 'string') {\n        literals = [literals];\n    }\n    var result = literals[0];\n    args.forEach(function (arg, i) {\n        if (arg && arg.kind === 'Document') {\n            result += arg.loc.source.body;\n        }\n        else {\n            result += arg;\n        }\n        result += literals[i + 1];\n    });\n    return parseDocument(result);\n}\nexport function resetCaches() {\n    docCache.clear();\n    fragmentSourceMap.clear();\n}\nexport function disableFragmentWarnings() {\n    printFragmentWarnings = false;\n}\nexport function enableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = true;\n}\nexport function disableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = false;\n}\nvar extras = {\n    gql: gql,\n    resetCaches: resetCaches,\n    disableFragmentWarnings: disableFragmentWarnings,\n    enableExperimentalFragmentVariables: enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables: disableExperimentalFragmentVariables\n};\n(function (gql_1) {\n    gql_1.gql = extras.gql, gql_1.resetCaches = extras.resetCaches, gql_1.disableFragmentWarnings = extras.disableFragmentWarnings, gql_1.enableExperimentalFragmentVariables = extras.enableExperimentalFragmentVariables, gql_1.disableExperimentalFragmentVariables = extras.disableExperimentalFragmentVariables;\n})(gql || (gql = {}));\ngql[\"default\"] = gql;\nexport default gql;\n//# sourceMappingURL=index.js.map","import { invariant } from \"../../utilities/globals/index.js\";\nimport { useContext } from 'react';\nimport { getApolloContext } from \"../context/index.js\";\nexport function useApolloClient(override) {\n    var context = useContext(getApolloContext());\n    var client = override || context.client;\n    __DEV__ ? invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' +\n        'Wrap the root component in an <ApolloProvider>, or pass an ApolloClient ' +\n        'instance in via options.') : invariant(!!client, 31);\n    return client;\n}\n//# sourceMappingURL=useApolloClient.js.map","import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from 'react';\nimport { canUseLayoutEffect } from \"../../utilities/index.js\";\nvar didWarnUncachedGetSnapshot = false;\nvar uSESKey = \"useSyncExternalStore\";\nvar realHook = React[uSESKey];\nexport var useSyncExternalStore = realHook || (function (subscribe, getSnapshot, getServerSnapshot) {\n    var value = getSnapshot();\n    if (__DEV__ &&\n        !didWarnUncachedGetSnapshot &&\n        value !== getSnapshot()) {\n        didWarnUncachedGetSnapshot = true;\n        __DEV__ && invariant.error('The result of getSnapshot should be cached to avoid an infinite loop');\n    }\n    var _a = React.useState({ inst: { value: value, getSnapshot: getSnapshot } }), inst = _a[0].inst, forceUpdate = _a[1];\n    if (canUseLayoutEffect) {\n        React.useLayoutEffect(function () {\n            Object.assign(inst, { value: value, getSnapshot: getSnapshot });\n            if (checkIfSnapshotChanged(inst)) {\n                forceUpdate({ inst: inst });\n            }\n        }, [subscribe, value, getSnapshot]);\n    }\n    else {\n        Object.assign(inst, { value: value, getSnapshot: getSnapshot });\n    }\n    React.useEffect(function () {\n        if (checkIfSnapshotChanged(inst)) {\n            forceUpdate({ inst: inst });\n        }\n        return subscribe(function handleStoreChange() {\n            if (checkIfSnapshotChanged(inst)) {\n                forceUpdate({ inst: inst });\n            }\n        });\n    }, [subscribe]);\n    return value;\n});\nfunction checkIfSnapshotChanged(_a) {\n    var value = _a.value, getSnapshot = _a.getSnapshot;\n    try {\n        return value !== getSnapshot();\n    }\n    catch (_b) {\n        return true;\n    }\n}\n//# sourceMappingURL=useSyncExternalStore.js.map","import { invariant } from \"../../utilities/globals/index.js\";\nexport var DocumentType;\n(function (DocumentType) {\n    DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n    DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n    DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\nvar cache = new Map();\nexport function operationName(type) {\n    var name;\n    switch (type) {\n        case DocumentType.Query:\n            name = 'Query';\n            break;\n        case DocumentType.Mutation:\n            name = 'Mutation';\n            break;\n        case DocumentType.Subscription:\n            name = 'Subscription';\n            break;\n    }\n    return name;\n}\nexport function parser(document) {\n    var cached = cache.get(document);\n    if (cached)\n        return cached;\n    var variables, type, name;\n    __DEV__ ? invariant(!!document && !!document.kind, \"Argument of \".concat(document, \" passed to parser was not a valid GraphQL \") +\n        \"DocumentNode. You may need to use 'graphql-tag' or another method \" +\n        \"to convert your operation into a document\") : invariant(!!document && !!document.kind, 32);\n    var fragments = [];\n    var queries = [];\n    var mutations = [];\n    var subscriptions = [];\n    for (var _i = 0, _a = document.definitions; _i < _a.length; _i++) {\n        var x = _a[_i];\n        if (x.kind === 'FragmentDefinition') {\n            fragments.push(x);\n            continue;\n        }\n        if (x.kind === 'OperationDefinition') {\n            switch (x.operation) {\n                case 'query':\n                    queries.push(x);\n                    break;\n                case 'mutation':\n                    mutations.push(x);\n                    break;\n                case 'subscription':\n                    subscriptions.push(x);\n                    break;\n            }\n        }\n    }\n    __DEV__ ? invariant(!fragments.length ||\n        (queries.length || mutations.length || subscriptions.length), \"Passing only a fragment to 'graphql' is not yet supported. \" +\n        \"You must include a query, subscription or mutation as well\") : invariant(!fragments.length ||\n        (queries.length || mutations.length || subscriptions.length), 33);\n    __DEV__ ? invariant(queries.length + mutations.length + subscriptions.length <= 1, \"react-apollo only supports a query, subscription, or a mutation per HOC. \" +\n        \"\".concat(document, \" had \").concat(queries.length, \" queries, \").concat(subscriptions.length, \" \") +\n        \"subscriptions and \".concat(mutations.length, \" mutations. \") +\n        \"You can use 'compose' to join multiple operation types to a component\") : invariant(queries.length + mutations.length + subscriptions.length <= 1, 34);\n    type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n    if (!queries.length && !mutations.length)\n        type = DocumentType.Subscription;\n    var definitions = queries.length\n        ? queries\n        : mutations.length\n            ? mutations\n            : subscriptions;\n    __DEV__ ? invariant(definitions.length === 1, \"react-apollo only supports one definition per HOC. \".concat(document, \" had \") +\n        \"\".concat(definitions.length, \" definitions. \") +\n        \"You can use 'compose' to join multiple operation types to a component\") : invariant(definitions.length === 1, 35);\n    var definition = definitions[0];\n    variables = definition.variableDefinitions || [];\n    if (definition.name && definition.name.kind === 'Name') {\n        name = definition.name.value;\n    }\n    else {\n        name = 'data';\n    }\n    var payload = { name: name, type: type, variables: variables };\n    cache.set(document, payload);\n    return payload;\n}\nexport function verifyDocumentType(document, type) {\n    var operation = parser(document);\n    var requiredOperationName = operationName(type);\n    var usedOperationName = operationName(operation.type);\n    __DEV__ ? invariant(operation.type === type, \"Running a \".concat(requiredOperationName, \" requires a graphql \") +\n        \"\".concat(requiredOperationName, \", but a \").concat(usedOperationName, \" was used instead.\")) : invariant(operation.type === type, 36);\n}\n//# sourceMappingURL=index.js.map","import { __assign, __rest } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport { useCallback, useContext, useMemo, useRef, useState, } from 'react';\nimport { useSyncExternalStore } from \"./useSyncExternalStore.js\";\nimport { equal } from '@wry/equality';\nimport { mergeOptions } from \"../../core/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { NetworkStatus, } from \"../../core/index.js\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport { canUseWeakMap, canUseWeakSet, compact, isNonEmptyArray, maybeDeepFreeze } from \"../../utilities/index.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function useQuery(query, options) {\n    if (options === void 0) { options = Object.create(null); }\n    return useInternalState(useApolloClient(options.client), query).useQuery(options);\n}\nexport function useInternalState(client, query) {\n    var stateRef = useRef();\n    if (!stateRef.current ||\n        client !== stateRef.current.client ||\n        query !== stateRef.current.query) {\n        stateRef.current = new InternalState(client, query, stateRef.current);\n    }\n    var state = stateRef.current;\n    var _a = useState(0), _tick = _a[0], setTick = _a[1];\n    state.forceUpdate = function () {\n        setTick(function (tick) { return tick + 1; });\n    };\n    return state;\n}\nvar InternalState = (function () {\n    function InternalState(client, query, previous) {\n        this.client = client;\n        this.query = query;\n        this.asyncResolveFns = new Set();\n        this.optionsToIgnoreOnce = new (canUseWeakSet ? WeakSet : Set)();\n        this.ssrDisabledResult = maybeDeepFreeze({\n            loading: true,\n            data: void 0,\n            error: void 0,\n            networkStatus: NetworkStatus.loading,\n        });\n        this.skipStandbyResult = maybeDeepFreeze({\n            loading: false,\n            data: void 0,\n            error: void 0,\n            networkStatus: NetworkStatus.ready,\n        });\n        this.toQueryResultCache = new (canUseWeakMap ? WeakMap : Map)();\n        verifyDocumentType(query, DocumentType.Query);\n        var previousResult = previous && previous.result;\n        var previousData = previousResult && previousResult.data;\n        if (previousData) {\n            this.previousData = previousData;\n        }\n    }\n    InternalState.prototype.forceUpdate = function () {\n        __DEV__ && invariant.warn(\"Calling default no-op implementation of InternalState#forceUpdate\");\n    };\n    InternalState.prototype.asyncUpdate = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.asyncResolveFns.add(resolve);\n            _this.optionsToIgnoreOnce.add(_this.watchQueryOptions);\n            _this.forceUpdate();\n        });\n    };\n    InternalState.prototype.useQuery = function (options) {\n        var _this = this;\n        this.renderPromises = useContext(getApolloContext()).renderPromises;\n        this.useOptions(options);\n        var obsQuery = this.useObservableQuery();\n        var result = useSyncExternalStore(useCallback(function () {\n            if (_this.renderPromises) {\n                return function () { };\n            }\n            var onNext = function () {\n                var previousResult = _this.result;\n                var result = obsQuery.getCurrentResult();\n                if (previousResult &&\n                    previousResult.loading === result.loading &&\n                    previousResult.networkStatus === result.networkStatus &&\n                    equal(previousResult.data, result.data)) {\n                    return;\n                }\n                _this.setResult(result);\n            };\n            var onError = function (error) {\n                var last = obsQuery[\"last\"];\n                subscription.unsubscribe();\n                try {\n                    obsQuery.resetLastResults();\n                    subscription = obsQuery.subscribe(onNext, onError);\n                }\n                finally {\n                    obsQuery[\"last\"] = last;\n                }\n                if (!hasOwnProperty.call(error, 'graphQLErrors')) {\n                    throw error;\n                }\n                var previousResult = _this.result;\n                if (!previousResult ||\n                    (previousResult && previousResult.loading) ||\n                    !equal(error, previousResult.error)) {\n                    _this.setResult({\n                        data: (previousResult && previousResult.data),\n                        error: error,\n                        loading: false,\n                        networkStatus: NetworkStatus.error,\n                    });\n                }\n            };\n            var subscription = obsQuery.subscribe(onNext, onError);\n            return function () { return subscription.unsubscribe(); };\n        }, [\n            obsQuery,\n            this.renderPromises,\n            this.client.disableNetworkFetches,\n        ]), function () { return _this.getCurrentResult(); }, function () { return _this.getCurrentResult(); });\n        this.unsafeHandlePartialRefetch(result);\n        var queryResult = this.toQueryResult(result);\n        if (!queryResult.loading && this.asyncResolveFns.size) {\n            this.asyncResolveFns.forEach(function (resolve) { return resolve(queryResult); });\n            this.asyncResolveFns.clear();\n        }\n        return queryResult;\n    };\n    InternalState.prototype.useOptions = function (options) {\n        var _a;\n        var watchQueryOptions = this.createWatchQueryOptions(this.queryHookOptions = options);\n        var currentWatchQueryOptions = this.watchQueryOptions;\n        if (this.optionsToIgnoreOnce.has(currentWatchQueryOptions) ||\n            !equal(watchQueryOptions, currentWatchQueryOptions)) {\n            this.watchQueryOptions = watchQueryOptions;\n            if (currentWatchQueryOptions && this.observable) {\n                this.optionsToIgnoreOnce.delete(currentWatchQueryOptions);\n                this.observable.reobserve(this.getObsQueryOptions());\n                this.previousData = ((_a = this.result) === null || _a === void 0 ? void 0 : _a.data) || this.previousData;\n                this.result = void 0;\n            }\n        }\n        this.onCompleted = options.onCompleted || InternalState.prototype.onCompleted;\n        this.onError = options.onError || InternalState.prototype.onError;\n        if ((this.renderPromises || this.client.disableNetworkFetches) &&\n            this.queryHookOptions.ssr === false &&\n            !this.queryHookOptions.skip) {\n            this.result = this.ssrDisabledResult;\n        }\n        else if (this.queryHookOptions.skip ||\n            this.watchQueryOptions.fetchPolicy === 'standby') {\n            this.result = this.skipStandbyResult;\n        }\n        else if (this.result === this.ssrDisabledResult ||\n            this.result === this.skipStandbyResult) {\n            this.result = void 0;\n        }\n    };\n    InternalState.prototype.getObsQueryOptions = function () {\n        var toMerge = [];\n        var globalDefaults = this.client.defaultOptions.watchQuery;\n        if (globalDefaults)\n            toMerge.push(globalDefaults);\n        if (this.queryHookOptions.defaultOptions) {\n            toMerge.push(this.queryHookOptions.defaultOptions);\n        }\n        toMerge.push(compact(this.observable && this.observable.options, this.watchQueryOptions));\n        return toMerge.reduce(mergeOptions);\n    };\n    InternalState.prototype.createWatchQueryOptions = function (_a) {\n        var _b;\n        if (_a === void 0) { _a = {}; }\n        var skip = _a.skip, ssr = _a.ssr, onCompleted = _a.onCompleted, onError = _a.onError, defaultOptions = _a.defaultOptions, otherOptions = __rest(_a, [\"skip\", \"ssr\", \"onCompleted\", \"onError\", \"defaultOptions\"]);\n        var watchQueryOptions = Object.assign(otherOptions, { query: this.query });\n        if (this.renderPromises &&\n            (watchQueryOptions.fetchPolicy === 'network-only' ||\n                watchQueryOptions.fetchPolicy === 'cache-and-network')) {\n            watchQueryOptions.fetchPolicy = 'cache-first';\n        }\n        if (!watchQueryOptions.variables) {\n            watchQueryOptions.variables = {};\n        }\n        if (skip) {\n            var _c = watchQueryOptions.fetchPolicy, fetchPolicy = _c === void 0 ? this.getDefaultFetchPolicy() : _c, _d = watchQueryOptions.initialFetchPolicy, initialFetchPolicy = _d === void 0 ? fetchPolicy : _d;\n            Object.assign(watchQueryOptions, {\n                initialFetchPolicy: initialFetchPolicy,\n                fetchPolicy: 'standby',\n            });\n        }\n        else if (!watchQueryOptions.fetchPolicy) {\n            watchQueryOptions.fetchPolicy =\n                ((_b = this.observable) === null || _b === void 0 ? void 0 : _b.options.initialFetchPolicy) ||\n                    this.getDefaultFetchPolicy();\n        }\n        return watchQueryOptions;\n    };\n    InternalState.prototype.getDefaultFetchPolicy = function () {\n        var _a, _b;\n        return (((_a = this.queryHookOptions.defaultOptions) === null || _a === void 0 ? void 0 : _a.fetchPolicy) ||\n            ((_b = this.client.defaultOptions.watchQuery) === null || _b === void 0 ? void 0 : _b.fetchPolicy) ||\n            \"cache-first\");\n    };\n    InternalState.prototype.onCompleted = function (data) { };\n    InternalState.prototype.onError = function (error) { };\n    InternalState.prototype.useObservableQuery = function () {\n        var obsQuery = this.observable =\n            this.renderPromises\n                && this.renderPromises.getSSRObservable(this.watchQueryOptions)\n                || this.observable\n                || this.client.watchQuery(this.getObsQueryOptions());\n        this.obsQueryFields = useMemo(function () { return ({\n            refetch: obsQuery.refetch.bind(obsQuery),\n            reobserve: obsQuery.reobserve.bind(obsQuery),\n            fetchMore: obsQuery.fetchMore.bind(obsQuery),\n            updateQuery: obsQuery.updateQuery.bind(obsQuery),\n            startPolling: obsQuery.startPolling.bind(obsQuery),\n            stopPolling: obsQuery.stopPolling.bind(obsQuery),\n            subscribeToMore: obsQuery.subscribeToMore.bind(obsQuery),\n        }); }, [obsQuery]);\n        var ssrAllowed = !(this.queryHookOptions.ssr === false ||\n            this.queryHookOptions.skip);\n        if (this.renderPromises && ssrAllowed) {\n            this.renderPromises.registerSSRObservable(obsQuery);\n            if (obsQuery.getCurrentResult().loading) {\n                this.renderPromises.addObservableQueryPromise(obsQuery);\n            }\n        }\n        return obsQuery;\n    };\n    InternalState.prototype.setResult = function (nextResult) {\n        var previousResult = this.result;\n        if (previousResult && previousResult.data) {\n            this.previousData = previousResult.data;\n        }\n        this.result = nextResult;\n        this.forceUpdate();\n        this.handleErrorOrCompleted(nextResult);\n    };\n    InternalState.prototype.handleErrorOrCompleted = function (result) {\n        var _this = this;\n        if (!result.loading) {\n            Promise.resolve().then(function () {\n                if (result.error) {\n                    _this.onError(result.error);\n                }\n                else if (result.data) {\n                    _this.onCompleted(result.data);\n                }\n            }).catch(function (error) {\n                __DEV__ && invariant.warn(error);\n            });\n        }\n    };\n    InternalState.prototype.getCurrentResult = function () {\n        if (!this.result) {\n            this.handleErrorOrCompleted(this.result = this.observable.getCurrentResult());\n        }\n        return this.result;\n    };\n    InternalState.prototype.toQueryResult = function (result) {\n        var queryResult = this.toQueryResultCache.get(result);\n        if (queryResult)\n            return queryResult;\n        var data = result.data, partial = result.partial, resultWithoutPartial = __rest(result, [\"data\", \"partial\"]);\n        this.toQueryResultCache.set(result, queryResult = __assign(__assign(__assign({ data: data }, resultWithoutPartial), this.obsQueryFields), { client: this.client, observable: this.observable, variables: this.observable.variables, called: !this.queryHookOptions.skip, previousData: this.previousData }));\n        if (!queryResult.error && isNonEmptyArray(result.errors)) {\n            queryResult.error = new ApolloError({ graphQLErrors: result.errors });\n        }\n        return queryResult;\n    };\n    InternalState.prototype.unsafeHandlePartialRefetch = function (result) {\n        if (result.partial &&\n            this.queryHookOptions.partialRefetch &&\n            !result.loading &&\n            (!result.data || Object.keys(result.data).length === 0) &&\n            this.observable.options.fetchPolicy !== 'cache-only') {\n            Object.assign(result, {\n                loading: true,\n                networkStatus: NetworkStatus.refetch,\n            });\n            this.observable.refetch();\n        }\n    };\n    return InternalState;\n}());\n//# sourceMappingURL=useQuery.js.map","import { __assign } from \"tslib\";\nimport { useCallback, useMemo, useRef } from 'react';\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { useInternalState } from \"./useQuery.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nvar EAGER_METHODS = [\n    'refetch',\n    'reobserve',\n    'fetchMore',\n    'updateQuery',\n    'startPolling',\n    'subscribeToMore',\n];\nexport function useLazyQuery(query, options) {\n    var internalState = useInternalState(useApolloClient(options && options.client), query);\n    var execOptionsRef = useRef();\n    var merged = execOptionsRef.current\n        ? mergeOptions(options, execOptionsRef.current)\n        : options;\n    var useQueryResult = internalState.useQuery(__assign(__assign({}, merged), { skip: !execOptionsRef.current }));\n    var initialFetchPolicy = useQueryResult.observable.options.initialFetchPolicy ||\n        internalState.getDefaultFetchPolicy();\n    var result = Object.assign(useQueryResult, {\n        called: !!execOptionsRef.current,\n    });\n    var eagerMethods = useMemo(function () {\n        var eagerMethods = {};\n        var _loop_1 = function (key) {\n            var method = result[key];\n            eagerMethods[key] = function () {\n                if (!execOptionsRef.current) {\n                    execOptionsRef.current = Object.create(null);\n                    internalState.forceUpdate();\n                }\n                return method.apply(this, arguments);\n            };\n        };\n        for (var _i = 0, EAGER_METHODS_1 = EAGER_METHODS; _i < EAGER_METHODS_1.length; _i++) {\n            var key = EAGER_METHODS_1[_i];\n            _loop_1(key);\n        }\n        return eagerMethods;\n    }, []);\n    Object.assign(result, eagerMethods);\n    var execute = useCallback(function (executeOptions) {\n        execOptionsRef.current = executeOptions ? __assign(__assign({}, executeOptions), { fetchPolicy: executeOptions.fetchPolicy || initialFetchPolicy }) : {\n            fetchPolicy: initialFetchPolicy,\n        };\n        var promise = internalState\n            .asyncUpdate()\n            .then(function (queryResult) { return Object.assign(queryResult, eagerMethods); });\n        promise.catch(function () { });\n        return promise;\n    }, []);\n    return [execute, result];\n}\n//# sourceMappingURL=useLazyQuery.js.map","import { __assign } from \"tslib\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { mergeOptions, } from \"../../core/index.js\";\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nexport function useMutation(mutation, options) {\n    var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n    verifyDocumentType(mutation, DocumentType.Mutation);\n    var _a = useState({\n        called: false,\n        loading: false,\n        client: client,\n    }), result = _a[0], setResult = _a[1];\n    var ref = useRef({\n        result: result,\n        mutationId: 0,\n        isMounted: true,\n        client: client,\n        mutation: mutation,\n        options: options,\n    });\n    {\n        Object.assign(ref.current, { client: client, options: options, mutation: mutation });\n    }\n    var execute = useCallback(function (executeOptions) {\n        if (executeOptions === void 0) { executeOptions = {}; }\n        var _a = ref.current, client = _a.client, options = _a.options, mutation = _a.mutation;\n        var baseOptions = __assign(__assign({}, options), { mutation: mutation });\n        if (!ref.current.result.loading && !baseOptions.ignoreResults && ref.current.isMounted) {\n            setResult(ref.current.result = {\n                loading: true,\n                error: void 0,\n                data: void 0,\n                called: true,\n                client: client,\n            });\n        }\n        var mutationId = ++ref.current.mutationId;\n        var clientOptions = mergeOptions(baseOptions, executeOptions);\n        return client.mutate(clientOptions).then(function (response) {\n            var _a, _b, _c;\n            var data = response.data, errors = response.errors;\n            var error = errors && errors.length > 0\n                ? new ApolloError({ graphQLErrors: errors })\n                : void 0;\n            if (mutationId === ref.current.mutationId &&\n                !clientOptions.ignoreResults) {\n                var result_1 = {\n                    called: true,\n                    loading: false,\n                    data: data,\n                    error: error,\n                    client: client,\n                };\n                if (ref.current.isMounted && !equal(ref.current.result, result_1)) {\n                    setResult(ref.current.result = result_1);\n                }\n            }\n            (_b = (_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onCompleted) === null || _b === void 0 ? void 0 : _b.call(_a, response.data, clientOptions);\n            (_c = executeOptions.onCompleted) === null || _c === void 0 ? void 0 : _c.call(executeOptions, response.data, clientOptions);\n            return response;\n        }).catch(function (error) {\n            var _a, _b, _c, _d;\n            if (mutationId === ref.current.mutationId &&\n                ref.current.isMounted) {\n                var result_2 = {\n                    loading: false,\n                    error: error,\n                    data: void 0,\n                    called: true,\n                    client: client,\n                };\n                if (!equal(ref.current.result, result_2)) {\n                    setResult(ref.current.result = result_2);\n                }\n            }\n            if (((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError) || clientOptions.onError) {\n                (_c = (_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onError) === null || _c === void 0 ? void 0 : _c.call(_b, error, clientOptions);\n                (_d = executeOptions.onError) === null || _d === void 0 ? void 0 : _d.call(executeOptions, error, clientOptions);\n                return { data: void 0, errors: error };\n            }\n            throw error;\n        });\n    }, []);\n    var reset = useCallback(function () {\n        if (ref.current.isMounted) {\n            setResult({ called: false, loading: false, client: client });\n        }\n    }, []);\n    useEffect(function () {\n        ref.current.isMounted = true;\n        return function () {\n            ref.current.isMounted = false;\n        };\n    }, []);\n    return [execute, __assign({ reset: reset }, result)];\n}\n//# sourceMappingURL=useMutation.js.map","import React from 'react';\n\nconst LoadingDots = (): JSX.Element => {\n  const firstDotStyles = { animationDelay: '-0.32s' };\n  const secondDotStyles = { animationDelay: '-0.16s' };\n  return (\n    <div className=\"flex items-center justify-center space-x-10\">\n      <div className=\"animate-ping w-5 h-5 bg-gray-700 rounded-full\" style={firstDotStyles}></div>\n      <div className=\"animate-ping w-5 h-5 bg-gray-700 rounded-full\" style={secondDotStyles}></div>\n      <div className=\"animate-ping w-5 h-5 bg-gray-700 rounded-full\"></div>\n    </div>\n  );\n};\n\nLoadingDots.displayName = 'LoadingDots';\nexport default LoadingDots;\n","export type Maybe<T> = T;\nexport type InputMaybe<T> = T;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A valid absolute (starting with either a valid protocol or a leading www) or relative (with a leading slash) URL string */\n  AbsoluteOrRelativeURL: string;\n  /** Date scalar type */\n  Date: string;\n  /** Hex Color scalar type */\n  HexColor: string;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** A valid relative URL string with a leading slash (/) */\n  RelativeURL: string;\n  /** Slug scalar type */\n  Slug: string;\n  /** A valid absolute URL string starting with either a valid protocol or a leading www */\n  URL: string;\n};\n\nexport enum AccessLevel {\n  EmailCaptureOpen = 'emailCaptureOpen',\n  Open = 'open',\n  StudentsOnly = 'studentsOnly'\n}\n\nexport type Aggregation = {\n  __typename?: 'Aggregation';\n  buckets?: Maybe<Array<Maybe<AggregationBucket>>>;\n  key?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n};\n\nexport type AggregationBucket = {\n  __typename?: 'AggregationBucket';\n  count?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  query?: Maybe<Scalars['String']>;\n  value?: Maybe<Scalars['String']>;\n};\n\nexport type AllocatedLearningPath = {\n  __typename?: 'AllocatedLearningPath';\n  learningPath?: Maybe<LearningPath>;\n  learningPathId: Scalars['ID'];\n};\n\nexport type AllocatedLicense = {\n  __typename?: 'AllocatedLicense';\n  license?: Maybe<License>;\n  licenseId: Scalars['ID'];\n  licenseRole: AllocatedLicenseRole;\n  status?: Maybe<Scalars['String']>;\n};\n\nexport enum AllocatedLicenseRole {\n  Manager = 'manager',\n  Student = 'student'\n}\n\nexport enum AlternativePricingType {\n  Membership = 'membership'\n}\n\nexport type AppearanceSettings = {\n  __typename?: 'AppearanceSettings';\n  accentColor?: Maybe<Scalars['HexColor']>;\n  altFont?: Maybe<Scalars['String']>;\n  backgroundAsset?: Maybe<Scalars['String']>;\n  backgroundAssetTiled?: Maybe<Scalars['Boolean']>;\n  company?: Maybe<Company>;\n  customCss?: Maybe<Scalars['String']>;\n  font?: Maybe<Scalars['String']>;\n  globalNavigationLinks?: Maybe<Array<Maybe<GlobalNavigationLink>>>;\n  id: Scalars['ID'];\n  linkColor?: Maybe<Scalars['HexColor']>;\n  logoAsset?: Maybe<Scalars['URL']>;\n  retinaLogo?: Maybe<Scalars['Boolean']>;\n  secondaryColor?: Maybe<Scalars['HexColor']>;\n};\n\nexport type ArchivedContent = {\n  __typename?: 'ArchivedContent';\n  archivedAt?: Maybe<Scalars['Date']>;\n  company?: Maybe<Company>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  reinstatable: Scalars['Boolean'];\n  resource?: Maybe<Scalars['ID']>;\n  resourceType?: Maybe<Scalars['String']>;\n  status?: Maybe<Scalars['String']>;\n  user?: Maybe<Scalars['ID']>;\n  waitlistActive: Scalars['Boolean'];\n};\n\nexport type ArticlePage = PageEntity & {\n  __typename?: 'ArticlePage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  languages: Array<ArticlePageLanguage>;\n  lessonId: Scalars['ID'];\n  publishDate?: Maybe<Scalars['Date']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n  videoAsset?: Maybe<Scalars['String']>;\n};\n\nexport type ArticlePageLanguage = {\n  __typename?: 'ArticlePageLanguage';\n  allowAudioDownload?: Maybe<Scalars['Boolean']>;\n  audioAsset?: Maybe<Scalars['String']>;\n  audioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  body?: Maybe<Scalars['String']>;\n  copyright?: Maybe<Scalars['String']>;\n  externalUrl?: Maybe<Scalars['String']>;\n  externalUrlCallToAction?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  language?: Maybe<Scalars['String']>;\n  pdfAsset?: Maybe<Scalars['String']>;\n  pdfAssetSecondary?: Maybe<Scalars['String']>;\n  pdfAssetSecondaryUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  pdfAssetTitle?: Maybe<Scalars['String']>;\n  pdfAssetTitleSecondary?: Maybe<Scalars['String']>;\n  pdfAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  subtitle?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type AssessmentPageEntity = {\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  instructorAssessment?: Maybe<Scalars['Boolean']>;\n  lessonId: Scalars['ID'];\n  questions: Array<QuizQuestion>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type AssignmentPage = PageEntity & {\n  __typename?: 'AssignmentPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  allowExternalActivity?: Maybe<Scalars['Boolean']>;\n  allowVideoSubmission?: Maybe<Scalars['Boolean']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  dueAt?: Maybe<Scalars['Date']>;\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  enableDiscussionAssignment?: Maybe<Scalars['Boolean']>;\n  externalActivityButtonText?: Maybe<Scalars['String']>;\n  externalActivityButtonUrl?: Maybe<Scalars['String']>;\n  hideDiscussionUntilCommentPost?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  preventProgression?: Maybe<Scalars['Boolean']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type AudioPage = PageEntity & {\n  __typename?: 'AudioPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  audioAsset?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  sidebarIsHidden?: Maybe<Scalars['Boolean']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type AwardType = {\n  __typename?: 'AwardType';\n  deleted?: Maybe<Scalars['Boolean']>;\n  icon?: Maybe<AwardTypeIcon>;\n  id: Scalars['ID'];\n  includeOnDashboard?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Scalars['String']>;\n  pluralLabel?: Maybe<Scalars['String']>;\n};\n\nexport enum AwardTypeIcon {\n  Businessuser = 'businessuser',\n  Check = 'check',\n  Checkfile = 'checkfile',\n  Flag = 'flag',\n  FullStar = 'fullStar',\n  Gift = 'gift',\n  Globe = 'globe',\n  HalfStar = 'halfStar',\n  Heart = 'heart',\n  Lightbulb = 'lightbulb',\n  Like = 'like',\n  Loading = 'loading',\n  Signpost = 'signpost',\n  Star = 'star',\n  Stopwatch = 'stopwatch',\n  Tag = 'tag'\n}\n\nexport type BackgroundJob = {\n  __typename?: 'BackgroundJob';\n  createdAt: Scalars['Date'];\n  description?: Maybe<Scalars['String']>;\n  errorMessage?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  repeatable: Scalars['Boolean'];\n  status: BackgroundJobStatus;\n  type: Scalars['String'];\n};\n\nexport enum BackgroundJobStatus {\n  Complete = 'complete',\n  Failed = 'failed',\n  Processing = 'processing',\n  Queued = 'queued'\n}\n\nexport type Block = {\n  __typename?: 'Block';\n  id: Scalars['ID'];\n};\n\nexport type Bookmark = {\n  __typename?: 'Bookmark';\n  bookmarkFolder: BookmarkFolder;\n  course: Course;\n  createdAt: Scalars['Date'];\n  deleted: Scalars['Boolean'];\n  id: Scalars['ID'];\n  note?: Maybe<Scalars['String']>;\n  topic?: Maybe<Topic>;\n  topicId?: Maybe<Scalars['ID']>;\n  user: User;\n};\n\nexport type BookmarkFolder = {\n  __typename?: 'BookmarkFolder';\n  bookmarkCount?: Maybe<Scalars['Int']>;\n  bookmarks?: Maybe<Array<Bookmark>>;\n  defaultFolder?: Maybe<Scalars['Boolean']>;\n  deleted: Scalars['Boolean'];\n  externalResourceId?: Maybe<Scalars['ID']>;\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  user: User;\n};\n\nexport type Bundle = {\n  __typename?: 'Bundle';\n  annualPlanId?: Maybe<Scalars['ID']>;\n  annualPriceInCents?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  needShippingAddress?: Maybe<Scalars['Boolean']>;\n  planId?: Maybe<Scalars['ID']>;\n  priceInCents?: Maybe<Scalars['Int']>;\n  purchasable?: Maybe<Scalars['Boolean']>;\n  slug: Scalars['Slug'];\n  taxable?: Maybe<Scalars['Boolean']>;\n  variations?: Maybe<Array<Maybe<BundleVariation>>>;\n  weight?: Maybe<Scalars['Float']>;\n};\n\nexport type BundleVariation = {\n  __typename?: 'BundleVariation';\n  label?: Maybe<Scalars['String']>;\n};\n\nexport type CatalogCategory = {\n  __typename?: 'CatalogCategory';\n  id: Scalars['ID'];\n  label: Scalars['String'];\n  slug: Scalars['Slug'];\n  subcategories?: Maybe<Array<Maybe<CatalogSubcategory>>>;\n};\n\nexport type CatalogContent = {\n  __typename?: 'CatalogContent';\n  contentItems?: Maybe<Array<Content>>;\n  meta: CatalogMeta;\n};\n\nexport type CatalogMeta = {\n  __typename?: 'CatalogMeta';\n  aggregations?: Maybe<Array<Aggregation>>;\n  contentTypeFilterEnabled: Scalars['Boolean'];\n  contentTypes?: Maybe<Array<Scalars['String']>>;\n  debug?: Maybe<Scalars['Boolean']>;\n  displayAuthorsEnabled: Scalars['Boolean'];\n  displayBundle?: Maybe<Bundle>;\n  displayDescriptionOnCalendar: Scalars['Boolean'];\n  displayStartDateEnabled: Scalars['Boolean'];\n  displayTypeCalendarEnabled: Scalars['Boolean'];\n  displayTypeGridEnabled: Scalars['Boolean'];\n  displayTypeListEnabled: Scalars['Boolean'];\n  hasMore: Scalars['Boolean'];\n  isCurated: Scalars['Boolean'];\n  queryCustomFields: Scalars['JSON'];\n  resultsDisplayType: ContentItemDisplayType;\n  /** @deprecated Use `selectedSortColumn` and `selectedSortDirection` */\n  selectedSort: Scalars['String'];\n  selectedSortColumn: SortColumn;\n  selectedSortDirection: SortDirection;\n  sortCourseStartDateEnabled: Scalars['Boolean'];\n  sortCreatedAtEnabled: Scalars['Boolean'];\n  sortPublishDateEnabled: Scalars['Boolean'];\n  sortRelevanceEnabled: Scalars['Boolean'];\n  sortTitleEnabled: Scalars['Boolean'];\n  sortUpdatedAtEnabled: Scalars['Boolean'];\n  tokenLabel?: Maybe<Scalars['String']>;\n  total?: Maybe<Scalars['Int']>;\n};\n\nexport type CatalogSettings = {\n  __typename?: 'CatalogSettings';\n  boostRibbon?: Maybe<Scalars['String']>;\n  categories?: Maybe<Array<CatalogCategory>>;\n  contentTypeFilterEnabled?: Maybe<Scalars['Boolean']>;\n  defaultQuery?: Maybe<Scalars['String']>;\n  defaultSort?: Maybe<Scalars['String']>;\n  displayAuthorsEnabled?: Maybe<Scalars['Boolean']>;\n  displayBundle?: Maybe<Array<Bundle>>;\n  displayBundleId?: Maybe<Scalars['ID']>;\n  displayStartDateEnabled?: Maybe<Scalars['Boolean']>;\n  displayTypeCalendarEnabled?: Maybe<Scalars['Boolean']>;\n  displayTypeGridEnabled?: Maybe<Scalars['Boolean']>;\n  displayTypeListEnabled?: Maybe<Scalars['Boolean']>;\n  hidePastEvents?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  onlyDisplayAccessibleContent?: Maybe<Scalars['Boolean']>;\n  resultsDisplayType: ContentItemDisplayType;\n  sortCourseStartDateEnabled?: Maybe<Scalars['Boolean']>;\n  sortCreatedAtEnabled?: Maybe<Scalars['Boolean']>;\n  sortPublishDateEnabled?: Maybe<Scalars['Boolean']>;\n  sortRelevanceEnabled?: Maybe<Scalars['Boolean']>;\n  sortTitleEnabled?: Maybe<Scalars['Boolean']>;\n  sortUpdatedAtEnabled?: Maybe<Scalars['Boolean']>;\n};\n\nexport type CatalogSubcategory = {\n  __typename?: 'CatalogSubcategory';\n  description?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  label: Scalars['String'];\n  query: Scalars['String'];\n  slug: Scalars['Slug'];\n};\n\nexport type Certificate = {\n  __typename?: 'Certificate';\n  certificateTemplate?: Maybe<CertificateTemplate>;\n  contentItem?: Maybe<Content>;\n  deleted: Scalars['Boolean'];\n  didExpire: Scalars['Boolean'];\n  expirationDate?: Maybe<Scalars['Date']>;\n  externalResourceTitle?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  identifier?: Maybe<Scalars['String']>;\n  isExpired: Scalars['Boolean'];\n  isExternal: Scalars['Boolean'];\n  issuedAt: Scalars['Date'];\n  pdfAsset?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  progressWasReset: Scalars['Boolean'];\n  recertificationDate?: Maybe<Scalars['Date']>;\n  resource?: Maybe<CertificateResource>;\n  resourceId?: Maybe<Scalars['ID']>;\n  resourceType?: Maybe<CertificateResourceType>;\n  resourceTypeLabel?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  url: Scalars['AbsoluteOrRelativeURL'];\n  user: User;\n};\n\nexport enum CertificateDateFormatType {\n  /** DD-MM-YYYY (ex. 25-07-2019) */\n  EuroShort = 'euroShort',\n  /** YYYY-MM-DD (ex. 2019-07-25) */\n  Iso8601 = 'iso8601',\n  /** MMMM DD, YYYY (ex. July 25, 2019) */\n  UsLong = 'usLong',\n  /** MM-DD-YYYY (ex. 07-25-2019) */\n  UsShort = 'usShort'\n}\n\nexport type CertificateField = {\n  __typename?: 'CertificateField';\n  awardType?: Maybe<AwardType>;\n  awardTypeId?: Maybe<Scalars['ID']>;\n  customField?: Maybe<CustomField>;\n  customFieldSlug?: Maybe<Scalars['Slug']>;\n  dateFormat?: Maybe<CertificateDateFormatType>;\n  hasIdentifierPrefix?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  identifierBodyLength?: Maybe<Scalars['Int']>;\n  identifierPrefix?: Maybe<Scalars['String']>;\n  includeOnExternalCertificate: Scalars['Boolean'];\n  includeOnTranscript: Scalars['Boolean'];\n  label: Scalars['String'];\n  sessionCustomContentFieldSlug?: Maybe<Scalars['Slug']>;\n  text?: Maybe<Scalars['String']>;\n  type: CertificateFieldType;\n  userCustomField?: Maybe<UserCustomField>;\n  userCustomFieldSlug?: Maybe<Scalars['Slug']>;\n};\n\nexport enum CertificateFieldType {\n  /** Award Type */\n  AwardLabel = 'awardLabel',\n  /** Content Completion Date */\n  ContentCompletionDate = 'contentCompletionDate',\n  /** Custom Content Field */\n  ContentFieldLabel = 'contentFieldLabel',\n  /** Content Start Date */\n  ContentStartDate = 'contentStartDate',\n  /** Content Title */\n  CourseLabel = 'courseLabel',\n  /** Certificate Issued Date */\n  DateLabel = 'dateLabel',\n  /** Certificate Expiration Date */\n  ExpirationDateLabel = 'expirationDateLabel',\n  /** Unique Identifier */\n  Identifier = 'identifier',\n  /** Learner Client Name */\n  LearnerClientNameLabel = 'learnerClientNameLabel',\n  /** Learner Name */\n  NameLabel = 'nameLabel',\n  /** Session Custom Content Field */\n  SessionCustomContentField = 'sessionCustomContentField',\n  /** Short Text */\n  TextLabel = 'textLabel',\n  /** Custom Learner Field */\n  UserFieldLabel = 'userFieldLabel',\n  /** Learner Ref 1 */\n  UserRef1Label = 'userRef1Label',\n  /** Learner Ref 2 */\n  UserRef2Label = 'userRef2Label',\n  /** Learner Ref 3 */\n  UserRef3Label = 'userRef3Label',\n  /** Learner Ref 4 */\n  UserRef4Label = 'userRef4Label',\n  /** Learner Ref 5 */\n  UserRef5Label = 'userRef5Label',\n  /** Learner Ref 6 */\n  UserRef6Label = 'userRef6Label',\n  /** Learner Ref 7 */\n  UserRef7Label = 'userRef7Label',\n  /** Learner Ref 8 */\n  UserRef8Label = 'userRef8Label',\n  /** Learner Ref 9 */\n  UserRef9Label = 'userRef9Label',\n  /** Learner Ref 10 */\n  UserRef10Label = 'userRef10Label',\n  /** Link to View Certificate */\n  ViewCertificateLink = 'viewCertificateLink'\n}\n\nexport type CertificateResource = Course | LearningPath;\n\nexport enum CertificateResourceType {\n  Course = 'course',\n  LearningPath = 'learningPath'\n}\n\nexport type CertificateTemplate = {\n  __typename?: 'CertificateTemplate';\n  asset?: Maybe<Scalars['URL']>;\n  assetLibraryId?: Maybe<Scalars['ID']>;\n  customCss?: Maybe<Scalars['String']>;\n  expirationDate?: Maybe<Scalars['Date']>;\n  expirationDays?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  isExpired: Scalars['Boolean'];\n  labels?: Maybe<Array<Maybe<CertificateTemplateLabel>>>;\n  recertificationAction?: Maybe<CertificateTemplateRecertificationActionType>;\n  recertificationActionText?: Maybe<Scalars['String']>;\n  recertificationActionUrl?: Maybe<Scalars['URL']>;\n  recertificationAfterDays?: Maybe<Scalars['Int']>;\n  recertificationAutoReset?: Maybe<Scalars['Boolean']>;\n  recertificationInstructions?: Maybe<Scalars['String']>;\n  resource: CertificateTemplateResource;\n  resourceType: CertificateTemplateResourceType;\n  supplementalAssets?: Maybe<Array<Scalars['URL']>>;\n  title?: Maybe<Scalars['String']>;\n  userCustomField?: Maybe<UserCustomField>;\n  userCustomFieldSlug?: Maybe<Scalars['Slug']>;\n  userCustomFieldValue?: Maybe<Scalars['String']>;\n};\n\nexport type CertificateTemplateLabel = {\n  __typename?: 'CertificateTemplateLabel';\n  certificateField?: Maybe<CertificateField>;\n  certificateFieldId: Scalars['ID'];\n  fontColor: Scalars['HexColor'];\n  fontSize: Scalars['Int'];\n  id: Scalars['ID'];\n  textAlign: TextAlignment;\n  x: Scalars['Int'];\n  y: Scalars['Int'];\n};\n\nexport enum CertificateTemplateRecertificationActionType {\n  /** Custom action text & URL */\n  ActionUrl = 'actionUrl',\n  /** Recertify in current Session */\n  RecertifyInSession = 'recertifyInSession',\n  /** Reset progress in Content */\n  ResetProgress = 'resetProgress'\n}\n\nexport type CertificateTemplateResource = Course | LearningPath;\n\nexport enum CertificateTemplateResourceType {\n  Course = 'course',\n  LearningPath = 'learningPath'\n}\n\nexport type CertificateUploadField = {\n  awardAmount?: InputMaybe<Scalars['Float']>;\n  awardTypeId?: InputMaybe<Scalars['ID']>;\n  certificateFieldId: Scalars['ID'];\n  date?: InputMaybe<Scalars['Date']>;\n  type: CertificateFieldType;\n  value?: InputMaybe<Scalars['String']>;\n};\n\nexport type Client = {\n  __typename?: 'Client';\n  allocatedCredits?: Maybe<Scalars['Float']>;\n  appearance?: Maybe<AppearanceSettings>;\n  autoFilterForSelectedLanguage?: Maybe<Scalars['Boolean']>;\n  catalog?: Maybe<CatalogSettings>;\n  clientSubscriptionNeedsSetup?: Maybe<Scalars['Boolean']>;\n  courseIds?: Maybe<Array<Scalars['ID']>>;\n  courseTagIds?: Maybe<Array<Scalars['ID']>>;\n  courseTags?: Maybe<Array<Tag>>;\n  courses?: Maybe<Array<Course>>;\n  createdAt?: Maybe<Scalars['Date']>;\n  currentBalance?: Maybe<Scalars['Float']>;\n  currentUserManagerAllocatedLicenseTree?: Maybe<Array<LicenseNode>>;\n  customHost?: Maybe<Scalars['String']>;\n  dashboardLayoutId?: Maybe<Scalars['ID']>;\n  defaultLanguage?: Maybe<Scalars['String']>;\n  disabled: Scalars['Boolean'];\n  emailLayout?: Maybe<EmailLayoutSettings>;\n  enableBranding: Scalars['Boolean'];\n  enableCommunitiesSegmentation?: Maybe<Scalars['Boolean']>;\n  enableContentDetailPage?: Maybe<Scalars['Boolean']>;\n  enableCreditPurchasing?: Maybe<Scalars['Boolean']>;\n  enableCustomEmailSettings?: Maybe<Scalars['Boolean']>;\n  enableDiscussions?: Maybe<Scalars['Boolean']>;\n  enableEcommerce: Scalars['Boolean'];\n  enableGlobalLinks: Scalars['Boolean'];\n  enableLicenseDashboards?: Maybe<Scalars['Boolean']>;\n  enableNavLinks: Scalars['Boolean'];\n  enableOnboardingSurvey: Scalars['Boolean'];\n  enableRecommendationAssessment?: Maybe<Scalars['Boolean']>;\n  enableSegmentation: Scalars['Boolean'];\n  id: Scalars['ID'];\n  languageSelectorEnabled?: Maybe<Scalars['Boolean']>;\n  languages?: Maybe<Array<Scalars['String']>>;\n  learningPathIds?: Maybe<Array<Scalars['ID']>>;\n  learningPaths?: Maybe<Array<LearningPath>>;\n  licenseEndDate?: Maybe<Scalars['Date']>;\n  licenseTree?: Maybe<Array<LicenseNode>>;\n  licenses?: Maybe<Array<License>>;\n  name: Scalars['String'];\n  notificationEmails?: Maybe<Scalars['String']>;\n  panorama: Scalars['Boolean'];\n  pendingJobs?: Maybe<Array<Maybe<BackgroundJob>>>;\n  primaryLicense?: Maybe<License>;\n  purchasableContentIds?: Maybe<Array<Scalars['ID']>>;\n  purchasableTags?: Maybe<Array<Tag>>;\n  redemptionLayoutId?: Maybe<Scalars['ID']>;\n  schoolName?: Maybe<Scalars['String']>;\n  seatsAllocatedCount?: Maybe<Scalars['Int']>;\n  seatsLimit?: Maybe<Scalars['Int']>;\n  seatsUsedCount?: Maybe<Scalars['Int']>;\n  secretKey?: Maybe<Scalars['String']>;\n  sku?: Maybe<Scalars['String']>;\n  slug: Scalars['Slug'];\n  sso?: Maybe<SsoSettings>;\n  startingBalance?: Maybe<Scalars['Float']>;\n  tags?: Maybe<Array<Tag>>;\n  updatedAt?: Maybe<Scalars['Date']>;\n};\n\nexport type Company = {\n  __typename?: 'Company';\n  appearanceSettings?: Maybe<AppearanceSettings>;\n  catalogBlock?: Maybe<Block>;\n  catalogVisibilityEmails?: Maybe<Array<Scalars['String']>>;\n  copyrightName?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  micrositeFooter?: Maybe<MicrositeBlock>;\n  micrositeHeader?: Maybe<MicrositeBlock>;\n  name?: Maybe<Scalars['String']>;\n  organization?: Maybe<Organization>;\n  rootLayout?: Maybe<RootLayout>;\n  schoolName?: Maybe<Scalars['String']>;\n  subdomain?: Maybe<Scalars['String']>;\n};\n\nexport type CompetencyAssessment = {\n  __typename?: 'CompetencyAssessment';\n  continueAfterTimerExpires: Scalars['Boolean'];\n  createdAt: Scalars['Date'];\n  failMessage?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  isGraded: Scalars['Boolean'];\n  minimumPassingPercentage?: Maybe<Scalars['Int']>;\n  passMessage?: Maybe<Scalars['String']>;\n  questions?: Maybe<Array<CompetencyAssessmentQuestion>>;\n  resourceItems?: Maybe<Array<CompetencyAssessmentResource>>;\n  resources?: Maybe<Array<Resource>>;\n  sku?: Maybe<Scalars['String']>;\n  timeLimitInSeconds?: Maybe<Scalars['Int']>;\n  title: Scalars['String'];\n  updatedAt: Scalars['Date'];\n};\n\nexport type CompetencyAssessmentQuestion = {\n  __typename?: 'CompetencyAssessmentQuestion';\n  body: Scalars['String'];\n  choices?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  mustSelectAllCorrectChoices: Scalars['Boolean'];\n  type: CompetencyAssessmentQuestionType;\n};\n\nexport enum CompetencyAssessmentQuestionType {\n  DropDown = 'dropDown',\n  MultipleChoice = 'multipleChoice',\n  SelectBoxes = 'selectBoxes'\n}\n\nexport type CompetencyAssessmentResource = Layout | LearningPath;\n\nexport type Content = {\n  __typename?: 'Content';\n  acceptBadgeUrl?: Maybe<Scalars['String']>;\n  altDescriptionBody?: Maybe<Scalars['String']>;\n  alternativePricingRef?: Maybe<Scalars['Int']>;\n  alternativePricingType?: Maybe<AlternativePricingType>;\n  asset?: Maybe<Scalars['String']>;\n  authors?: Maybe<Array<Maybe<Scalars['String']>>>;\n  authorsAndInstructors?: Maybe<Array<Scalars['String']>>;\n  availabilityStatus?: Maybe<Scalars['String']>;\n  badgeName?: Maybe<Scalars['String']>;\n  badgeUrl?: Maybe<Scalars['String']>;\n  bulkPurchasingEnabled?: Maybe<Scalars['Boolean']>;\n  canAddToQueue?: Maybe<Scalars['Boolean']>;\n  contentTypeAssetAspectRatio?: Maybe<Scalars['String']>;\n  contentTypeLabel?: Maybe<Scalars['String']>;\n  courseEndDate?: Maybe<Scalars['Date']>;\n  courseGracePeriodEnded: Scalars['Boolean'];\n  courseGroup?: Maybe<Scalars['String']>;\n  coursePresold: Scalars['Boolean'];\n  courseStartDate?: Maybe<Scalars['Date']>;\n  createdAt?: Maybe<Scalars['Date']>;\n  credlyBadgeExpiresAt?: Maybe<Scalars['Date']>;\n  currentUserMayReschedule: Scalars['Boolean'];\n  currentUserUnmetCoursePrerequisites?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  currentUserUnmetLearningPathPrerequisites?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  customFields?: Maybe<Scalars['JSON']>;\n  description?: Maybe<Scalars['String']>;\n  displayCourse?: Maybe<Scalars['ID']>;\n  displayCourseSlug?: Maybe<Scalars['Slug']>;\n  displayDate?: Maybe<Scalars['Date']>;\n  embeddedEnabled?: Maybe<Scalars['Boolean']>;\n  enrollmentCount?: Maybe<Scalars['Int']>;\n  enrollmentEndDate?: Maybe<Scalars['Date']>;\n  enrollmentStartDate?: Maybe<Scalars['Date']>;\n  expiresAt?: Maybe<Scalars['Date']>;\n  hasChildren: Scalars['Boolean'];\n  hideCourseDescription: Scalars['Boolean'];\n  id: Scalars['ID'];\n  imageUrl?: Maybe<Scalars['String']>;\n  isActive: Scalars['Boolean'];\n  issuedAt?: Maybe<Scalars['Date']>;\n  kind?: Maybe<ContentKind>;\n  language?: Maybe<Scalars['String']>;\n  location?: Maybe<Location>;\n  meetingStartDate?: Maybe<Scalars['Date']>;\n  metaDescription?: Maybe<Scalars['String']>;\n  metaTitle?: Maybe<Scalars['String']>;\n  priceInCents?: Maybe<Scalars['Int']>;\n  publishDate?: Maybe<Scalars['Date']>;\n  rating?: Maybe<Scalars['Int']>;\n  ribbon?: Maybe<Ribbon>;\n  seatsLimit?: Maybe<Scalars['Int']>;\n  sessionTitle?: Maybe<Scalars['String']>;\n  sku?: Maybe<Scalars['String']>;\n  slug: Scalars['Slug'];\n  source?: Maybe<Scalars['String']>;\n  state?: Maybe<Scalars['String']>;\n  status?: Maybe<Status>;\n  suggestedRetailPriceInCents?: Maybe<Scalars['Int']>;\n  tags?: Maybe<Array<Maybe<Tag>>>;\n  timeZone?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['Date']>;\n  url?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  waitlistCount?: Maybe<Scalars['Int']>;\n  waitlistingEnabled: Scalars['Boolean'];\n  waitlistingTriggered: Scalars['Boolean'];\n};\n\nexport type ContentGroup = {\n  __typename?: 'ContentGroup';\n  count: Scalars['Int'];\n  kind: ContentGroupKind;\n};\n\nexport enum ContentGroupKind {\n  ArchivedContentItems = 'archivedContentItems',\n  BookmarkFolders = 'bookmarkFolders',\n  Certificates = 'certificates',\n  CompletedItems = 'completedItems',\n  ContentItems = 'contentItems',\n  CredlyBadgeCourses = 'credlyBadgeCourses',\n  EventItems = 'eventItems',\n  LearningPaths = 'learningPaths',\n  WaitlistedCourses = 'waitlistedCourses'\n}\n\nexport enum ContentItemDisplayType {\n  Calendar = 'calendar',\n  Grid = 'grid',\n  List = 'list'\n}\n\nexport enum ContentKind {\n  Article = 'article',\n  Bundle = 'bundle',\n  Course = 'course',\n  CourseGroup = 'courseGroup',\n  DiscountGroup = 'discountGroup',\n  InPersonEvent = 'inPersonEvent',\n  InPersonEventCourse = 'inPersonEventCourse',\n  LearningPath = 'learningPath',\n  MicroCourse = 'microCourse',\n  PickableGroup = 'pickableGroup',\n  Product = 'product',\n  Sellable = 'sellable',\n  ShareableContentObject = 'shareableContentObject',\n  Video = 'video',\n  Webinar = 'webinar',\n  WebinarCourse = 'webinarCourse',\n  XApiObject = 'xApiObject'\n}\n\nexport type ContentType = {\n  __typename?: 'ContentType';\n  assetAspectRatio?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n};\n\nexport type Course = {\n  __typename?: 'Course';\n  accessDays?: Maybe<Scalars['Int']>;\n  alternativePricingRef?: Maybe<Scalars['Int']>;\n  alternativePricingType?: Maybe<AlternativePricingType>;\n  appearanceBlock?: Maybe<Scalars['ID']>;\n  appearanceHash?: Maybe<Scalars['String']>;\n  askLearnerPassword?: Maybe<Scalars['Boolean']>;\n  availabilityStatus?: Maybe<Scalars['String']>;\n  awardClaimingOptions?: Maybe<Array<CourseAwardClaimingOption>>;\n  balanceRequirement?: Maybe<Scalars['Float']>;\n  bulkPurchasingEnabled: Scalars['Boolean'];\n  completionTimePerPage?: Maybe<Scalars['Int']>;\n  confirmationBlock?: Maybe<Scalars['ID']>;\n  courseEndDate?: Maybe<Scalars['Date']>;\n  courseGroup?: Maybe<CourseGroup>;\n  courseStartDate?: Maybe<Scalars['Date']>;\n  createdAt?: Maybe<Scalars['Date']>;\n  currentUserHasAccess: Scalars['Boolean'];\n  customFields?: Maybe<Scalars['JSON']>;\n  discussionsEnabled?: Maybe<Scalars['Boolean']>;\n  displayMap: Scalars['Boolean'];\n  displayResults: Scalars['Boolean'];\n  embeddedEnabled?: Maybe<Scalars['Boolean']>;\n  enrollmentActive?: Maybe<Scalars['Boolean']>;\n  enrollmentEndDate?: Maybe<Scalars['Date']>;\n  enrollmentStartDate?: Maybe<Scalars['Date']>;\n  finalAssessment?: Maybe<Scalars['String']>;\n  forceLinearProgress?: Maybe<Scalars['Boolean']>;\n  freeWithRegistration?: Maybe<Scalars['Boolean']>;\n  fulfillmentCenter?: Maybe<Scalars['ID']>;\n  futurePublishDate?: Maybe<Scalars['Date']>;\n  galleryEnabled?: Maybe<Scalars['Boolean']>;\n  gracePeriodEndDate?: Maybe<Scalars['Date']>;\n  hasChildren: Scalars['Boolean'];\n  hasMultipleCurrencies: Scalars['Boolean'];\n  id: Scalars['ID'];\n  inPersonEventInfo?: Maybe<InPersonEventInfo>;\n  instructorAccessEnabled?: Maybe<Scalars['Boolean']>;\n  instructorAccessPriceInCents?: Maybe<Scalars['Int']>;\n  instructorEmails?: Maybe<Array<Maybe<Scalars['String']>>>;\n  isActive: Scalars['Boolean'];\n  isChild?: Maybe<Scalars['Boolean']>;\n  kind?: Maybe<CourseGroupKind>;\n  lastTierPriceInCents?: Maybe<Scalars['Int']>;\n  linkedWorkbookEnabled?: Maybe<Scalars['Boolean']>;\n  linkedWorkbookSkipEnabled?: Maybe<Scalars['Boolean']>;\n  location?: Maybe<Location>;\n  meetings?: Maybe<Array<Meeting>>;\n  meetingsOverviewEnabled?: Maybe<Scalars['Boolean']>;\n  parentCourseId?: Maybe<Scalars['ID']>;\n  paywallsBlock?: Maybe<Scalars['ID']>;\n  prerequisiteCourses?: Maybe<Array<Maybe<Course>>>;\n  prerequisiteLearningPaths?: Maybe<Array<Maybe<LearningPath>>>;\n  priceInCents?: Maybe<Scalars['Int']>;\n  prices: Array<ItemPrice>;\n  publishDate?: Maybe<Scalars['Date']>;\n  purchasable: Scalars['Boolean'];\n  resourcesEnabled?: Maybe<Scalars['Boolean']>;\n  roster?: Maybe<Scalars['Boolean']>;\n  rosterSubmittedDate?: Maybe<Scalars['Date']>;\n  sampleLesson?: Maybe<Lesson>;\n  sampleLessonId?: Maybe<Scalars['ID']>;\n  scormCollectUserDetails?: Maybe<Scalars['Boolean']>;\n  seatPackages?: Maybe<Array<SeatPackage>>;\n  seatTiers?: Maybe<Array<SeatTier>>;\n  seatsAllocatedCount: Scalars['Int'];\n  seatsLimit?: Maybe<Scalars['Int']>;\n  seatsLimitMet: Scalars['Boolean'];\n  seatsUsedCount: Scalars['Int'];\n  sections?: Maybe<Array<Maybe<Section>>>;\n  sessionIsTitled: Scalars['Boolean'];\n  showProgress?: Maybe<Scalars['Boolean']>;\n  showSyllabusWhileUnenrolled?: Maybe<Scalars['Boolean']>;\n  sku?: Maybe<Scalars['String']>;\n  slug: Scalars['Slug'];\n  status?: Maybe<Status>;\n  suggestedRetailPriceInCents?: Maybe<Scalars['Int']>;\n  superquizEnabled?: Maybe<Scalars['Boolean']>;\n  syllabusTitlesEnabled?: Maybe<Scalars['Boolean']>;\n  taxCategory?: Maybe<Scalars['ID']>;\n  taxable?: Maybe<Scalars['Boolean']>;\n  termsBlock?: Maybe<Scalars['ID']>;\n  title?: Maybe<Scalars['String']>;\n  topicGroup?: Maybe<Scalars['ID']>;\n  updatedAt?: Maybe<Scalars['Date']>;\n  waitlistActive?: Maybe<Scalars['Boolean']>;\n  waitlistCount?: Maybe<Scalars['Int']>;\n  waitlistingEnabled: Scalars['Boolean'];\n  waitlistingTriggered: Scalars['Boolean'];\n  webinarDates?: Maybe<Array<Maybe<DateRange>>>;\n  webinarDetails?: Maybe<WebinarBlock>;\n  webinarId?: Maybe<Scalars['String']>;\n  webinarTimeZone?: Maybe<Scalars['String']>;\n  workbookEnabled?: Maybe<Scalars['Boolean']>;\n};\n\nexport type CourseAwardClaimingOption = {\n  __typename?: 'CourseAwardClaimingOption';\n  awardAmounts?: Maybe<Array<Scalars['Float']>>;\n  awardType: AwardType;\n  awardTypeId: Scalars['ID'];\n  range: Scalars['String'];\n};\n\nexport type CourseCompletionCriteriaProgress = {\n  __typename?: 'CourseCompletionCriteriaProgress';\n  completed?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  percent: Scalars['Int'];\n  required?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  type?: Maybe<CourseCompletionCriteriaType>;\n};\n\nexport enum CourseCompletionCriteriaType {\n  /** Percentage of Page Viewed */\n  ArticlePercentViewed = 'articlePercentViewed',\n  /** Time Spent Viewing Page */\n  ArticleTimeViewedInSeconds = 'articleTimeViewedInSeconds',\n  /** Bongo Assignment Completed */\n  BongoAssignmentCompleted = 'bongoAssignmentCompleted',\n  /** Assessment Passed */\n  CourseAssessmentPassed = 'courseAssessmentPassed',\n  /** Assignment Completed */\n  CourseAssignmentComplete = 'courseAssignmentComplete',\n  /** Meeting Attended */\n  CourseMeetingAttended = 'courseMeetingAttended',\n  /** Percentage of Pages Viewed */\n  CoursePercentViewed = 'coursePercentViewed',\n  /** Page Viewed */\n  CourseTopicViewed = 'courseTopicViewed',\n  /** SCORM Complete */\n  ScormComplete = 'scormComplete',\n  /** Survey Gizmo Complete */\n  SurveyGizmoComplete = 'surveyGizmoComplete',\n  /** Percentage of Video Viewed */\n  VideoPercentViewed = 'videoPercentViewed',\n  /** Video topic of viewed */\n  VideoTopicId = 'videoTopicId',\n  /** xAPI Complete */\n  XApiComplete = 'xApiComplete'\n}\n\nexport type CourseGroup = {\n  __typename?: 'CourseGroup';\n  allowRescheduling?: Maybe<Scalars['Boolean']>;\n  archived?: Maybe<Scalars['Boolean']>;\n  asset?: Maybe<Scalars['String']>;\n  authors?: Maybe<Array<Maybe<Scalars['String']>>>;\n  availabilityStatus?: Maybe<Scalars['String']>;\n  contentType?: Maybe<ContentType>;\n  courses?: Maybe<Array<Maybe<Course>>>;\n  createdAt?: Maybe<Scalars['Date']>;\n  currentUserMayReschedule?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<Scalars['JSON']>;\n  description?: Maybe<Scalars['String']>;\n  detailAsset?: Maybe<Scalars['String']>;\n  displayBundle?: Maybe<DisplayBundle>;\n  displayCourse?: Maybe<Course>;\n  externalDetailUrl?: Maybe<Scalars['String']>;\n  externalPurchaseUrl?: Maybe<Scalars['String']>;\n  hasParentCourseGroup?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  isbn?: Maybe<Scalars['String']>;\n  kind?: Maybe<CourseGroupKind>;\n  language?: Maybe<Scalars['String']>;\n  layout?: Maybe<Layout>;\n  metaDescription?: Maybe<Scalars['String']>;\n  metaTitle?: Maybe<Scalars['String']>;\n  ownedByActiveScope: Scalars['Boolean'];\n  rating?: Maybe<Scalars['Int']>;\n  relatedCourseGroups?: Maybe<Array<Maybe<CourseGroup>>>;\n  relatedQuery?: Maybe<Scalars['String']>;\n  relatedQueryLimit?: Maybe<Scalars['Int']>;\n  relatedQuerySignature?: Maybe<Scalars['String']>;\n  relatedQuerySort?: Maybe<Scalars['String']>;\n  relatedShowDescription?: Maybe<Scalars['Boolean']>;\n  relatedShowImageAsset?: Maybe<Scalars['Boolean']>;\n  ribbon?: Maybe<Scalars['Slug']>;\n  slug: Scalars['Slug'];\n  source?: Maybe<Scalars['String']>;\n  tabs?: Maybe<Array<Maybe<CourseTab>>>;\n  tags?: Maybe<Array<Maybe<Tag>>>;\n  title?: Maybe<Scalars['String']>;\n  videoAsset?: Maybe<Scalars['String']>;\n};\n\nexport enum CourseGroupKind {\n  Article = 'article',\n  CourseGroup = 'courseGroup',\n  InPersonEvent = 'inPersonEvent',\n  InPersonEventCourse = 'inPersonEventCourse',\n  MicroCourse = 'microCourse',\n  ShareableContentObject = 'shareableContentObject',\n  Video = 'video',\n  Webinar = 'webinar',\n  WebinarCourse = 'webinarCourse',\n  XApiObject = 'xApiObject'\n}\n\nexport type CourseTab = {\n  __typename?: 'CourseTab';\n  body?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['ID']>;\n  instructors?: Maybe<Array<Maybe<Instructor>>>;\n  label?: Maybe<Scalars['String']>;\n  products?: Maybe<Array<Maybe<Product>>>;\n  sections?: Maybe<Array<Maybe<Section>>>;\n  tabType?: Maybe<Scalars['String']>;\n  testimonials?: Maybe<Array<Maybe<Testimonial>>>;\n};\n\nexport type CustomField = {\n  __typename?: 'CustomField';\n  id: Scalars['ID'];\n  includeLabelOnContent: Scalars['Boolean'];\n  includeValueOnContent: Scalars['Boolean'];\n  indexed: Scalars['Boolean'];\n  label: Scalars['String'];\n  multiple: Scalars['Boolean'];\n  slug: Scalars['Slug'];\n  sort?: Maybe<Scalars['String']>;\n};\n\nexport type DateRange = {\n  __typename?: 'DateRange';\n  endDate?: Maybe<Scalars['Date']>;\n  startDate?: Maybe<Scalars['Date']>;\n};\n\nexport type DisplayBundle = {\n  __typename?: 'DisplayBundle';\n  annualPlanId?: Maybe<Scalars['ID']>;\n  annualPriceInCents?: Maybe<Scalars['Int']>;\n  asset?: Maybe<Scalars['URL']>;\n  id?: Maybe<Scalars['ID']>;\n  name?: Maybe<Scalars['String']>;\n  planId?: Maybe<Scalars['ID']>;\n  priceInCents?: Maybe<Scalars['Int']>;\n  slug: Scalars['Slug'];\n};\n\nexport type EmailLayoutSettings = {\n  __typename?: 'EmailLayoutSettings';\n  bccAddress?: Maybe<Scalars['String']>;\n  emailCaptureTerms?: Maybe<Scalars['String']>;\n  footer?: Maybe<Scalars['String']>;\n  fromAddress?: Maybe<Scalars['String']>;\n  fromName?: Maybe<Scalars['String']>;\n  header?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n};\n\nexport type ExpandableListItem = {\n  __typename?: 'ExpandableListItem';\n  altText?: Maybe<Scalars['String']>;\n  asset?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  title: Scalars['String'];\n};\n\nexport type FlipCardPage = PageEntity & {\n  __typename?: 'FlipCardPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  caption?: Maybe<Scalars['String']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  flipCards: Array<FlipCards>;\n  gridLayout?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  sidebarIsHidden?: Maybe<Scalars['Boolean']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type FlipCards = {\n  __typename?: 'FlipCards';\n  altText?: Maybe<Scalars['String']>;\n  asset: Scalars['String'];\n  backgroundColor?: Maybe<Scalars['String']>;\n  cardType?: Maybe<Scalars['String']>;\n  description: Scalars['String'];\n  frontText?: Maybe<Scalars['String']>;\n  textColor?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type GlobalNavigationLink = {\n  __typename?: 'GlobalNavigationLink';\n  href?: Maybe<Scalars['String']>;\n  label: Scalars['String'];\n};\n\nexport type InPersonEventInfo = {\n  __typename?: 'InPersonEventInfo';\n  heroAsset?: Maybe<Scalars['URL']>;\n  subtitle?: Maybe<Scalars['String']>;\n};\n\nexport type Instructor = {\n  __typename?: 'Instructor';\n  asset?: Maybe<Scalars['URL']>;\n  bio?: Maybe<Scalars['String']>;\n  fullName?: Maybe<Scalars['String']>;\n};\n\nexport type ItemPrice = {\n  __typename?: 'ItemPrice';\n  annualPriceInCents?: Maybe<Scalars['Int']>;\n  currencyCode: Scalars['String'];\n  id: Scalars['ID'];\n  instructorAccessPriceInCents?: Maybe<Scalars['Int']>;\n  priceInCents?: Maybe<Scalars['Int']>;\n  suggestedRetailPriceInCents?: Maybe<Scalars['Int']>;\n  variations: Array<ItemPriceVariation>;\n};\n\nexport type ItemPriceVariation = {\n  __typename?: 'ItemPriceVariation';\n  label: Scalars['String'];\n  priceInCents: Scalars['Int'];\n};\n\nexport type Language = {\n  __typename?: 'Language';\n  code: Scalars['String'];\n  id?: Maybe<Scalars['ID']>;\n  isCustom?: Maybe<Scalars['Boolean']>;\n  label: Scalars['String'];\n  selectorLabel?: Maybe<Scalars['String']>;\n};\n\nexport type Layout = {\n  __typename?: 'Layout';\n  hasEnrollmentWidget: Scalars['Boolean'];\n  id: Scalars['ID'];\n  kind?: Maybe<LayoutKind>;\n  scripts?: Maybe<Scalars['String']>;\n  widgets?: Maybe<Scalars['JSON']>;\n};\n\nexport enum LayoutKind {\n  InPersonEventLayout = 'InPersonEventLayout',\n  ArticleLayout = 'articleLayout',\n  BundleSidebarLayout = 'bundleSidebarLayout',\n  CatalogLayout = 'catalogLayout',\n  CourseDetailSidebarLayout = 'courseDetailSidebarLayout',\n  DashboardLayout = 'dashboardLayout',\n  DiscountGroupSidebarLayout = 'discountGroupSidebarLayout',\n  HomepageLayout = 'homepageLayout',\n  LearningPathLearnerLayout = 'learningPathLearnerLayout',\n  LearningPathSidebarLayout = 'learningPathSidebarLayout',\n  PageLayout = 'pageLayout',\n  PickableGroupSidebarLayout = 'pickableGroupSidebarLayout',\n  ProductSidebarLayout = 'productSidebarLayout',\n  RedemptionLayout = 'redemptionLayout',\n  RegistrationLayout = 'registrationLayout',\n  SupportLayout = 'supportLayout',\n  TranscriptLayout = 'transcriptLayout'\n}\n\nexport type LearningPath = {\n  __typename?: 'LearningPath';\n  accessDays?: Maybe<Scalars['Int']>;\n  alternativePricingRef?: Maybe<Scalars['Int']>;\n  alternativePricingType?: Maybe<AlternativePricingType>;\n  asset?: Maybe<Scalars['URL']>;\n  authors?: Maybe<Array<Scalars['String']>>;\n  availabilityStatus?: Maybe<Scalars['String']>;\n  bulkPurchasingEnabled: Scalars['Boolean'];\n  client?: Maybe<Client>;\n  confirmationHtml?: Maybe<Scalars['String']>;\n  contentType?: Maybe<Scalars['String']>;\n  createdAt?: Maybe<Scalars['Date']>;\n  currentUserEarnedCertificate: Scalars['Boolean'];\n  currentUserPendingCertificate: Scalars['Boolean'];\n  currentUserStartActionDate?: Maybe<Scalars['Date']>;\n  customFields?: Maybe<Scalars['JSON']>;\n  detailAsset?: Maybe<Scalars['URL']>;\n  endDate?: Maybe<Scalars['Date']>;\n  enrollmentEndDate?: Maybe<Scalars['Date']>;\n  enrollmentStartDate?: Maybe<Scalars['Date']>;\n  externalDetailUrl?: Maybe<Scalars['String']>;\n  freeWithRegistration?: Maybe<Scalars['Boolean']>;\n  fulfillmentCenter?: Maybe<Scalars['ID']>;\n  futurePublishDate?: Maybe<Scalars['Date']>;\n  hasMultipleCurrencies: Scalars['Boolean'];\n  heroAsset?: Maybe<Scalars['URL']>;\n  id: Scalars['ID'];\n  isPayAsYouGo?: Maybe<Scalars['Boolean']>;\n  kind?: Maybe<Scalars['String']>;\n  language?: Maybe<Scalars['String']>;\n  lastTierPriceInCents?: Maybe<Scalars['Int']>;\n  layout?: Maybe<Layout>;\n  layoutId?: Maybe<Scalars['ID']>;\n  learnerLayout?: Maybe<Layout>;\n  learnerLayoutId?: Maybe<Scalars['ID']>;\n  longDescription?: Maybe<Scalars['String']>;\n  metaDescription?: Maybe<Scalars['String']>;\n  metaTitle?: Maybe<Scalars['String']>;\n  milestones?: Maybe<Array<Maybe<Milestone>>>;\n  name: Scalars['String'];\n  prerequisiteCourses?: Maybe<Array<Maybe<Course>>>;\n  prerequisiteLearningPaths?: Maybe<Array<Maybe<LearningPath>>>;\n  priceInCents?: Maybe<Scalars['Int']>;\n  prices: Array<ItemPrice>;\n  publishDate?: Maybe<Scalars['Date']>;\n  purchasable: Scalars['Boolean'];\n  relatedQuery?: Maybe<Scalars['String']>;\n  relatedQuerySignature?: Maybe<Scalars['String']>;\n  resourceType: Scalars['String'];\n  ribbon?: Maybe<Ribbon>;\n  seatPackages?: Maybe<Array<SeatPackage>>;\n  seatTiers?: Maybe<Array<SeatTier>>;\n  seatsLimit?: Maybe<Scalars['Int']>;\n  shortDescription?: Maybe<Scalars['String']>;\n  sku?: Maybe<Scalars['String']>;\n  slug: Scalars['Slug'];\n  source?: Maybe<Scalars['String']>;\n  startDate?: Maybe<Scalars['Date']>;\n  status: Status;\n  suggestedRetailPriceInCents?: Maybe<Scalars['Int']>;\n  tabs?: Maybe<LearningPathTabs>;\n  tags?: Maybe<Array<Maybe<Tag>>>;\n  taxCategory?: Maybe<Scalars['ID']>;\n  taxable?: Maybe<Scalars['Boolean']>;\n  updatedAt?: Maybe<Scalars['Date']>;\n  videoAsset?: Maybe<Scalars['ID']>;\n};\n\nexport type LearningPathTab = {\n  __typename?: 'LearningPathTab';\n  body?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  instructors?: Maybe<Array<Maybe<Instructor>>>;\n  label?: Maybe<Scalars['String']>;\n  products?: Maybe<Array<Maybe<Product>>>;\n  tabType?: Maybe<Scalars['String']>;\n};\n\nexport type LearningPathTabs = {\n  __typename?: 'LearningPathTabs';\n  generated?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  tabs?: Maybe<Array<LearningPathTab>>;\n};\n\nexport type Lesson = {\n  __typename?: 'Lesson';\n  accessLevel?: Maybe<AccessLevel>;\n  id: Scalars['ID'];\n  section?: Maybe<Section>;\n  slug: Scalars['Slug'];\n  slugOrId?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  topics: Array<PageResource>;\n};\n\nexport type License = {\n  __typename?: 'License';\n  accessDays?: Maybe<Scalars['Int']>;\n  appearance?: Maybe<AppearanceSettings>;\n  childLicenses?: Maybe<Array<License>>;\n  client?: Maybe<Client>;\n  courseIds?: Maybe<Array<Scalars['ID']>>;\n  courseTagIds?: Maybe<Array<Scalars['ID']>>;\n  courseTags?: Maybe<Array<Tag>>;\n  courses?: Maybe<Array<Course>>;\n  createdAt?: Maybe<Scalars['Date']>;\n  dashboardLayoutId?: Maybe<Scalars['ID']>;\n  enableBranding?: Maybe<Scalars['Boolean']>;\n  expirationDate?: Maybe<Scalars['Date']>;\n  id: Scalars['ID'];\n  isDefault?: Maybe<Scalars['Boolean']>;\n  label?: Maybe<Scalars['String']>;\n  learningPathIds?: Maybe<Array<Scalars['ID']>>;\n  learningPaths?: Maybe<Array<LearningPath>>;\n  name: Scalars['String'];\n  parentLicense?: Maybe<License>;\n  parentLicenseId?: Maybe<Scalars['ID']>;\n  ref1?: Maybe<Scalars['String']>;\n  ref2?: Maybe<Scalars['String']>;\n  ref3?: Maybe<Scalars['String']>;\n  ref4?: Maybe<Scalars['String']>;\n  ref5?: Maybe<Scalars['String']>;\n  ref6?: Maybe<Scalars['String']>;\n  ref7?: Maybe<Scalars['String']>;\n  ref8?: Maybe<Scalars['String']>;\n  ref9?: Maybe<Scalars['String']>;\n  ref10?: Maybe<Scalars['String']>;\n  schoolName?: Maybe<Scalars['String']>;\n  seatsLimit?: Maybe<Scalars['Int']>;\n  sku?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['Date']>;\n};\n\nexport type LicenseNode = {\n  __typename?: 'LicenseNode';\n  ancestorIds?: Maybe<Array<Scalars['ID']>>;\n  createdAt?: Maybe<Scalars['Date']>;\n  depth: Scalars['Int'];\n  hierarchicalName: Scalars['String'];\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  parentLicenseId?: Maybe<Scalars['ID']>;\n};\n\nexport type ListRollPage = PageEntity & {\n  __typename?: 'ListRollPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  description?: Maybe<Scalars['String']>;\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  expandableLists: Array<ExpandableListItem>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type Location = {\n  __typename?: 'Location';\n  address1: Scalars['String'];\n  address2?: Maybe<Scalars['String']>;\n  city: Scalars['String'];\n  country?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  room?: Maybe<Scalars['String']>;\n  state?: Maybe<Scalars['String']>;\n  timeZone?: Maybe<Scalars['String']>;\n  zipCode?: Maybe<Scalars['String']>;\n};\n\nexport type Marker = {\n  __typename?: 'Marker';\n  seconds: Scalars['Int'];\n  text: Scalars['String'];\n};\n\nexport type MatchPairPage = PageEntity & {\n  __typename?: 'MatchPairPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  matchPairs: Array<MatchPairs>;\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  sidebarIsHidden?: Maybe<Scalars['Boolean']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type MatchPairs = {\n  __typename?: 'MatchPairs';\n  asset: Scalars['String'];\n  caption: Scalars['String'];\n  clue: Scalars['String'];\n  label: Scalars['String'];\n};\n\nexport type Meeting = {\n  __typename?: 'Meeting';\n  attendeeInfo?: Maybe<Scalars['String']>;\n  attendees?: Maybe<Array<User>>;\n  course: Course;\n  courseId: Scalars['ID'];\n  endDate: Scalars['Date'];\n  id: Scalars['ID'];\n  instructors?: Maybe<Array<Scalars['String']>>;\n  location?: Maybe<Location>;\n  locationId?: Maybe<Scalars['ID']>;\n  startDate: Scalars['Date'];\n  timeZone?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type MeetingPage = PageEntity & {\n  __typename?: 'MeetingPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  meeting?: Maybe<Scalars['String']>;\n  meetingAttendeeInfo?: Maybe<Scalars['String']>;\n  meetingSubtitle?: Maybe<Scalars['String']>;\n  meetingTitle?: Maybe<Scalars['String']>;\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  preventProgression?: Maybe<Scalars['Boolean']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type MicrositeBlock = {\n  __typename?: 'MicrositeBlock';\n  html?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  links?: Maybe<Array<MicrositeBlockLink>>;\n};\n\nexport type MicrositeBlockLink = {\n  __typename?: 'MicrositeBlockLink';\n  asset?: Maybe<Scalars['String']>;\n  href: Scalars['String'];\n  label: Scalars['String'];\n};\n\nexport type Milestone = {\n  __typename?: 'Milestone';\n  completionCriteria?: Maybe<Array<MilestoneCompletionCriteria>>;\n  completionCriteriaDescription?: Maybe<Scalars['String']>;\n  contentItems?: Maybe<Array<Content>>;\n  id: Scalars['ID'];\n  kind: MilestoneKind;\n  learningPath: LearningPath;\n  milestoneCompetencyAssessment?: Maybe<MilestoneCompetencyAssessment>;\n  milestoneCourses?: Maybe<Array<MilestoneCourse>>;\n  name: Scalars['String'];\n  releaseDate?: Maybe<Scalars['Date']>;\n  releaseDays?: Maybe<Scalars['Int']>;\n  requirement: MilestoneRequirement;\n};\n\nexport type MilestoneCompetencyAssessment = {\n  __typename?: 'MilestoneCompetencyAssessment';\n  allowRetakes?: Maybe<Scalars['Boolean']>;\n  asset?: Maybe<Scalars['String']>;\n  buttonText?: Maybe<Scalars['String']>;\n  competencyAssessment?: Maybe<CompetencyAssessment>;\n  competencyAssessmentId: Scalars['ID'];\n  displayType: MilestoneCompetencyAssessmentDisplayType;\n  id: Scalars['ID'];\n  largeAsset?: Maybe<Scalars['String']>;\n  passingScoreRequired?: Maybe<Scalars['Boolean']>;\n  requirement?: Maybe<MilestoneRequirement>;\n  smallAsset?: Maybe<Scalars['String']>;\n  subtitle?: Maybe<Scalars['String']>;\n  title: Scalars['String'];\n  type: MilestoneCompetencyAssessmentType;\n};\n\nexport enum MilestoneCompetencyAssessmentDisplayType {\n  Image = 'image',\n  Text = 'text'\n}\n\nexport enum MilestoneCompetencyAssessmentType {\n  Assessment = 'assessment',\n  DynamicContent = 'dynamicContent'\n}\n\nexport type MilestoneCompletionCriteria = {\n  __typename?: 'MilestoneCompletionCriteria';\n  awardType?: Maybe<AwardType>;\n  id: Scalars['ID'];\n  threshold: Scalars['Int'];\n  type: MilestoneCompletionCriteriaType;\n};\n\nexport enum MilestoneCompletionCriteriaType {\n  /** Require learner to earn an award */\n  Award = 'award',\n  /** Require learner to complete a certain number of electives */\n  Electives = 'electives',\n  /** Required Competency Assessment */\n  RequiredCompetencyAssessmentsAssessment = 'requiredCompetencyAssessmentsAssessment',\n  /** Required Competency Assessment with dynamic content */\n  RequiredCompetencyAssessmentsDynamicContent = 'requiredCompetencyAssessmentsDynamicContent',\n  /** Required Competency Assessment with passing score */\n  RequiredCompetencyAssessmentsPassingScore = 'requiredCompetencyAssessmentsPassingScore',\n  /** Required Content (auto-generated, not selectable) */\n  RequiredCourses = 'requiredCourses'\n}\n\nexport enum MilestoneContentGrouping {\n  Course = 'course',\n  CourseGroup = 'courseGroup'\n}\n\nexport type MilestoneCourse = {\n  __typename?: 'MilestoneCourse';\n  altDescriptionBody?: Maybe<Scalars['String']>;\n  contentGrouping: MilestoneContentGrouping;\n  contentId: Scalars['ID'];\n  contentTitle: Scalars['String'];\n  hideCourseDescription: Scalars['Boolean'];\n  id: Scalars['ID'];\n  requirement: MilestoneRequirement;\n};\n\nexport enum MilestoneKind {\n  CompetencyAssessment = 'competencyAssessment',\n  Content = 'content'\n}\n\nexport enum MilestoneRequirement {\n  /** Elective */\n  Elective = 'elective',\n  /** Required */\n  Required = 'required'\n}\n\nexport type Organization = {\n  __typename?: 'Organization';\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type PdfViewerPage = PageEntity & {\n  __typename?: 'PDFViewerPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  asset?: Maybe<Scalars['String']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  fileDownloadDisabled?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  printDisabled?: Maybe<Scalars['Boolean']>;\n  searchDisabled?: Maybe<Scalars['Boolean']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type PageEntity = {\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type PageResource =\n  | ArticlePage\n  | AssignmentPage\n  | AudioPage\n  | FlipCardPage\n  | ListRollPage\n  | MatchPairPage\n  | MeetingPage\n  | PdfViewerPage\n  | PresentationPage\n  | QuizPage\n  | ScormPage\n  | SlideshowPage\n  | SurveyPage\n  | TallyPage\n  | TestPage\n  | TextPage\n  | VideoPage\n  | WorkbookPage;\n\nexport type PresentationPage = PageEntity & {\n  __typename?: 'PresentationPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  client?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  company: Scalars['String'];\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lesson?: Maybe<Scalars['String']>;\n  lessonId: Scalars['ID'];\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  showSidebar?: Maybe<Scalars['Boolean']>;\n  slides: Array<Slides>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type Product = {\n  __typename?: 'Product';\n  alternativePricingRef?: Maybe<Scalars['Int']>;\n  alternativePricingType?: Maybe<AlternativePricingType>;\n  asset?: Maybe<Scalars['URL']>;\n  id: Scalars['ID'];\n  language?: Maybe<Scalars['String']>;\n  longDescription?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  priceInCents?: Maybe<Scalars['Int']>;\n  purchasable?: Maybe<Scalars['Boolean']>;\n  relatedProducts?: Maybe<Array<Maybe<Product>>>;\n  status?: Maybe<Status>;\n  suggestedRetailPriceInCents?: Maybe<Scalars['Int']>;\n};\n\nexport type PurchasedBundle = {\n  __typename?: 'PurchasedBundle';\n  bundle?: Maybe<Bundle>;\n  bundleId: Scalars['ID'];\n};\n\nexport type PurchasedCourse = {\n  __typename?: 'PurchasedCourse';\n  certificate?: Maybe<Scalars['ID']>;\n  certificateIssuedAt?: Maybe<Scalars['Date']>;\n  course?: Maybe<Course>;\n  courseId: Scalars['ID'];\n  instructorAccessPurchased?: Maybe<Scalars['Boolean']>;\n  status: Scalars['String'];\n};\n\nexport type QuestionChoice = {\n  __typename?: 'QuestionChoice';\n  altText?: Maybe<Scalars['String']>;\n  asset?: Maybe<Scalars['String']>;\n  choiceId?: Maybe<Scalars['String']>;\n  correct: Scalars['Boolean'];\n  points?: Maybe<Scalars['Int']>;\n  response?: Maybe<Scalars['String']>;\n  value?: Maybe<Scalars['String']>;\n};\n\nexport enum QuestionDisplayOption {\n  Always = 'always',\n  AssessmentOnly = 'assessmentOnly',\n  ResultsOnly = 'resultsOnly'\n}\n\nexport type QuestionTable = {\n  __typename?: 'QuestionTable';\n  headers?: Maybe<Array<QuestionTableCell>>;\n  rows?: Maybe<Array<Maybe<Array<QuestionTableCell>>>>;\n};\n\nexport type QuestionTableCell = {\n  __typename?: 'QuestionTableCell';\n  locked: Scalars['Boolean'];\n  value?: Maybe<Scalars['String']>;\n  weight?: Maybe<Scalars['String']>;\n};\n\nexport type QuizPage = AssessmentPageEntity &\n  PageEntity & {\n    __typename?: 'QuizPage';\n    accessibilityAudioAsset?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n    allowToResume?: Maybe<Scalars['Boolean']>;\n    catalogAsset?: Maybe<Scalars['String']>;\n    clientId?: Maybe<Scalars['ID']>;\n    companyId: Scalars['ID'];\n    completionTimeSeconds?: Maybe<Scalars['Int']>;\n    contentDescription?: Maybe<Scalars['String']>;\n    contentEstimate?: Maybe<Scalars['String']>;\n    contentTime?: Maybe<Scalars['String']>;\n    continueAfterTimerExpires?: Maybe<Scalars['Boolean']>;\n    createdAt: Scalars['Date'];\n    displayAllHints?: Maybe<Scalars['Boolean']>;\n    displayAttemptNumbers?: Maybe<Scalars['Int']>;\n    editableByChildren?: Maybe<Scalars['Boolean']>;\n    failMessage?: Maybe<Scalars['String']>;\n    hintControlEnabled?: Maybe<Scalars['Boolean']>;\n    id: Scalars['ID'];\n    indentationLevel?: Maybe<Scalars['Int']>;\n    instructorAssessment?: Maybe<Scalars['Boolean']>;\n    isGraded?: Maybe<Scalars['Boolean']>;\n    lessonId: Scalars['ID'];\n    maxAttempts?: Maybe<Scalars['Int']>;\n    minPassingPercent?: Maybe<Scalars['Int']>;\n    navigationDisabled?: Maybe<Scalars['Boolean']>;\n    passMessage?: Maybe<Scalars['String']>;\n    preventProgression?: Maybe<Scalars['Boolean']>;\n    questionSkipEnabled?: Maybe<Scalars['Boolean']>;\n    questions: Array<QuizQuestion>;\n    showAnswerAfterPass?: Maybe<Scalars['Boolean']>;\n    startMessage?: Maybe<Scalars['String']>;\n    timeLimitInSeconds?: Maybe<Scalars['Int']>;\n    timePerQuestionInSeconds?: Maybe<Scalars['Int']>;\n    timerEnabled?: Maybe<Scalars['Boolean']>;\n    title?: Maybe<Scalars['String']>;\n    type: TopicType;\n    updatedAt: Scalars['Date'];\n  };\n\nexport type QuizQuestion = {\n  __typename?: 'QuizQuestion';\n  addAndDeleteRowsEnabled?: Maybe<Scalars['Boolean']>;\n  additionalContent?: Maybe<Scalars['String']>;\n  body?: Maybe<Scalars['String']>;\n  choices?: Maybe<Array<QuestionChoice>>;\n  copyAnswerFromAssessmentId?: Maybe<Scalars['String']>;\n  copyAnswerFromQuestionId?: Maybe<Scalars['String']>;\n  displayOption?: Maybe<QuestionDisplayOption>;\n  fileSubmissionAsset?: Maybe<Scalars['String']>;\n  gradedAsCorrect?: Maybe<Scalars['Boolean']>;\n  hasChoices?: Maybe<Scalars['Boolean']>;\n  isBooleanChoice?: Maybe<Scalars['Boolean']>;\n  isBooleanChoiceOrMultipleChoice?: Maybe<Scalars['Boolean']>;\n  isEssay?: Maybe<Scalars['Boolean']>;\n  isFileSubmission?: Maybe<Scalars['Boolean']>;\n  isImageComparison?: Maybe<Scalars['Boolean']>;\n  isLikert?: Maybe<Scalars['Boolean']>;\n  isMultipleChoice?: Maybe<Scalars['Boolean']>;\n  isOpenEnded?: Maybe<Scalars['Boolean']>;\n  isOpenEndedOrEssay: Scalars['Boolean'];\n  isSelectBoxes?: Maybe<Scalars['Boolean']>;\n  isTable?: Maybe<Scalars['Boolean']>;\n  mustSelectAllCorrectChoices?: Maybe<Scalars['Boolean']>;\n  openEndedResponse?: Maybe<Scalars['String']>;\n  parentQuestion?: Maybe<Scalars['String']>;\n  placeholder?: Maybe<Scalars['String']>;\n  postText?: Maybe<Scalars['String']>;\n  postText2?: Maybe<Scalars['String']>;\n  postTextDisplayOption?: Maybe<QuestionDisplayOption>;\n  postTextDisplayOption2?: Maybe<QuestionDisplayOption>;\n  preText?: Maybe<Scalars['String']>;\n  preText2?: Maybe<Scalars['String']>;\n  preTextDisplayOption?: Maybe<QuestionDisplayOption>;\n  preTextDisplayOption2?: Maybe<QuestionDisplayOption>;\n  preselectedChoices?: Maybe<Array<QuestionChoice>>;\n  questionCategoryId?: Maybe<Scalars['ID']>;\n  questionId?: Maybe<Scalars['String']>;\n  questionType?: Maybe<Scalars['String']>;\n  required?: Maybe<Scalars['Boolean']>;\n  response?: Maybe<Scalars['String']>;\n  scormInteractionType?: Maybe<Scalars['String']>;\n  selectedChoice?: Maybe<QuestionChoice>;\n  selectedChoiceOrNoChoiceAvailable?: Maybe<Scalars['Boolean']>;\n  shouldCheckAnswers?: Maybe<Scalars['Boolean']>;\n  shouldDisplayOnResults?: Maybe<Scalars['Boolean']>;\n  table?: Maybe<QuestionTable>;\n  tableResponse?: Maybe<QuestionTable>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type Resource = {\n  __typename?: 'Resource';\n  id: Scalars['ID'];\n  type: Scalars['String'];\n};\n\nexport type Ribbon = {\n  __typename?: 'Ribbon';\n  color?: Maybe<Scalars['String']>;\n  contrastColor?: Maybe<Scalars['String']>;\n  darkerColor?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  slug: Scalars['Slug'];\n};\n\nexport type RootLayout = {\n  __typename?: 'RootLayout';\n  favicon?: Maybe<Scalars['String']>;\n  footerScripts?: Maybe<Scalars['String']>;\n  headerScripts?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n};\n\nexport type RssItem = {\n  __typename?: 'RssItem';\n  author?: Maybe<Scalars['String']>;\n  categories: Array<Scalars['String']>;\n  date?: Maybe<Scalars['Date']>;\n  description?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  imageAltTitle?: Maybe<Scalars['String']>;\n  imageUrl?: Maybe<Scalars['String']>;\n  link?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type SsoAttributeMapping = {\n  __typename?: 'SSOAttributeMapping';\n  keyAttribute?: Maybe<Scalars['String']>;\n  keyName: Scalars['String'];\n};\n\nexport type SsoSettings = {\n  __typename?: 'SSOSettings';\n  bundle?: Maybe<Bundle>;\n  bundleId?: Maybe<Scalars['ID']>;\n  casAttributeMappings?: Maybe<Array<Maybe<SsoAttributeMapping>>>;\n  casServerUrl?: Maybe<Scalars['URL']>;\n  externalEcommerceUrl?: Maybe<Scalars['URL']>;\n  externalLoginUrl?: Maybe<Scalars['URL']>;\n  externalLogoutUrl?: Maybe<Scalars['URL']>;\n  externalProfileUrl?: Maybe<Scalars['URL']>;\n  externalRegisterUrl?: Maybe<Scalars['URL']>;\n  hasOpenIdClientSecret: Scalars['Boolean'];\n  id: Scalars['ID'];\n  openIdAttributeMappings?: Maybe<Array<Maybe<SsoAttributeMapping>>>;\n  openIdAuthorizationParameters?: Maybe<Scalars['JSON']>;\n  openIdAuthorizationUrl?: Maybe<Scalars['URL']>;\n  openIdClientId?: Maybe<Scalars['String']>;\n  openIdClientSecret?: Maybe<Scalars['String']>;\n  openIdEndSessionUrl?: Maybe<Scalars['URL']>;\n  openIdIssuer?: Maybe<Scalars['URL']>;\n  openIdSigningAlgorithm?: Maybe<Scalars['String']>;\n  openIdTokenUrl?: Maybe<Scalars['URL']>;\n  openIdUserInfoUrl?: Maybe<Scalars['URL']>;\n  openIdWellKnownUrl?: Maybe<Scalars['URL']>;\n  samlAllowUnencryptedAssertions?: Maybe<Scalars['Boolean']>;\n  samlAttributeMappings?: Maybe<Array<Maybe<SsoAttributeMapping>>>;\n  samlForceReAuth?: Maybe<Scalars['Boolean']>;\n  samlIdpCertificate?: Maybe<Scalars['String']>;\n  samlSignRequests?: Maybe<Scalars['Boolean']>;\n  samlSingleLogoutUrl?: Maybe<Scalars['URL']>;\n  samlSingleSignonUrl?: Maybe<Scalars['URL']>;\n};\n\nexport type ScormPage = PageEntity & {\n  __typename?: 'ScormPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  centralLibraryItemId?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  directoryEntryPoint?: Maybe<Scalars['String']>;\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  embeddedEnabled?: Maybe<Scalars['Boolean']>;\n  enabledRevertProgress?: Maybe<Scalars['Boolean']>;\n  fullscreenEmbed?: Maybe<Scalars['Boolean']>;\n  height?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  isCentralLibraryItem?: Maybe<Scalars['Boolean']>;\n  lessonId: Scalars['ID'];\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  preventProgression?: Maybe<Scalars['Boolean']>;\n  resetSessionAfterComplete?: Maybe<Scalars['Boolean']>;\n  scoTitle?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n  useProxy?: Maybe<Scalars['Boolean']>;\n  width?: Maybe<Scalars['Int']>;\n};\n\nexport type SeatPackage = {\n  __typename?: 'SeatPackage';\n  seats: Scalars['Int'];\n};\n\nexport type SeatTier = {\n  __typename?: 'SeatTier';\n  priceInCents: Scalars['Int'];\n  seats: Scalars['Int'];\n};\n\nexport type Section = {\n  __typename?: 'Section';\n  id: Scalars['ID'];\n  lessons?: Maybe<Array<Maybe<Lesson>>>;\n  slug: Scalars['Slug'];\n  status?: Maybe<Status>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type Slides = {\n  __typename?: 'Slides';\n  altText?: Maybe<Scalars['String']>;\n  asset: Scalars['String'];\n  audioAsset?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  timeSeconds?: Maybe<Scalars['Int']>;\n  title?: Maybe<Scalars['String']>;\n  unrestrictedHeight: Scalars['Boolean'];\n};\n\nexport type SlideshowPage = PageEntity & {\n  __typename?: 'SlideshowPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  showSidebar?: Maybe<Scalars['Boolean']>;\n  slides: Array<Slides>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport enum SortColumn {\n  CourseStartDate = 'courseStartDate',\n  CreatedAt = 'createdAt',\n  DisplayDate = 'displayDate',\n  Label = 'label',\n  LastActiveAt = 'lastActiveAt',\n  Name = 'name',\n  ParentName = 'parentName',\n  PublishDate = 'publishDate',\n  Relevance = 'relevance',\n  Title = 'title',\n  UpdatedAt = 'updatedAt'\n}\n\nexport enum SortDirection {\n  Asc = 'asc',\n  Desc = 'desc'\n}\n\nexport enum Status {\n  Archived = 'archived',\n  Authoring = 'authoring',\n  Deleted = 'deleted',\n  Draft = 'draft',\n  LoginRestriction = 'loginRestriction',\n  Pending = 'pending',\n  Published = 'published'\n}\n\nexport type SurveyPage = AssessmentPageEntity &\n  PageEntity & {\n    __typename?: 'SurveyPage';\n    accessibilityAudioAsset?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n    catalogAsset?: Maybe<Scalars['String']>;\n    clientId?: Maybe<Scalars['ID']>;\n    companyId: Scalars['ID'];\n    completionTimeSeconds?: Maybe<Scalars['Int']>;\n    contentDescription?: Maybe<Scalars['String']>;\n    contentEstimate?: Maybe<Scalars['String']>;\n    contentTime?: Maybe<Scalars['String']>;\n    createdAt: Scalars['Date'];\n    editableByChildren?: Maybe<Scalars['Boolean']>;\n    id: Scalars['ID'];\n    indentationLevel?: Maybe<Scalars['Int']>;\n    instructorAssessment?: Maybe<Scalars['Boolean']>;\n    isGraded?: Maybe<Scalars['Boolean']>;\n    lessonId: Scalars['ID'];\n    preventProgression?: Maybe<Scalars['Boolean']>;\n    questions: Array<QuizQuestion>;\n    resultsMessage?: Maybe<Scalars['String']>;\n    title?: Maybe<Scalars['String']>;\n    type: TopicType;\n    updatedAt: Scalars['Date'];\n  };\n\nexport type Tag = {\n  __typename?: 'Tag';\n  id: Scalars['ID'];\n  isFolder: Scalars['Boolean'];\n  label?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['Date']>;\n};\n\nexport type TallyPage = AssessmentPageEntity &\n  PageEntity & {\n    __typename?: 'TallyPage';\n    accessibilityAudioAsset?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n    altText?: Maybe<Scalars['String']>;\n    asset: Scalars['String'];\n    audioAsset?: Maybe<Scalars['String']>;\n    caption?: Maybe<Scalars['String']>;\n    catalogAsset?: Maybe<Scalars['String']>;\n    clientId?: Maybe<Scalars['ID']>;\n    companyId: Scalars['ID'];\n    completionTimeSeconds?: Maybe<Scalars['Int']>;\n    contentDescription?: Maybe<Scalars['String']>;\n    contentEstimate?: Maybe<Scalars['String']>;\n    contentTime?: Maybe<Scalars['String']>;\n    createdAt: Scalars['Date'];\n    displayAllHints?: Maybe<Scalars['Boolean']>;\n    editableByChildren?: Maybe<Scalars['Boolean']>;\n    id: Scalars['ID'];\n    indentationLevel?: Maybe<Scalars['Int']>;\n    instructorAssessment?: Maybe<Scalars['Boolean']>;\n    lessonId: Scalars['ID'];\n    questionSkipEnabled?: Maybe<Scalars['Boolean']>;\n    questions: Array<QuizQuestion>;\n    resultsMessage?: Maybe<Scalars['String']>;\n    scoreTiers: Array<TallyPageScoreTier>;\n    startMessage?: Maybe<Scalars['String']>;\n    timeSeconds?: Maybe<Scalars['Int']>;\n    title?: Maybe<Scalars['String']>;\n    type: TopicType;\n    unrestrictedHeight: Scalars['Boolean'];\n    updatedAt: Scalars['Date'];\n  };\n\nexport type TallyPageScoreTier = {\n  __typename?: 'TallyPageScoreTier';\n  body?: Maybe<Scalars['String']>;\n  lowerBound: Scalars['Int'];\n  title: Scalars['String'];\n  upperBound: Scalars['Int'];\n};\n\nexport type TestPage = AssessmentPageEntity &\n  PageEntity & {\n    __typename?: 'TestPage';\n    accessibilityAudioAsset?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n    allowToResume?: Maybe<Scalars['Boolean']>;\n    catalogAsset?: Maybe<Scalars['String']>;\n    clientId?: Maybe<Scalars['ID']>;\n    companyId: Scalars['ID'];\n    completionTimeSeconds?: Maybe<Scalars['Int']>;\n    contentDescription?: Maybe<Scalars['String']>;\n    contentEstimate?: Maybe<Scalars['String']>;\n    contentTime?: Maybe<Scalars['String']>;\n    continueAfterTimerExpires?: Maybe<Scalars['Boolean']>;\n    createdAt: Scalars['Date'];\n    editableByChildren?: Maybe<Scalars['Boolean']>;\n    failMessage?: Maybe<Scalars['String']>;\n    hideQuestionResults?: Maybe<Scalars['Boolean']>;\n    id: Scalars['ID'];\n    indentationLevel?: Maybe<Scalars['Int']>;\n    instructorAssessment?: Maybe<Scalars['Boolean']>;\n    isGraded?: Maybe<Scalars['Boolean']>;\n    lessonId: Scalars['ID'];\n    maxAttempts?: Maybe<Scalars['Int']>;\n    minPassingPercent?: Maybe<Scalars['Int']>;\n    passMessage?: Maybe<Scalars['String']>;\n    preventProgression?: Maybe<Scalars['Boolean']>;\n    questionSkipEnabled?: Maybe<Scalars['Boolean']>;\n    questions: Array<QuizQuestion>;\n    randomizeChoices: Scalars['Boolean'];\n    startMessage?: Maybe<Scalars['String']>;\n    subsetSize?: Maybe<Scalars['Int']>;\n    timeLimitInSeconds?: Maybe<Scalars['Int']>;\n    timePerQuestionInSeconds?: Maybe<Scalars['Int']>;\n    title?: Maybe<Scalars['String']>;\n    type: TopicType;\n    updatedAt: Scalars['Date'];\n  };\n\nexport type Testimonial = {\n  __typename?: 'Testimonial';\n  body?: Maybe<Scalars['String']>;\n  createdAt?: Maybe<Scalars['Date']>;\n  id?: Maybe<Scalars['ID']>;\n  rating?: Maybe<Scalars['Int']>;\n  user?: Maybe<User>;\n};\n\nexport enum TextAlignment {\n  Center = 'center',\n  Left = 'left'\n}\n\nexport type TextPage = PageEntity & {\n  __typename?: 'TextPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  body?: Maybe<Scalars['String']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  sidebarIsHidden: Scalars['Boolean'];\n  sidebarItems: Array<TextPageSidebar>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type TextPageSidebar = {\n  __typename?: 'TextPageSidebar';\n  adDimensions?: Maybe<Scalars['String']>;\n  adTargeting?: Maybe<Scalars['String']>;\n  adUnitId?: Maybe<Scalars['String']>;\n  altText?: Maybe<Scalars['String']>;\n  asset?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  videoAsset?: Maybe<Scalars['String']>;\n};\n\nexport type Topic = {\n  __typename?: 'Topic';\n  failMessage?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  originalId?: Maybe<Scalars['ID']>;\n  passMessage?: Maybe<Scalars['String']>;\n  postTextBlock?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  questionSkipEnabled?: Maybe<Scalars['Boolean']>;\n  quizQuestions?: Maybe<Array<Scalars['ID']>>;\n  resultsMessage?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt?: Maybe<Scalars['Date']>;\n};\n\nexport enum TopicType {\n  Ad = 'ad',\n  Article = 'article',\n  Assignment = 'assignment',\n  Audio = 'audio',\n  Bongo = 'bongo',\n  DiscussionBoard = 'discussionBoard',\n  Embed = 'embed',\n  FlipCardSet = 'flipCardSet',\n  HighlightZoneQuiz = 'highlightZoneQuiz',\n  HighlightZoneSet = 'highlightZoneSet',\n  Image = 'image',\n  InPersonEvent = 'inPersonEvent',\n  ListRoll = 'listRoll',\n  Lti = 'lti',\n  MatchPairSet = 'matchPairSet',\n  MeetingInfo = 'meetingInfo',\n  Notebook = 'notebook',\n  PdfViewer = 'pdfViewer',\n  Presentation = 'presentation',\n  Quiz = 'quiz',\n  Recipe = 'recipe',\n  ShareableContentObject = 'shareableContentObject',\n  Slideshow = 'slideshow',\n  SocialShareCardSet = 'socialShareCardSet',\n  Survey = 'survey',\n  SurveyGizmo = 'surveyGizmo',\n  Tally = 'tally',\n  Test = 'test',\n  Text = 'text',\n  Video = 'video',\n  Workbook = 'workbook',\n  XApiObject = 'xApiObject'\n}\n\nexport type User = {\n  __typename?: 'User';\n  abbreviatedName?: Maybe<Scalars['String']>;\n  accessedFlows?: Maybe<Array<Scalars['String']>>;\n  activeLicense?: Maybe<License>;\n  address1?: Maybe<Scalars['String']>;\n  address2?: Maybe<Scalars['String']>;\n  adminClients?: Maybe<Array<Maybe<Client>>>;\n  allocatedLearningPaths?: Maybe<Array<AllocatedLearningPath>>;\n  allocatedLicenses?: Maybe<Array<AllocatedLicense>>;\n  asset?: Maybe<Scalars['String']>;\n  attendedMeetings?: Maybe<Array<UserAttendedMeeting>>;\n  availableCoursesCount: Scalars['Int'];\n  balance?: Maybe<Scalars['Float']>;\n  bio?: Maybe<Scalars['String']>;\n  certificatesCount: Scalars['Int'];\n  city?: Maybe<Scalars['String']>;\n  client?: Maybe<Client>;\n  clientId?: Maybe<Scalars['ID']>;\n  collaborationsCount: Scalars['Int'];\n  completedCoursesCount: Scalars['Int'];\n  country?: Maybe<Scalars['String']>;\n  createdAt?: Maybe<Scalars['Date']>;\n  customFields?: Maybe<Scalars['JSON']>;\n  disabled: Scalars['Boolean'];\n  email?: Maybe<Scalars['String']>;\n  externalCustomerId?: Maybe<Scalars['ID']>;\n  firstName?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  invitedByName?: Maybe<Scalars['String']>;\n  lang?: Maybe<Scalars['String']>;\n  lastActiveAt?: Maybe<Scalars['Date']>;\n  lastInitial?: Maybe<Scalars['String']>;\n  lastName?: Maybe<Scalars['String']>;\n  learnerUserId?: Maybe<Scalars['ID']>;\n  managerUserId?: Maybe<Scalars['ID']>;\n  mustVerifyEmail: Scalars['Boolean'];\n  name?: Maybe<Scalars['String']>;\n  purchasedBundles?: Maybe<Array<PurchasedBundle>>;\n  purchasedCourses?: Maybe<Array<PurchasedCourse>>;\n  recommendedSlugs?: Maybe<Array<UserRecommendedSlug>>;\n  recommendedTags?: Maybe<Array<UserRecommendedTag>>;\n  ref1?: Maybe<Scalars['String']>;\n  ref2?: Maybe<Scalars['String']>;\n  ref3?: Maybe<Scalars['String']>;\n  ref4?: Maybe<Scalars['String']>;\n  ref5?: Maybe<Scalars['String']>;\n  ref6?: Maybe<Scalars['String']>;\n  ref7?: Maybe<Scalars['String']>;\n  ref8?: Maybe<Scalars['String']>;\n  ref9?: Maybe<Scalars['String']>;\n  ref10?: Maybe<Scalars['String']>;\n  roleKey?: Maybe<Scalars['String']>;\n  sfAccountId?: Maybe<Scalars['ID']>;\n  sfContactId?: Maybe<Scalars['ID']>;\n  shippingName?: Maybe<Scalars['String']>;\n  shouldHighlight: Scalars['Boolean'];\n  startedCoursesCount: Scalars['Int'];\n  state?: Maybe<Scalars['String']>;\n  stripeCustomerId?: Maybe<Scalars['ID']>;\n  telephone?: Maybe<Scalars['String']>;\n  twoFactorEnabled?: Maybe<Scalars['Boolean']>;\n  updatedAt?: Maybe<Scalars['Date']>;\n  waitlistedCourses?: Maybe<Array<WaitlistedCourse>>;\n  zipCode?: Maybe<Scalars['String']>;\n};\n\nexport type UserAttendedMeeting = {\n  __typename?: 'UserAttendedMeeting';\n  attendanceDate: Scalars['Date'];\n  meeting?: Maybe<Meeting>;\n  user: User;\n};\n\nexport type UserAwardCount = {\n  __typename?: 'UserAwardCount';\n  count?: Maybe<Scalars['Int']>;\n  icon?: Maybe<AwardTypeIcon>;\n  id: Scalars['ID'];\n  label?: Maybe<Scalars['String']>;\n};\n\nexport type UserCustomField = {\n  __typename?: 'UserCustomField';\n  choices?: Maybe<Scalars['JSON']>;\n  id: Scalars['ID'];\n  label: Scalars['String'];\n  ref?: Maybe<Scalars['Int']>;\n  required: Scalars['Boolean'];\n  slug: Scalars['Slug'];\n  type: UserCustomFieldType;\n};\n\nexport enum UserCustomFieldType {\n  /** Drop Down */\n  DropDown = 'dropDown',\n  /** Text Field */\n  SingleField = 'singleField',\n  /** Phone Number */\n  Telephone = 'telephone'\n}\n\nexport type UserProgress = {\n  __typename?: 'UserProgress';\n  percentComplete?: Maybe<Scalars['Int']>;\n  totalTime?: Maybe<Scalars['Int']>;\n  totalViews?: Maybe<Scalars['Int']>;\n};\n\nexport type UserRecommendedSlug = {\n  __typename?: 'UserRecommendedSlug';\n  boost: Scalars['Int'];\n  slug: Scalars['String'];\n};\n\nexport type UserRecommendedTag = {\n  __typename?: 'UserRecommendedTag';\n  boost: Scalars['Int'];\n  label: Scalars['String'];\n};\n\nexport type VideoPage = PageEntity & {\n  __typename?: 'VideoPage';\n  accessibilityAudioAsset?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n  accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n  asset?: Maybe<Scalars['String']>;\n  body?: Maybe<Scalars['String']>;\n  catalogAsset?: Maybe<Scalars['String']>;\n  clientId?: Maybe<Scalars['ID']>;\n  companyId: Scalars['ID'];\n  completionTimeSeconds?: Maybe<Scalars['Int']>;\n  contentDescription?: Maybe<Scalars['String']>;\n  contentEstimate?: Maybe<Scalars['String']>;\n  contentTime?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Date'];\n  editableByChildren?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  indentationLevel?: Maybe<Scalars['Int']>;\n  lessonId: Scalars['ID'];\n  markers: Array<Marker>;\n  postAsset?: Maybe<Scalars['String']>;\n  posterImageAsset?: Maybe<Scalars['String']>;\n  preAsset?: Maybe<Scalars['String']>;\n  preTextBlock?: Maybe<Scalars['String']>;\n  sidebarIsHidden?: Maybe<Scalars['Boolean']>;\n  title?: Maybe<Scalars['String']>;\n  type: TopicType;\n  updatedAt: Scalars['Date'];\n};\n\nexport type WaitlistedCourse = {\n  __typename?: 'WaitlistedCourse';\n  course?: Maybe<Course>;\n  courseId: Scalars['ID'];\n};\n\nexport type WebinarBlock = {\n  __typename?: 'WebinarBlock';\n  attendeeDialIn?: Maybe<Scalars['String']>;\n  coOrganizers?: Maybe<Array<Scalars['String']>>;\n  enableAutoRecording?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  joinUrl?: Maybe<Scalars['String']>;\n  organizerDialIn?: Maybe<Scalars['String']>;\n  originalWebinarDates?: Maybe<Array<WebinarDate>>;\n  recurrence?: Maybe<Scalars['JSON']>;\n  retrieveRecording?: Maybe<Scalars['Boolean']>;\n  timeZone?: Maybe<Scalars['String']>;\n  webexDescription?: Maybe<Scalars['String']>;\n  webexLabName?: Maybe<Scalars['String']>;\n  webexNumComputers?: Maybe<Scalars['Int']>;\n  webexReserveHOL?: Maybe<Scalars['Boolean']>;\n  webexSessionPassword?: Maybe<Scalars['String']>;\n  webinarDates?: Maybe<Array<WebinarDate>>;\n  webinarProvider: Scalars['String'];\n  webinarType?: Maybe<Scalars['String']>;\n};\n\nexport type WebinarDate = {\n  __typename?: 'WebinarDate';\n  endTime: Scalars['Date'];\n  goToTrainingKey?: Maybe<Scalars['String']>;\n  goToWebinarKey?: Maybe<Scalars['String']>;\n  meeting?: Maybe<Scalars['ID']>;\n  startTime: Scalars['Date'];\n  webexTrainingSessionKey?: Maybe<Scalars['String']>;\n  zoomOccurrenceKey?: Maybe<Scalars['String']>;\n};\n\nexport type WorkbookPage = AssessmentPageEntity &\n  PageEntity & {\n    __typename?: 'WorkbookPage';\n    accessibilityAudioAsset?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetTitle?: Maybe<Scalars['String']>;\n    accessibilityAudioAssetUrl?: Maybe<Scalars['AbsoluteOrRelativeURL']>;\n    catalogAsset?: Maybe<Scalars['String']>;\n    clientId?: Maybe<Scalars['ID']>;\n    companyId: Scalars['ID'];\n    completionTimeSeconds?: Maybe<Scalars['Int']>;\n    contentDescription?: Maybe<Scalars['String']>;\n    contentEstimate?: Maybe<Scalars['String']>;\n    contentTime?: Maybe<Scalars['String']>;\n    createdAt: Scalars['Date'];\n    editableByChildren?: Maybe<Scalars['Boolean']>;\n    id: Scalars['ID'];\n    indentationLevel?: Maybe<Scalars['Int']>;\n    instructorAssessment?: Maybe<Scalars['Boolean']>;\n    lessonId: Scalars['ID'];\n    linked?: Maybe<Scalars['Boolean']>;\n    preventProgression?: Maybe<Scalars['Boolean']>;\n    questions: Array<QuizQuestion>;\n    resultsMessage?: Maybe<Scalars['String']>;\n    startMessage?: Maybe<Scalars['String']>;\n    title?: Maybe<Scalars['String']>;\n    type: TopicType;\n    updatedAt: Scalars['Date'];\n  };\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nexport type ContentFragmentFragment = {\n  __typename?: 'Content';\n  alternativePricingType?: Types.AlternativePricingType;\n  asset?: string;\n  altDescriptionBody?: string;\n  alternativePricingRef?: number;\n  authors?: Array<string>;\n  authorsAndInstructors?: Array<string>;\n  availabilityStatus?: string;\n  bulkPurchasingEnabled?: boolean;\n  canAddToQueue?: boolean;\n  contentTypeAssetAspectRatio?: string;\n  contentTypeLabel?: string;\n  courseEndDate?: string;\n  courseGracePeriodEnded: boolean;\n  courseGroup?: string;\n  coursePresold: boolean;\n  courseStartDate?: string;\n  createdAt?: string;\n  currentUserMayReschedule: boolean;\n  currentUserUnmetCoursePrerequisites?: Array<string>;\n  currentUserUnmetLearningPathPrerequisites?: Array<string>;\n  customFields?: any;\n  description?: string;\n  displayCourse?: string;\n  displayCourseSlug?: string;\n  displayDate?: string;\n  embeddedEnabled?: boolean;\n  enrollmentCount?: number;\n  expiresAt?: string;\n  kind?: Types.ContentKind;\n  hasChildren: boolean;\n  hideCourseDescription: boolean;\n  id: string;\n  isActive: boolean;\n  language?: string;\n  meetingStartDate?: string;\n  metaDescription?: string;\n  metaTitle?: string;\n  priceInCents?: number;\n  publishDate?: string;\n  rating?: number;\n  seatsLimit?: number;\n  sessionTitle?: string;\n  status?: Types.Status;\n  sku?: string;\n  slug: string;\n  source?: string;\n  suggestedRetailPriceInCents?: number;\n  timeZone?: string;\n  title?: string;\n  updatedAt?: string;\n  waitlistCount?: number;\n  waitlistingEnabled: boolean;\n  waitlistingTriggered: boolean;\n  location?: {\n    __typename?: 'Location';\n    id: string;\n    name: string;\n    room?: string;\n    address1: string;\n    address2?: string;\n    city: string;\n    state?: string;\n    zipCode?: string;\n    country?: string;\n    timeZone?: string;\n  };\n  ribbon?: {\n    __typename?: 'Ribbon';\n    color?: string;\n    contrastColor?: string;\n    darkerColor?: string;\n    label?: string;\n    slug: string;\n  };\n};\n\nexport const ContentFragmentFragmentDoc = gql`\n  fragment ContentFragment on Content {\n    alternativePricingType\n    asset\n    altDescriptionBody\n    alternativePricingRef\n    alternativePricingType\n    authors\n    authorsAndInstructors\n    availabilityStatus\n    bulkPurchasingEnabled\n    canAddToQueue\n    contentTypeAssetAspectRatio\n    contentTypeLabel\n    courseEndDate\n    courseGracePeriodEnded\n    courseGroup\n    coursePresold\n    courseStartDate\n    createdAt\n    currentUserMayReschedule\n    currentUserUnmetCoursePrerequisites\n    currentUserUnmetLearningPathPrerequisites\n    customFields\n    description\n    displayCourse\n    displayCourseSlug\n    displayDate\n    embeddedEnabled\n    enrollmentCount\n    expiresAt\n    kind\n    hasChildren\n    hideCourseDescription\n    id\n    isActive\n    language\n    location {\n      id\n      name\n      room\n      address1\n      address2\n      city\n      state\n      zipCode\n      country\n      timeZone\n    }\n    meetingStartDate\n    metaDescription\n    metaTitle\n    priceInCents\n    publishDate\n    rating\n    ribbon {\n      color\n      contrastColor\n      darkerColor\n      label\n      slug\n    }\n    seatsLimit\n    sessionTitle\n    status\n    sku\n    slug\n    source\n    suggestedRetailPriceInCents\n    timeZone\n    title\n    updatedAt\n    waitlistCount\n    waitlistingEnabled\n    waitlistingTriggered\n  }\n`;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nexport type LocationFragmentFragment = {\n  __typename?: 'Location';\n  id: string;\n  name: string;\n  room?: string;\n  address1: string;\n  address2?: string;\n  city: string;\n  state?: string;\n  zipCode?: string;\n  country?: string;\n  timeZone?: string;\n};\n\nexport const LocationFragmentFragmentDoc = gql`\n  fragment LocationFragment on Location {\n    id\n    name\n    room\n    address1\n    address2\n    city\n    state\n    zipCode\n    country\n    timeZone\n  }\n`;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nexport type CatalogMetaFragmentFragment = {\n  __typename?: 'CatalogMeta';\n  contentTypeFilterEnabled: boolean;\n  contentTypes?: Array<string>;\n  displayAuthorsEnabled: boolean;\n  displayStartDateEnabled: boolean;\n  displayDescriptionOnCalendar: boolean;\n  displayTypeCalendarEnabled: boolean;\n  displayTypeGridEnabled: boolean;\n  displayTypeListEnabled: boolean;\n  hasMore: boolean;\n  isCurated: boolean;\n  queryCustomFields: any;\n  resultsDisplayType: Types.ContentItemDisplayType;\n  selectedSortColumn: Types.SortColumn;\n  selectedSortDirection: Types.SortDirection;\n  sortCourseStartDateEnabled: boolean;\n  sortCreatedAtEnabled: boolean;\n  sortPublishDateEnabled: boolean;\n  sortRelevanceEnabled: boolean;\n  sortTitleEnabled: boolean;\n  sortUpdatedAtEnabled: boolean;\n  tokenLabel?: string;\n  total?: number;\n  aggregations?: Array<{\n    __typename?: 'Aggregation';\n    key?: string;\n    label?: string;\n    buckets?: Array<{\n      __typename?: 'AggregationBucket';\n      query?: string;\n      value?: string;\n      label?: string;\n      description?: string;\n      count?: number;\n    }>;\n  }>;\n  displayBundle?: {\n    __typename?: 'Bundle';\n    id: string;\n    name: string;\n    slug: string;\n    priceInCents?: number;\n    annualPriceInCents?: number;\n  };\n};\n\nexport const CatalogMetaFragmentFragmentDoc = gql`\n  fragment CatalogMetaFragment on CatalogMeta {\n    aggregations {\n      key\n      label\n      buckets {\n        query\n        value\n        label\n        description\n        count\n      }\n    }\n    contentTypeFilterEnabled\n    contentTypes\n    displayAuthorsEnabled\n    displayBundle {\n      id\n      name\n      slug\n      priceInCents\n      annualPriceInCents\n    }\n    displayStartDateEnabled\n    displayDescriptionOnCalendar\n    displayTypeCalendarEnabled\n    displayTypeGridEnabled\n    displayTypeListEnabled\n    hasMore\n    isCurated\n    queryCustomFields\n    resultsDisplayType\n    selectedSortColumn\n    selectedSortDirection\n    sortCourseStartDateEnabled\n    sortCreatedAtEnabled\n    sortPublishDateEnabled\n    sortRelevanceEnabled\n    sortTitleEnabled\n    sortUpdatedAtEnabled\n    tokenLabel\n    total\n  }\n`;\n","import * as Types from '../global-types';\n\nimport { ContentFragmentFragment } from './ContentFragment.generated';\nimport { LocationFragmentFragment } from './LocationFragment.generated';\nimport { CatalogMetaFragmentFragment } from './CatalogMetaFragment.generated';\nimport { gql } from '@apollo/client';\nimport { ContentFragmentFragmentDoc } from './ContentFragment.generated';\nimport { LocationFragmentFragmentDoc } from './LocationFragment.generated';\nimport { CatalogMetaFragmentFragmentDoc } from './CatalogMetaFragment.generated';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type CatalogContentQueryVariables = Types.Exact<{\n  sortColumn?: Types.InputMaybe<Types.SortColumn>;\n  sortDirection?: Types.InputMaybe<Types.SortDirection>;\n  resultsDisplayType?: Types.InputMaybe<Types.ContentItemDisplayType>;\n  page: Types.Scalars['Int'];\n  token?: Types.InputMaybe<Types.Scalars['String']>;\n  labels?: Types.InputMaybe<Array<Types.Scalars['String']> | Types.Scalars['String']>;\n  values?: Types.InputMaybe<Array<Types.Scalars['String']> | Types.Scalars['String']>;\n  contentTypes?: Types.InputMaybe<Array<Types.Scalars['String']> | Types.Scalars['String']>;\n  query?: Types.InputMaybe<Types.Scalars['String']>;\n}>;\n\nexport type CatalogContentQuery = {\n  __typename?: 'Query';\n  CatalogContent: {\n    __typename?: 'CatalogContent';\n    contentItems?: Array<\n      {\n        __typename?: 'Content';\n        location?: { __typename?: 'Location' } & LocationFragmentFragment;\n      } & ContentFragmentFragment\n    >;\n    meta: { __typename?: 'CatalogMeta' } & CatalogMetaFragmentFragment;\n  };\n};\n\nexport const CatalogContentDocument = gql`\n  query CatalogContent(\n    $sortColumn: SortColumn\n    $sortDirection: SortDirection\n    $resultsDisplayType: ContentItemDisplayType\n    $page: Int!\n    $token: String\n    $labels: [String!]\n    $values: [String!]\n    $contentTypes: [String!]\n    $query: String\n  ) {\n    CatalogContent(\n      sortColumn: $sortColumn\n      sortDirection: $sortDirection\n      resultsDisplayType: $resultsDisplayType\n      page: $page\n      token: $token\n      labels: $labels\n      values: $values\n      contentTypes: $contentTypes\n      query: $query\n    ) {\n      contentItems {\n        ...ContentFragment\n        location {\n          ...LocationFragment\n        }\n      }\n      meta {\n        ...CatalogMetaFragment\n      }\n    }\n  }\n  ${ContentFragmentFragmentDoc}\n  ${LocationFragmentFragmentDoc}\n  ${CatalogMetaFragmentFragmentDoc}\n`;\n\n/**\n * __useCatalogContentQuery__\n *\n * To run a query within a React component, call `useCatalogContentQuery` and pass it any options that fit your needs.\n * When your component renders, `useCatalogContentQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCatalogContentQuery({\n *   variables: {\n *      sortColumn: // value for 'sortColumn'\n *      sortDirection: // value for 'sortDirection'\n *      resultsDisplayType: // value for 'resultsDisplayType'\n *      page: // value for 'page'\n *      token: // value for 'token'\n *      labels: // value for 'labels'\n *      values: // value for 'values'\n *      contentTypes: // value for 'contentTypes'\n *      query: // value for 'query'\n *   },\n * });\n */\nexport function useCatalogContentQuery(\n  baseOptions: Apollo.QueryHookOptions<CatalogContentQuery, CatalogContentQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<CatalogContentQuery, CatalogContentQueryVariables>(\n    CatalogContentDocument,\n    options\n  );\n}\nexport function useCatalogContentLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<CatalogContentQuery, CatalogContentQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<CatalogContentQuery, CatalogContentQueryVariables>(\n    CatalogContentDocument,\n    options\n  );\n}\nexport type CatalogContentQueryHookResult = ReturnType<typeof useCatalogContentQuery>;\nexport type CatalogContentLazyQueryHookResult = ReturnType<typeof useCatalogContentLazyQuery>;\nexport type CatalogContentQueryResult = Apollo.QueryResult<\n  CatalogContentQuery,\n  CatalogContentQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { ContentFragmentFragment } from './ContentFragment.generated';\nimport { gql } from '@apollo/client';\nimport { ContentFragmentFragmentDoc } from './ContentFragment.generated';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type CatalogQueryVariables = Types.Exact<{\n  query?: Types.InputMaybe<Types.Scalars['String']>;\n  querySignature?: Types.InputMaybe<Types.Scalars['String']>;\n  querySort?: Types.InputMaybe<Types.Scalars['String']>;\n}>;\n\nexport type CatalogQuery = {\n  __typename?: 'Query';\n  CatalogQuery: {\n    __typename?: 'CatalogContent';\n    contentItems?: Array<{ __typename?: 'Content' } & ContentFragmentFragment>;\n  };\n};\n\nexport const CatalogDocument = gql`\n  query Catalog($query: String, $querySignature: String, $querySort: String) {\n    CatalogQuery(query: $query, querySignature: $querySignature, querySort: $querySort) {\n      contentItems {\n        ...ContentFragment\n      }\n    }\n  }\n  ${ContentFragmentFragmentDoc}\n`;\n\n/**\n * __useCatalogQuery__\n *\n * To run a query within a React component, call `useCatalogQuery` and pass it any options that fit your needs.\n * When your component renders, `useCatalogQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCatalogQuery({\n *   variables: {\n *      query: // value for 'query'\n *      querySignature: // value for 'querySignature'\n *      querySort: // value for 'querySort'\n *   },\n * });\n */\nexport function useCatalogQuery(\n  baseOptions?: Apollo.QueryHookOptions<CatalogQuery, CatalogQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<CatalogQuery, CatalogQueryVariables>(CatalogDocument, options);\n}\nexport function useCatalogLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<CatalogQuery, CatalogQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<CatalogQuery, CatalogQueryVariables>(CatalogDocument, options);\n}\nexport type CatalogQueryHookResult = ReturnType<typeof useCatalogQuery>;\nexport type CatalogLazyQueryHookResult = ReturnType<typeof useCatalogLazyQuery>;\nexport type CatalogQueryResult = Apollo.QueryResult<CatalogQuery, CatalogQueryVariables>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type LanguagesQueryQueryVariables = Types.Exact<{ [key: string]: never }>;\n\nexport type LanguagesQueryQuery = {\n  __typename?: 'Query';\n  Languages: Array<{\n    __typename?: 'Language';\n    id?: string;\n    label: string;\n    code: string;\n    isCustom?: boolean;\n    selectorLabel?: string;\n  }>;\n};\n\nexport const LanguagesQueryDocument = gql`\n  query LanguagesQuery {\n    Languages {\n      id\n      label\n      code\n      isCustom\n      selectorLabel\n    }\n  }\n`;\n\n/**\n * __useLanguagesQueryQuery__\n *\n * To run a query within a React component, call `useLanguagesQueryQuery` and pass it any options that fit your needs.\n * When your component renders, `useLanguagesQueryQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLanguagesQueryQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useLanguagesQueryQuery(\n  baseOptions?: Apollo.QueryHookOptions<LanguagesQueryQuery, LanguagesQueryQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<LanguagesQueryQuery, LanguagesQueryQueryVariables>(\n    LanguagesQueryDocument,\n    options\n  );\n}\nexport function useLanguagesQueryLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<LanguagesQueryQuery, LanguagesQueryQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<LanguagesQueryQuery, LanguagesQueryQueryVariables>(\n    LanguagesQueryDocument,\n    options\n  );\n}\nexport type LanguagesQueryQueryHookResult = ReturnType<typeof useLanguagesQueryQuery>;\nexport type LanguagesQueryLazyQueryHookResult = ReturnType<typeof useLanguagesQueryLazyQuery>;\nexport type LanguagesQueryQueryResult = Apollo.QueryResult<\n  LanguagesQueryQuery,\n  LanguagesQueryQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { ContentFragmentFragment } from './ContentFragment.generated';\nimport { gql } from '@apollo/client';\nimport { ContentFragmentFragmentDoc } from './ContentFragment.generated';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type ContentsQueryVariables = Types.Exact<{\n  ids: Array<Types.Scalars['ID']> | Types.Scalars['ID'];\n}>;\n\nexport type ContentsQuery = {\n  __typename?: 'Query';\n  QueryContents: Array<{ __typename?: 'Content' } & ContentFragmentFragment>;\n};\n\nexport const ContentsDocument = gql`\n  query Contents($ids: [ID!]!) {\n    QueryContents(ids: $ids) {\n      ...ContentFragment\n    }\n  }\n  ${ContentFragmentFragmentDoc}\n`;\n\n/**\n * __useContentsQuery__\n *\n * To run a query within a React component, call `useContentsQuery` and pass it any options that fit your needs.\n * When your component renders, `useContentsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useContentsQuery({\n *   variables: {\n *      ids: // value for 'ids'\n *   },\n * });\n */\nexport function useContentsQuery(\n  baseOptions: Apollo.QueryHookOptions<ContentsQuery, ContentsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<ContentsQuery, ContentsQueryVariables>(ContentsDocument, options);\n}\nexport function useContentsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<ContentsQuery, ContentsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<ContentsQuery, ContentsQueryVariables>(ContentsDocument, options);\n}\nexport type ContentsQueryHookResult = ReturnType<typeof useContentsQuery>;\nexport type ContentsLazyQueryHookResult = ReturnType<typeof useContentsLazyQuery>;\nexport type ContentsQueryResult = Apollo.QueryResult<ContentsQuery, ContentsQueryVariables>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type RssItemsQueryVariables = Types.Exact<{\n  feedUrl: Types.Scalars['String'];\n}>;\n\nexport type RssItemsQuery = {\n  __typename?: 'Query';\n  RssItems: Array<{ __typename?: 'RssItem'; title?: string; link?: string }>;\n};\n\nexport const RssItemsDocument = gql`\n  query RssItems($feedUrl: String!) {\n    RssItems(feedUrl: $feedUrl) {\n      title\n      link\n    }\n  }\n`;\n\n/**\n * __useRssItemsQuery__\n *\n * To run a query within a React component, call `useRssItemsQuery` and pass it any options that fit your needs.\n * When your component renders, `useRssItemsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRssItemsQuery({\n *   variables: {\n *      feedUrl: // value for 'feedUrl'\n *   },\n * });\n */\nexport function useRssItemsQuery(\n  baseOptions: Apollo.QueryHookOptions<RssItemsQuery, RssItemsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<RssItemsQuery, RssItemsQueryVariables>(RssItemsDocument, options);\n}\nexport function useRssItemsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<RssItemsQuery, RssItemsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<RssItemsQuery, RssItemsQueryVariables>(RssItemsDocument, options);\n}\nexport type RssItemsQueryHookResult = ReturnType<typeof useRssItemsQuery>;\nexport type RssItemsLazyQueryHookResult = ReturnType<typeof useRssItemsLazyQuery>;\nexport type RssItemsQueryResult = Apollo.QueryResult<RssItemsQuery, RssItemsQueryVariables>;\n","import * as Types from '../global-types';\n\nimport { ContentFragmentFragment } from './ContentFragment.generated';\nimport { gql } from '@apollo/client';\nimport { ContentFragmentFragmentDoc } from './ContentFragment.generated';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserRecentContentQueryVariables = Types.Exact<{\n  limit?: Types.InputMaybe<Types.Scalars['Int']>;\n}>;\n\nexport type UserRecentContentQuery = {\n  __typename?: 'Query';\n  UserRecentContent: Array<{ __typename?: 'Content' } & ContentFragmentFragment>;\n};\n\nexport const UserRecentContentDocument = gql`\n  query UserRecentContent($limit: Int) {\n    UserRecentContent(limit: $limit) {\n      ...ContentFragment\n    }\n  }\n  ${ContentFragmentFragmentDoc}\n`;\n\n/**\n * __useUserRecentContentQuery__\n *\n * To run a query within a React component, call `useUserRecentContentQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserRecentContentQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserRecentContentQuery({\n *   variables: {\n *      limit: // value for 'limit'\n *   },\n * });\n */\nexport function useUserRecentContentQuery(\n  baseOptions?: Apollo.QueryHookOptions<UserRecentContentQuery, UserRecentContentQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserRecentContentQuery, UserRecentContentQueryVariables>(\n    UserRecentContentDocument,\n    options\n  );\n}\nexport function useUserRecentContentLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<UserRecentContentQuery, UserRecentContentQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserRecentContentQuery, UserRecentContentQueryVariables>(\n    UserRecentContentDocument,\n    options\n  );\n}\nexport type UserRecentContentQueryHookResult = ReturnType<typeof useUserRecentContentQuery>;\nexport type UserRecentContentLazyQueryHookResult = ReturnType<typeof useUserRecentContentLazyQuery>;\nexport type UserRecentContentQueryResult = Apollo.QueryResult<\n  UserRecentContentQuery,\n  UserRecentContentQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserContentItemsQueryVariables = Types.Exact<{\n  query?: Types.InputMaybe<Types.Scalars['String']>;\n  kind?: Types.InputMaybe<Array<Types.ContentKind> | Types.ContentKind>;\n  sortColumn?: Types.InputMaybe<Types.SortColumn>;\n  sortDirection?: Types.InputMaybe<Types.SortDirection>;\n}>;\n\nexport type UserContentItemsQuery = {\n  __typename?: 'Query';\n  UserContentItems?: Array<{\n    __typename?: 'Content';\n    asset?: string;\n    title?: string;\n    sessionTitle?: string;\n    kind?: Types.ContentKind;\n    id: string;\n    slug: string;\n    meetingStartDate?: string;\n    contentTypeLabel?: string;\n    availabilityStatus?: string;\n    courseStartDate?: string;\n    courseEndDate?: string;\n    coursePresold: boolean;\n    description?: string;\n    displayCourse?: string;\n    displayCourseSlug?: string;\n    displayDate?: string;\n    courseGracePeriodEnded: boolean;\n    authors?: Array<string>;\n    publishDate?: string;\n    source?: string;\n    expiresAt?: string;\n    currentUserMayReschedule: boolean;\n    timeZone?: string;\n    embeddedEnabled?: boolean;\n    currentUserUnmetCoursePrerequisites?: Array<string>;\n    currentUserUnmetLearningPathPrerequisites?: Array<string>;\n    hasChildren: boolean;\n    hideCourseDescription: boolean;\n    isActive: boolean;\n    waitlistingEnabled: boolean;\n    waitlistingTriggered: boolean;\n  }>;\n};\n\nexport const UserContentItemsDocument = gql`\n  query UserContentItems(\n    $query: String\n    $kind: [ContentKind!]\n    $sortColumn: SortColumn\n    $sortDirection: SortDirection\n  ) {\n    UserContentItems(\n      query: $query\n      kind: $kind\n      sortColumn: $sortColumn\n      sortDirection: $sortDirection\n    ) {\n      asset\n      title\n      sessionTitle\n      kind\n      id\n      slug\n      meetingStartDate\n      contentTypeLabel\n      availabilityStatus\n      courseStartDate\n      courseEndDate\n      coursePresold\n      description\n      displayCourse\n      displayCourseSlug\n      displayDate\n      courseGracePeriodEnded\n      authors\n      publishDate\n      source\n      expiresAt\n      currentUserMayReschedule\n      timeZone\n      embeddedEnabled\n      currentUserUnmetCoursePrerequisites\n      currentUserUnmetLearningPathPrerequisites\n      hasChildren\n      hideCourseDescription\n      isActive\n      waitlistingEnabled\n      waitlistingTriggered\n    }\n  }\n`;\n\n/**\n * __useUserContentItemsQuery__\n *\n * To run a query within a React component, call `useUserContentItemsQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserContentItemsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserContentItemsQuery({\n *   variables: {\n *      query: // value for 'query'\n *      kind: // value for 'kind'\n *      sortColumn: // value for 'sortColumn'\n *      sortDirection: // value for 'sortDirection'\n *   },\n * });\n */\nexport function useUserContentItemsQuery(\n  baseOptions?: Apollo.QueryHookOptions<UserContentItemsQuery, UserContentItemsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserContentItemsQuery, UserContentItemsQueryVariables>(\n    UserContentItemsDocument,\n    options\n  );\n}\nexport function useUserContentItemsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<UserContentItemsQuery, UserContentItemsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserContentItemsQuery, UserContentItemsQueryVariables>(\n    UserContentItemsDocument,\n    options\n  );\n}\nexport type UserContentItemsQueryHookResult = ReturnType<typeof useUserContentItemsQuery>;\nexport type UserContentItemsLazyQueryHookResult = ReturnType<typeof useUserContentItemsLazyQuery>;\nexport type UserContentItemsQueryResult = Apollo.QueryResult<\n  UserContentItemsQuery,\n  UserContentItemsQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserArchivesQueryVariables = Types.Exact<{ [key: string]: never }>;\n\nexport type UserArchivesQuery = {\n  __typename?: 'Query';\n  UserArchives?: Array<{\n    __typename?: 'ArchivedContent';\n    id: string;\n    user?: string;\n    resource?: string;\n    resourceType?: string;\n    status?: string;\n    archivedAt?: string;\n    name?: string;\n    reinstatable: boolean;\n    waitlistActive: boolean;\n  }>;\n};\n\nexport const UserArchivesDocument = gql`\n  query UserArchives {\n    UserArchives {\n      id\n      user\n      resource\n      resourceType\n      status\n      archivedAt\n      name\n      reinstatable\n      waitlistActive\n    }\n  }\n`;\n\n/**\n * __useUserArchivesQuery__\n *\n * To run a query within a React component, call `useUserArchivesQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserArchivesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserArchivesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUserArchivesQuery(\n  baseOptions?: Apollo.QueryHookOptions<UserArchivesQuery, UserArchivesQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserArchivesQuery, UserArchivesQueryVariables>(\n    UserArchivesDocument,\n    options\n  );\n}\nexport function useUserArchivesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<UserArchivesQuery, UserArchivesQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserArchivesQuery, UserArchivesQueryVariables>(\n    UserArchivesDocument,\n    options\n  );\n}\nexport type UserArchivesQueryHookResult = ReturnType<typeof useUserArchivesQuery>;\nexport type UserArchivesLazyQueryHookResult = ReturnType<typeof useUserArchivesLazyQuery>;\nexport type UserArchivesQueryResult = Apollo.QueryResult<\n  UserArchivesQuery,\n  UserArchivesQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserWaitlistQueryVariables = Types.Exact<{ [key: string]: never }>;\n\nexport type UserWaitlistQuery = {\n  __typename?: 'Query';\n  UserWaitlist?: Array<{\n    __typename?: 'Content';\n    id: string;\n    contentTypeLabel?: string;\n    title?: string;\n    kind?: Types.ContentKind;\n    slug: string;\n    displayCourse?: string;\n    displayCourseSlug?: string;\n  }>;\n};\n\nexport const UserWaitlistDocument = gql`\n  query UserWaitlist {\n    UserWaitlist {\n      id\n      contentTypeLabel\n      title\n      kind\n      slug\n      displayCourse\n      displayCourseSlug\n    }\n  }\n`;\n\n/**\n * __useUserWaitlistQuery__\n *\n * To run a query within a React component, call `useUserWaitlistQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserWaitlistQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserWaitlistQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUserWaitlistQuery(\n  baseOptions?: Apollo.QueryHookOptions<UserWaitlistQuery, UserWaitlistQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserWaitlistQuery, UserWaitlistQueryVariables>(\n    UserWaitlistDocument,\n    options\n  );\n}\nexport function useUserWaitlistLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<UserWaitlistQuery, UserWaitlistQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserWaitlistQuery, UserWaitlistQueryVariables>(\n    UserWaitlistDocument,\n    options\n  );\n}\nexport type UserWaitlistQueryHookResult = ReturnType<typeof useUserWaitlistQuery>;\nexport type UserWaitlistLazyQueryHookResult = ReturnType<typeof useUserWaitlistLazyQuery>;\nexport type UserWaitlistQueryResult = Apollo.QueryResult<\n  UserWaitlistQuery,\n  UserWaitlistQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserBookmarksQueryVariables = Types.Exact<{ [key: string]: never }>;\n\nexport type UserBookmarksQuery = {\n  __typename?: 'Query';\n  UserBookmarks?: Array<{\n    __typename?: 'BookmarkFolder';\n    id: string;\n    name: string;\n    defaultFolder?: boolean;\n    bookmarkCount?: number;\n  }>;\n};\n\nexport const UserBookmarksDocument = gql`\n  query UserBookmarks {\n    UserBookmarks {\n      id\n      name\n      defaultFolder\n      bookmarkCount\n    }\n  }\n`;\n\n/**\n * __useUserBookmarksQuery__\n *\n * To run a query within a React component, call `useUserBookmarksQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserBookmarksQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserBookmarksQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUserBookmarksQuery(\n  baseOptions?: Apollo.QueryHookOptions<UserBookmarksQuery, UserBookmarksQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserBookmarksQuery, UserBookmarksQueryVariables>(\n    UserBookmarksDocument,\n    options\n  );\n}\nexport function useUserBookmarksLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<UserBookmarksQuery, UserBookmarksQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserBookmarksQuery, UserBookmarksQueryVariables>(\n    UserBookmarksDocument,\n    options\n  );\n}\nexport type UserBookmarksQueryHookResult = ReturnType<typeof useUserBookmarksQuery>;\nexport type UserBookmarksLazyQueryHookResult = ReturnType<typeof useUserBookmarksLazyQuery>;\nexport type UserBookmarksQueryResult = Apollo.QueryResult<\n  UserBookmarksQuery,\n  UserBookmarksQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserCertificatesQueryVariables = Types.Exact<{\n  query?: Types.InputMaybe<Types.Scalars['String']>;\n  includeExpiredCertificates?: Types.InputMaybe<Types.Scalars['Boolean']>;\n}>;\n\nexport type UserCertificatesQuery = {\n  __typename?: 'Query';\n  UserCertificates?: Array<{\n    __typename?: 'Certificate';\n    id: string;\n    resourceId?: string;\n    expirationDate?: string;\n    isExpired: boolean;\n    externalResourceTitle?: string;\n    url: string;\n    source?: string;\n    contentItem?: {\n      __typename?: 'Content';\n      id: string;\n      asset?: string;\n      courseEndDate?: string;\n      courseStartDate?: string;\n      coursePresold: boolean;\n      description?: string;\n      kind?: Types.ContentKind;\n      slug: string;\n      availabilityStatus?: string;\n      contentTypeLabel?: string;\n      title?: string;\n      timeZone?: string;\n    };\n  }>;\n};\n\nexport const UserCertificatesDocument = gql`\n  query UserCertificates($query: String, $includeExpiredCertificates: Boolean) {\n    UserCertificates(query: $query, includeExpiredCertificates: $includeExpiredCertificates) {\n      id\n      resourceId\n      expirationDate\n      isExpired\n      externalResourceTitle\n      url\n      source\n      contentItem {\n        id\n        asset\n        courseEndDate\n        courseStartDate\n        coursePresold\n        description\n        kind\n        slug\n        availabilityStatus\n        contentTypeLabel\n        title\n        timeZone\n      }\n    }\n  }\n`;\n\n/**\n * __useUserCertificatesQuery__\n *\n * To run a query within a React component, call `useUserCertificatesQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserCertificatesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserCertificatesQuery({\n *   variables: {\n *      query: // value for 'query'\n *      includeExpiredCertificates: // value for 'includeExpiredCertificates'\n *   },\n * });\n */\nexport function useUserCertificatesQuery(\n  baseOptions?: Apollo.QueryHookOptions<UserCertificatesQuery, UserCertificatesQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserCertificatesQuery, UserCertificatesQueryVariables>(\n    UserCertificatesDocument,\n    options\n  );\n}\nexport function useUserCertificatesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<UserCertificatesQuery, UserCertificatesQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserCertificatesQuery, UserCertificatesQueryVariables>(\n    UserCertificatesDocument,\n    options\n  );\n}\nexport type UserCertificatesQueryHookResult = ReturnType<typeof useUserCertificatesQuery>;\nexport type UserCertificatesLazyQueryHookResult = ReturnType<typeof useUserCertificatesLazyQuery>;\nexport type UserCertificatesQueryResult = Apollo.QueryResult<\n  UserCertificatesQuery,\n  UserCertificatesQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type ContentGroupsQueryVariables = Types.Exact<{\n  query?: Types.InputMaybe<Types.Scalars['String']>;\n  includeExpiredCertificates?: Types.InputMaybe<Types.Scalars['Boolean']>;\n}>;\n\nexport type ContentGroupsQuery = {\n  __typename?: 'Query';\n  UserContentGroups?: Array<{\n    __typename?: 'ContentGroup';\n    kind: Types.ContentGroupKind;\n    count: number;\n  }>;\n};\n\nexport const ContentGroupsDocument = gql`\n  query ContentGroups($query: String, $includeExpiredCertificates: Boolean) {\n    UserContentGroups(query: $query, includeExpiredCertificates: $includeExpiredCertificates) {\n      kind\n      count\n    }\n  }\n`;\n\n/**\n * __useContentGroupsQuery__\n *\n * To run a query within a React component, call `useContentGroupsQuery` and pass it any options that fit your needs.\n * When your component renders, `useContentGroupsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useContentGroupsQuery({\n *   variables: {\n *      query: // value for 'query'\n *      includeExpiredCertificates: // value for 'includeExpiredCertificates'\n *   },\n * });\n */\nexport function useContentGroupsQuery(\n  baseOptions?: Apollo.QueryHookOptions<ContentGroupsQuery, ContentGroupsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<ContentGroupsQuery, ContentGroupsQueryVariables>(\n    ContentGroupsDocument,\n    options\n  );\n}\nexport function useContentGroupsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<ContentGroupsQuery, ContentGroupsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<ContentGroupsQuery, ContentGroupsQueryVariables>(\n    ContentGroupsDocument,\n    options\n  );\n}\nexport type ContentGroupsQueryHookResult = ReturnType<typeof useContentGroupsQuery>;\nexport type ContentGroupsLazyQueryHookResult = ReturnType<typeof useContentGroupsLazyQuery>;\nexport type ContentGroupsQueryResult = Apollo.QueryResult<\n  ContentGroupsQuery,\n  ContentGroupsQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserBookmarksByFolderQueryVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type UserBookmarksByFolderQuery = {\n  __typename?: 'Query';\n  UserBookmarksByFolder?: Array<{\n    __typename?: 'Bookmark';\n    id: string;\n    topicId?: string;\n    note?: string;\n    createdAt: string;\n    course: {\n      __typename?: 'Course';\n      id: string;\n      title?: string;\n      slug: string;\n      status?: Types.Status;\n      courseGroup?: {\n        __typename?: 'CourseGroup';\n        id: string;\n        authors?: Array<string>;\n        source?: string;\n        asset?: string;\n        kind?: Types.CourseGroupKind;\n        contentType?: { __typename?: 'ContentType'; label?: string };\n      };\n    };\n  }>;\n};\n\nexport const UserBookmarksByFolderDocument = gql`\n  query UserBookmarksByFolder($id: ID!) {\n    UserBookmarksByFolder(id: $id) {\n      id\n      course {\n        id\n        title\n        slug\n        status\n        courseGroup {\n          id\n          authors\n          source\n          asset\n          kind\n          contentType {\n            label\n          }\n        }\n      }\n      topicId\n      note\n      createdAt\n    }\n  }\n`;\n\n/**\n * __useUserBookmarksByFolderQuery__\n *\n * To run a query within a React component, call `useUserBookmarksByFolderQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserBookmarksByFolderQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserBookmarksByFolderQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useUserBookmarksByFolderQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    UserBookmarksByFolderQuery,\n    UserBookmarksByFolderQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserBookmarksByFolderQuery, UserBookmarksByFolderQueryVariables>(\n    UserBookmarksByFolderDocument,\n    options\n  );\n}\nexport function useUserBookmarksByFolderLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    UserBookmarksByFolderQuery,\n    UserBookmarksByFolderQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserBookmarksByFolderQuery, UserBookmarksByFolderQueryVariables>(\n    UserBookmarksByFolderDocument,\n    options\n  );\n}\nexport type UserBookmarksByFolderQueryHookResult = ReturnType<typeof useUserBookmarksByFolderQuery>;\nexport type UserBookmarksByFolderLazyQueryHookResult = ReturnType<\n  typeof useUserBookmarksByFolderLazyQuery\n>;\nexport type UserBookmarksByFolderQueryResult = Apollo.QueryResult<\n  UserBookmarksByFolderQuery,\n  UserBookmarksByFolderQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserCourseCompletionProgressQueryVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type UserCourseCompletionProgressQuery = {\n  __typename?: 'Query';\n  UserCourseCompletionProgress?: Array<{\n    __typename?: 'CourseCompletionCriteriaProgress';\n    type?: Types.CourseCompletionCriteriaType;\n    required?: Array<string>;\n    completed?: Array<string>;\n    percent: number;\n  }>;\n};\n\nexport const UserCourseCompletionProgressDocument = gql`\n  query UserCourseCompletionProgress($id: ID!) {\n    UserCourseCompletionProgress(id: $id) {\n      type\n      required\n      completed\n      percent\n    }\n  }\n`;\n\n/**\n * __useUserCourseCompletionProgressQuery__\n *\n * To run a query within a React component, call `useUserCourseCompletionProgressQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserCourseCompletionProgressQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserCourseCompletionProgressQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useUserCourseCompletionProgressQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    UserCourseCompletionProgressQuery,\n    UserCourseCompletionProgressQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<\n    UserCourseCompletionProgressQuery,\n    UserCourseCompletionProgressQueryVariables\n  >(UserCourseCompletionProgressDocument, options);\n}\nexport function useUserCourseCompletionProgressLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    UserCourseCompletionProgressQuery,\n    UserCourseCompletionProgressQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<\n    UserCourseCompletionProgressQuery,\n    UserCourseCompletionProgressQueryVariables\n  >(UserCourseCompletionProgressDocument, options);\n}\nexport type UserCourseCompletionProgressQueryHookResult = ReturnType<\n  typeof useUserCourseCompletionProgressQuery\n>;\nexport type UserCourseCompletionProgressLazyQueryHookResult = ReturnType<\n  typeof useUserCourseCompletionProgressLazyQuery\n>;\nexport type UserCourseCompletionProgressQueryResult = Apollo.QueryResult<\n  UserCourseCompletionProgressQuery,\n  UserCourseCompletionProgressQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserCourseProgressQueryVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type UserCourseProgressQuery = {\n  __typename?: 'Query';\n  UserCourseProgress?: {\n    __typename?: 'UserProgress';\n    totalViews?: number;\n    totalTime?: number;\n    percentComplete?: number;\n  };\n};\n\nexport const UserCourseProgressDocument = gql`\n  query UserCourseProgress($id: ID!) {\n    UserCourseProgress(id: $id) {\n      totalViews\n      totalTime\n      percentComplete\n    }\n  }\n`;\n\n/**\n * __useUserCourseProgressQuery__\n *\n * To run a query within a React component, call `useUserCourseProgressQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserCourseProgressQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserCourseProgressQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useUserCourseProgressQuery(\n  baseOptions: Apollo.QueryHookOptions<UserCourseProgressQuery, UserCourseProgressQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserCourseProgressQuery, UserCourseProgressQueryVariables>(\n    UserCourseProgressDocument,\n    options\n  );\n}\nexport function useUserCourseProgressLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    UserCourseProgressQuery,\n    UserCourseProgressQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserCourseProgressQuery, UserCourseProgressQueryVariables>(\n    UserCourseProgressDocument,\n    options\n  );\n}\nexport type UserCourseProgressQueryHookResult = ReturnType<typeof useUserCourseProgressQuery>;\nexport type UserCourseProgressLazyQueryHookResult = ReturnType<\n  typeof useUserCourseProgressLazyQuery\n>;\nexport type UserCourseProgressQueryResult = Apollo.QueryResult<\n  UserCourseProgressQuery,\n  UserCourseProgressQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserCourseAwardCountsQueryVariables = Types.Exact<{\n  courseId: Types.Scalars['ID'];\n}>;\n\nexport type UserCourseAwardCountsQuery = {\n  __typename?: 'Query';\n  UserCourseAwardCounts: Array<{\n    __typename?: 'UserAwardCount';\n    id: string;\n    label?: string;\n    icon?: Types.AwardTypeIcon;\n    count?: number;\n  }>;\n};\n\nexport const UserCourseAwardCountsDocument = gql`\n  query UserCourseAwardCounts($courseId: ID!) {\n    UserCourseAwardCounts(courseId: $courseId) {\n      id\n      label\n      icon\n      count\n    }\n  }\n`;\n\n/**\n * __useUserCourseAwardCountsQuery__\n *\n * To run a query within a React component, call `useUserCourseAwardCountsQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserCourseAwardCountsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserCourseAwardCountsQuery({\n *   variables: {\n *      courseId: // value for 'courseId'\n *   },\n * });\n */\nexport function useUserCourseAwardCountsQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    UserCourseAwardCountsQuery,\n    UserCourseAwardCountsQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserCourseAwardCountsQuery, UserCourseAwardCountsQueryVariables>(\n    UserCourseAwardCountsDocument,\n    options\n  );\n}\nexport function useUserCourseAwardCountsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    UserCourseAwardCountsQuery,\n    UserCourseAwardCountsQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserCourseAwardCountsQuery, UserCourseAwardCountsQueryVariables>(\n    UserCourseAwardCountsDocument,\n    options\n  );\n}\nexport type UserCourseAwardCountsQueryHookResult = ReturnType<typeof useUserCourseAwardCountsQuery>;\nexport type UserCourseAwardCountsLazyQueryHookResult = ReturnType<\n  typeof useUserCourseAwardCountsLazyQuery\n>;\nexport type UserCourseAwardCountsQueryResult = Apollo.QueryResult<\n  UserCourseAwardCountsQuery,\n  UserCourseAwardCountsQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserCourseCollaborationsQueryVariables = Types.Exact<{\n  courseId: Types.Scalars['ID'];\n}>;\n\nexport type UserCourseCollaborationsQuery = {\n  __typename?: 'Query';\n  UserCourseCollaborations: number;\n};\n\nexport const UserCourseCollaborationsDocument = gql`\n  query UserCourseCollaborations($courseId: ID!) {\n    UserCourseCollaborations(courseId: $courseId)\n  }\n`;\n\n/**\n * __useUserCourseCollaborationsQuery__\n *\n * To run a query within a React component, call `useUserCourseCollaborationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserCourseCollaborationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserCourseCollaborationsQuery({\n *   variables: {\n *      courseId: // value for 'courseId'\n *   },\n * });\n */\nexport function useUserCourseCollaborationsQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    UserCourseCollaborationsQuery,\n    UserCourseCollaborationsQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserCourseCollaborationsQuery, UserCourseCollaborationsQueryVariables>(\n    UserCourseCollaborationsDocument,\n    options\n  );\n}\nexport function useUserCourseCollaborationsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    UserCourseCollaborationsQuery,\n    UserCourseCollaborationsQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserCourseCollaborationsQuery, UserCourseCollaborationsQueryVariables>(\n    UserCourseCollaborationsDocument,\n    options\n  );\n}\nexport type UserCourseCollaborationsQueryHookResult = ReturnType<\n  typeof useUserCourseCollaborationsQuery\n>;\nexport type UserCourseCollaborationsLazyQueryHookResult = ReturnType<\n  typeof useUserCourseCollaborationsLazyQuery\n>;\nexport type UserCourseCollaborationsQueryResult = Apollo.QueryResult<\n  UserCourseCollaborationsQuery,\n  UserCourseCollaborationsQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UserCertificateFieldsQueryVariables = Types.Exact<{ [key: string]: never }>;\n\nexport type UserCertificateFieldsQuery = {\n  __typename?: 'Query';\n  UserCertificateFields?: Array<{\n    __typename?: 'CertificateField';\n    id: string;\n    type: Types.CertificateFieldType;\n    label: string;\n    awardTypeId?: string;\n    awardType?: { __typename?: 'AwardType'; id: string; pluralLabel?: string };\n  }>;\n};\n\nexport const UserCertificateFieldsDocument = gql`\n  query UserCertificateFields {\n    UserCertificateFields {\n      id\n      type\n      label\n      awardTypeId\n      awardType {\n        id\n        pluralLabel\n      }\n    }\n  }\n`;\n\n/**\n * __useUserCertificateFieldsQuery__\n *\n * To run a query within a React component, call `useUserCertificateFieldsQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserCertificateFieldsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserCertificateFieldsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUserCertificateFieldsQuery(\n  baseOptions?: Apollo.QueryHookOptions<\n    UserCertificateFieldsQuery,\n    UserCertificateFieldsQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<UserCertificateFieldsQuery, UserCertificateFieldsQueryVariables>(\n    UserCertificateFieldsDocument,\n    options\n  );\n}\nexport function useUserCertificateFieldsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    UserCertificateFieldsQuery,\n    UserCertificateFieldsQueryVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<UserCertificateFieldsQuery, UserCertificateFieldsQueryVariables>(\n    UserCertificateFieldsDocument,\n    options\n  );\n}\nexport type UserCertificateFieldsQueryHookResult = ReturnType<typeof useUserCertificateFieldsQuery>;\nexport type UserCertificateFieldsLazyQueryHookResult = ReturnType<\n  typeof useUserCertificateFieldsLazyQuery\n>;\nexport type UserCertificateFieldsQueryResult = Apollo.QueryResult<\n  UserCertificateFieldsQuery,\n  UserCertificateFieldsQueryVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type AddResourceToQueueMutationVariables = Types.Exact<{\n  resourceType?: Types.InputMaybe<Types.ContentKind>;\n  resourceId: Types.Scalars['ID'];\n}>;\n\nexport type AddResourceToQueueMutation = { __typename?: 'Mutation'; AddResourceToQueue: boolean };\n\nexport const AddResourceToQueueDocument = gql`\n  mutation AddResourceToQueue($resourceType: ContentKind, $resourceId: ID!) {\n    AddResourceToQueue(resourceType: $resourceType, resourceId: $resourceId)\n  }\n`;\nexport type AddResourceToQueueMutationFn = Apollo.MutationFunction<\n  AddResourceToQueueMutation,\n  AddResourceToQueueMutationVariables\n>;\n\n/**\n * __useAddResourceToQueueMutation__\n *\n * To run a mutation, you first call `useAddResourceToQueueMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddResourceToQueueMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addResourceToQueueMutation, { data, loading, error }] = useAddResourceToQueueMutation({\n *   variables: {\n *      resourceType: // value for 'resourceType'\n *      resourceId: // value for 'resourceId'\n *   },\n * });\n */\nexport function useAddResourceToQueueMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    AddResourceToQueueMutation,\n    AddResourceToQueueMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<AddResourceToQueueMutation, AddResourceToQueueMutationVariables>(\n    AddResourceToQueueDocument,\n    options\n  );\n}\nexport type AddResourceToQueueMutationHookResult = ReturnType<typeof useAddResourceToQueueMutation>;\nexport type AddResourceToQueueMutationResult = Apollo.MutationResult<AddResourceToQueueMutation>;\nexport type AddResourceToQueueMutationOptions = Apollo.BaseMutationOptions<\n  AddResourceToQueueMutation,\n  AddResourceToQueueMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type ArchiveUserCourseMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type ArchiveUserCourseMutation = { __typename?: 'Mutation'; ArchiveUserCourse?: string };\n\nexport const ArchiveUserCourseDocument = gql`\n  mutation ArchiveUserCourse($id: ID!) {\n    ArchiveUserCourse(id: $id)\n  }\n`;\nexport type ArchiveUserCourseMutationFn = Apollo.MutationFunction<\n  ArchiveUserCourseMutation,\n  ArchiveUserCourseMutationVariables\n>;\n\n/**\n * __useArchiveUserCourseMutation__\n *\n * To run a mutation, you first call `useArchiveUserCourseMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveUserCourseMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveUserCourseMutation, { data, loading, error }] = useArchiveUserCourseMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveUserCourseMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    ArchiveUserCourseMutation,\n    ArchiveUserCourseMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<ArchiveUserCourseMutation, ArchiveUserCourseMutationVariables>(\n    ArchiveUserCourseDocument,\n    options\n  );\n}\nexport type ArchiveUserCourseMutationHookResult = ReturnType<typeof useArchiveUserCourseMutation>;\nexport type ArchiveUserCourseMutationResult = Apollo.MutationResult<ArchiveUserCourseMutation>;\nexport type ArchiveUserCourseMutationOptions = Apollo.BaseMutationOptions<\n  ArchiveUserCourseMutation,\n  ArchiveUserCourseMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type ArchiveUserLearningPathMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type ArchiveUserLearningPathMutation = {\n  __typename?: 'Mutation';\n  ArchiveUserLearningPath?: string;\n};\n\nexport const ArchiveUserLearningPathDocument = gql`\n  mutation ArchiveUserLearningPath($id: ID!) {\n    ArchiveUserLearningPath(id: $id)\n  }\n`;\nexport type ArchiveUserLearningPathMutationFn = Apollo.MutationFunction<\n  ArchiveUserLearningPathMutation,\n  ArchiveUserLearningPathMutationVariables\n>;\n\n/**\n * __useArchiveUserLearningPathMutation__\n *\n * To run a mutation, you first call `useArchiveUserLearningPathMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveUserLearningPathMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveUserLearningPathMutation, { data, loading, error }] = useArchiveUserLearningPathMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveUserLearningPathMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    ArchiveUserLearningPathMutation,\n    ArchiveUserLearningPathMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<\n    ArchiveUserLearningPathMutation,\n    ArchiveUserLearningPathMutationVariables\n  >(ArchiveUserLearningPathDocument, options);\n}\nexport type ArchiveUserLearningPathMutationHookResult = ReturnType<\n  typeof useArchiveUserLearningPathMutation\n>;\nexport type ArchiveUserLearningPathMutationResult =\n  Apollo.MutationResult<ArchiveUserLearningPathMutation>;\nexport type ArchiveUserLearningPathMutationOptions = Apollo.BaseMutationOptions<\n  ArchiveUserLearningPathMutation,\n  ArchiveUserLearningPathMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type ReinstateUserLearningPathMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type ReinstateUserLearningPathMutation = {\n  __typename?: 'Mutation';\n  ReinstateUserLearningPath?: string;\n};\n\nexport const ReinstateUserLearningPathDocument = gql`\n  mutation ReinstateUserLearningPath($id: ID!) {\n    ReinstateUserLearningPath(id: $id)\n  }\n`;\nexport type ReinstateUserLearningPathMutationFn = Apollo.MutationFunction<\n  ReinstateUserLearningPathMutation,\n  ReinstateUserLearningPathMutationVariables\n>;\n\n/**\n * __useReinstateUserLearningPathMutation__\n *\n * To run a mutation, you first call `useReinstateUserLearningPathMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReinstateUserLearningPathMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reinstateUserLearningPathMutation, { data, loading, error }] = useReinstateUserLearningPathMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReinstateUserLearningPathMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    ReinstateUserLearningPathMutation,\n    ReinstateUserLearningPathMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<\n    ReinstateUserLearningPathMutation,\n    ReinstateUserLearningPathMutationVariables\n  >(ReinstateUserLearningPathDocument, options);\n}\nexport type ReinstateUserLearningPathMutationHookResult = ReturnType<\n  typeof useReinstateUserLearningPathMutation\n>;\nexport type ReinstateUserLearningPathMutationResult =\n  Apollo.MutationResult<ReinstateUserLearningPathMutation>;\nexport type ReinstateUserLearningPathMutationOptions = Apollo.BaseMutationOptions<\n  ReinstateUserLearningPathMutation,\n  ReinstateUserLearningPathMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type ReinstateUserCourseMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type ReinstateUserCourseMutation = { __typename?: 'Mutation'; ReinstateUserCourse?: string };\n\nexport const ReinstateUserCourseDocument = gql`\n  mutation ReinstateUserCourse($id: ID!) {\n    ReinstateUserCourse(id: $id)\n  }\n`;\nexport type ReinstateUserCourseMutationFn = Apollo.MutationFunction<\n  ReinstateUserCourseMutation,\n  ReinstateUserCourseMutationVariables\n>;\n\n/**\n * __useReinstateUserCourseMutation__\n *\n * To run a mutation, you first call `useReinstateUserCourseMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReinstateUserCourseMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reinstateUserCourseMutation, { data, loading, error }] = useReinstateUserCourseMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReinstateUserCourseMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    ReinstateUserCourseMutation,\n    ReinstateUserCourseMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<ReinstateUserCourseMutation, ReinstateUserCourseMutationVariables>(\n    ReinstateUserCourseDocument,\n    options\n  );\n}\nexport type ReinstateUserCourseMutationHookResult = ReturnType<\n  typeof useReinstateUserCourseMutation\n>;\nexport type ReinstateUserCourseMutationResult = Apollo.MutationResult<ReinstateUserCourseMutation>;\nexport type ReinstateUserCourseMutationOptions = Apollo.BaseMutationOptions<\n  ReinstateUserCourseMutation,\n  ReinstateUserCourseMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UnenrollFromWaitlistMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type UnenrollFromWaitlistMutation = {\n  __typename?: 'Mutation';\n  UnenrollFromWaitlist: boolean;\n};\n\nexport const UnenrollFromWaitlistDocument = gql`\n  mutation UnenrollFromWaitlist($id: ID!) {\n    UnenrollFromWaitlist(id: $id)\n  }\n`;\nexport type UnenrollFromWaitlistMutationFn = Apollo.MutationFunction<\n  UnenrollFromWaitlistMutation,\n  UnenrollFromWaitlistMutationVariables\n>;\n\n/**\n * __useUnenrollFromWaitlistMutation__\n *\n * To run a mutation, you first call `useUnenrollFromWaitlistMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUnenrollFromWaitlistMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [unenrollFromWaitlistMutation, { data, loading, error }] = useUnenrollFromWaitlistMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useUnenrollFromWaitlistMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    UnenrollFromWaitlistMutation,\n    UnenrollFromWaitlistMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<UnenrollFromWaitlistMutation, UnenrollFromWaitlistMutationVariables>(\n    UnenrollFromWaitlistDocument,\n    options\n  );\n}\nexport type UnenrollFromWaitlistMutationHookResult = ReturnType<\n  typeof useUnenrollFromWaitlistMutation\n>;\nexport type UnenrollFromWaitlistMutationResult =\n  Apollo.MutationResult<UnenrollFromWaitlistMutation>;\nexport type UnenrollFromWaitlistMutationOptions = Apollo.BaseMutationOptions<\n  UnenrollFromWaitlistMutation,\n  UnenrollFromWaitlistMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UpdateBookmarkFolderMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n  name: Types.Scalars['String'];\n}>;\n\nexport type UpdateBookmarkFolderMutation = {\n  __typename?: 'Mutation';\n  UpdateBookmarkFolder: { __typename?: 'BookmarkFolder'; id: string; name: string };\n};\n\nexport const UpdateBookmarkFolderDocument = gql`\n  mutation UpdateBookmarkFolder($id: ID!, $name: String!) {\n    UpdateBookmarkFolder(id: $id, name: $name) {\n      id\n      name\n    }\n  }\n`;\nexport type UpdateBookmarkFolderMutationFn = Apollo.MutationFunction<\n  UpdateBookmarkFolderMutation,\n  UpdateBookmarkFolderMutationVariables\n>;\n\n/**\n * __useUpdateBookmarkFolderMutation__\n *\n * To run a mutation, you first call `useUpdateBookmarkFolderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateBookmarkFolderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateBookmarkFolderMutation, { data, loading, error }] = useUpdateBookmarkFolderMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *   },\n * });\n */\nexport function useUpdateBookmarkFolderMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    UpdateBookmarkFolderMutation,\n    UpdateBookmarkFolderMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<UpdateBookmarkFolderMutation, UpdateBookmarkFolderMutationVariables>(\n    UpdateBookmarkFolderDocument,\n    options\n  );\n}\nexport type UpdateBookmarkFolderMutationHookResult = ReturnType<\n  typeof useUpdateBookmarkFolderMutation\n>;\nexport type UpdateBookmarkFolderMutationResult =\n  Apollo.MutationResult<UpdateBookmarkFolderMutation>;\nexport type UpdateBookmarkFolderMutationOptions = Apollo.BaseMutationOptions<\n  UpdateBookmarkFolderMutation,\n  UpdateBookmarkFolderMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type DestroyBookmarkFolderMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type DestroyBookmarkFolderMutation = {\n  __typename?: 'Mutation';\n  DestroyBookmarkFolder: string;\n};\n\nexport const DestroyBookmarkFolderDocument = gql`\n  mutation DestroyBookmarkFolder($id: ID!) {\n    DestroyBookmarkFolder(id: $id)\n  }\n`;\nexport type DestroyBookmarkFolderMutationFn = Apollo.MutationFunction<\n  DestroyBookmarkFolderMutation,\n  DestroyBookmarkFolderMutationVariables\n>;\n\n/**\n * __useDestroyBookmarkFolderMutation__\n *\n * To run a mutation, you first call `useDestroyBookmarkFolderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDestroyBookmarkFolderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [destroyBookmarkFolderMutation, { data, loading, error }] = useDestroyBookmarkFolderMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDestroyBookmarkFolderMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    DestroyBookmarkFolderMutation,\n    DestroyBookmarkFolderMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<DestroyBookmarkFolderMutation, DestroyBookmarkFolderMutationVariables>(\n    DestroyBookmarkFolderDocument,\n    options\n  );\n}\nexport type DestroyBookmarkFolderMutationHookResult = ReturnType<\n  typeof useDestroyBookmarkFolderMutation\n>;\nexport type DestroyBookmarkFolderMutationResult =\n  Apollo.MutationResult<DestroyBookmarkFolderMutation>;\nexport type DestroyBookmarkFolderMutationOptions = Apollo.BaseMutationOptions<\n  DestroyBookmarkFolderMutation,\n  DestroyBookmarkFolderMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type CreateCertificateFromUploadMutationVariables = Types.Exact<{\n  asset: Types.Scalars['URL'];\n  certificateUploadFields?: Types.InputMaybe<\n    Array<Types.CertificateUploadField> | Types.CertificateUploadField\n  >;\n}>;\n\nexport type CreateCertificateFromUploadMutation = {\n  __typename?: 'Mutation';\n  CreateCertificateFromUpload: {\n    __typename: 'Certificate';\n    id: string;\n    externalResourceTitle?: string;\n  };\n};\n\nexport const CreateCertificateFromUploadDocument = gql`\n  mutation CreateCertificateFromUpload(\n    $asset: URL!\n    $certificateUploadFields: [CertificateUploadField!]\n  ) {\n    CreateCertificateFromUpload(asset: $asset, certificateUploadFields: $certificateUploadFields) {\n      __typename\n      id\n      externalResourceTitle\n    }\n  }\n`;\nexport type CreateCertificateFromUploadMutationFn = Apollo.MutationFunction<\n  CreateCertificateFromUploadMutation,\n  CreateCertificateFromUploadMutationVariables\n>;\n\n/**\n * __useCreateCertificateFromUploadMutation__\n *\n * To run a mutation, you first call `useCreateCertificateFromUploadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateCertificateFromUploadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createCertificateFromUploadMutation, { data, loading, error }] = useCreateCertificateFromUploadMutation({\n *   variables: {\n *      asset: // value for 'asset'\n *      certificateUploadFields: // value for 'certificateUploadFields'\n *   },\n * });\n */\nexport function useCreateCertificateFromUploadMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    CreateCertificateFromUploadMutation,\n    CreateCertificateFromUploadMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<\n    CreateCertificateFromUploadMutation,\n    CreateCertificateFromUploadMutationVariables\n  >(CreateCertificateFromUploadDocument, options);\n}\nexport type CreateCertificateFromUploadMutationHookResult = ReturnType<\n  typeof useCreateCertificateFromUploadMutation\n>;\nexport type CreateCertificateFromUploadMutationResult =\n  Apollo.MutationResult<CreateCertificateFromUploadMutation>;\nexport type CreateCertificateFromUploadMutationOptions = Apollo.BaseMutationOptions<\n  CreateCertificateFromUploadMutation,\n  CreateCertificateFromUploadMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type UpdateBookmarkMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n  note?: Types.InputMaybe<Types.Scalars['String']>;\n  bookmarkFolder: Types.Scalars['ID'];\n}>;\n\nexport type UpdateBookmarkMutation = {\n  __typename?: 'Mutation';\n  UpdateBookmark: { __typename?: 'Bookmark'; id: string };\n};\n\nexport const UpdateBookmarkDocument = gql`\n  mutation UpdateBookmark($id: ID!, $note: String, $bookmarkFolder: ID!) {\n    UpdateBookmark(id: $id, note: $note, bookmarkFolder: $bookmarkFolder) {\n      id\n    }\n  }\n`;\nexport type UpdateBookmarkMutationFn = Apollo.MutationFunction<\n  UpdateBookmarkMutation,\n  UpdateBookmarkMutationVariables\n>;\n\n/**\n * __useUpdateBookmarkMutation__\n *\n * To run a mutation, you first call `useUpdateBookmarkMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateBookmarkMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateBookmarkMutation, { data, loading, error }] = useUpdateBookmarkMutation({\n *   variables: {\n *      id: // value for 'id'\n *      note: // value for 'note'\n *      bookmarkFolder: // value for 'bookmarkFolder'\n *   },\n * });\n */\nexport function useUpdateBookmarkMutation(\n  baseOptions?: Apollo.MutationHookOptions<UpdateBookmarkMutation, UpdateBookmarkMutationVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<UpdateBookmarkMutation, UpdateBookmarkMutationVariables>(\n    UpdateBookmarkDocument,\n    options\n  );\n}\nexport type UpdateBookmarkMutationHookResult = ReturnType<typeof useUpdateBookmarkMutation>;\nexport type UpdateBookmarkMutationResult = Apollo.MutationResult<UpdateBookmarkMutation>;\nexport type UpdateBookmarkMutationOptions = Apollo.BaseMutationOptions<\n  UpdateBookmarkMutation,\n  UpdateBookmarkMutationVariables\n>;\n","import * as Types from '../global-types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type DestroyBookmarkMutationVariables = Types.Exact<{\n  id: Types.Scalars['ID'];\n}>;\n\nexport type DestroyBookmarkMutation = { __typename?: 'Mutation'; DestroyBookmark?: string };\n\nexport const DestroyBookmarkDocument = gql`\n  mutation DestroyBookmark($id: ID!) {\n    DestroyBookmark(id: $id)\n  }\n`;\nexport type DestroyBookmarkMutationFn = Apollo.MutationFunction<\n  DestroyBookmarkMutation,\n  DestroyBookmarkMutationVariables\n>;\n\n/**\n * __useDestroyBookmarkMutation__\n *\n * To run a mutation, you first call `useDestroyBookmarkMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDestroyBookmarkMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [destroyBookmarkMutation, { data, loading, error }] = useDestroyBookmarkMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDestroyBookmarkMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    DestroyBookmarkMutation,\n    DestroyBookmarkMutationVariables\n  >\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useMutation<DestroyBookmarkMutation, DestroyBookmarkMutationVariables>(\n    DestroyBookmarkDocument,\n    options\n  );\n}\nexport type DestroyBookmarkMutationHookResult = ReturnType<typeof useDestroyBookmarkMutation>;\nexport type DestroyBookmarkMutationResult = Apollo.MutationResult<DestroyBookmarkMutation>;\nexport type DestroyBookmarkMutationOptions = Apollo.BaseMutationOptions<\n  DestroyBookmarkMutation,\n  DestroyBookmarkMutationVariables\n>;\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",f=\"month\",h=\"quarter\",c=\"year\",d=\"date\",$=\"Invalid Date\",l=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},g={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},D=\"en\",v={};v[D]=M;var p=function(t){return t instanceof _},S=function(t,e,n){var r;if(!t)return D;if(\"string\"==typeof t)v[t]&&(r=t),e&&(v[t]=e,r=t);else{var i=t.name;v[i]=t,r=i}return!n&&r&&(D=r),r||!n&&D},w=function(t,e){if(p(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=g;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match(l);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===$)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),$=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},l=function(t,e){return O.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,g=\"set\"+(this.$u?\"UTC\":\"\");switch(h){case c:return r?$(1,0):$(31,11);case f:return r?$(1,M):$(0,M+1);case o:var D=this.$locale().weekStart||0,v=(y<D?y+7:y)-D;return $(r?m-v:m+(6-v),M);case a:case d:return l(g+\"Hours\",0);case u:return l(g+\"Minutes\",1);case s:return l(g+\"Seconds\",2);case i:return l(g+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h=\"set\"+(this.$u?\"UTC\":\"\"),$=(n={},n[a]=h+\"Date\",n[d]=h+\"Date\",n[f]=h+\"Month\",n[c]=h+\"FullYear\",n[u]=h+\"Hours\",n[s]=h+\"Minutes\",n[i]=h+\"Seconds\",n[r]=h+\"Milliseconds\",n)[o],l=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[$](l),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else $&&this.$d[$](l);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,$=this;r=Number(r);var l=O.p(h),y=function(t){var e=w($);return O.w(e.date(e.date()+Math.round(t*r)),$)};if(l===f)return this.set(f,this.$M+r);if(l===c)return this.set(c,this.$y+r);if(l===a)return y(1);if(l===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[l]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||$;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].substr(0,s)},c=function(t){return O.s(s%12||12,t,\"0\")},d=n.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,\"0\"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,\"0\"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,\"0\"),s:String(this.$s),ss:O.s(this.$s,2,\"0\"),SSS:O.s(this.$ms,3,\"0\"),Z:i};return r.replace(y,(function(t,e){return e||l[t]||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,$){var l,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,g=this-M,D=O.m(this,M);return D=(l={},l[c]=D/12,l[f]=D,l[h]=D/3,l[o]=(g-m)/6048e5,l[a]=(g-m)/864e5,l[u]=g/n,l[s]=g/e,l[i]=g/t,l)[y]||g,$?D:O.a(D)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return v[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),b=_.prototype;return w.prototype=b,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",f],[\"$y\",c],[\"$D\",d]].forEach((function(t){b[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=v[D],w.Ls=v,w.p={},w}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_advancedFormat=t()}(this,(function(){\"use strict\";return function(e,t,r){var n=t.prototype,s=n.format;r.en.ordinal=function(e){var t=[\"th\",\"st\",\"nd\",\"rd\"],r=e%100;return\"[\"+e+(t[(r-20)%10]||t[r]||t[0])+\"]\"},n.format=function(e){var t=this,r=this.$locale();if(!this.isValid())return s.bind(this)(e);var n=this.$utils(),a=(e||\"YYYY-MM-DDTHH:mm:ssZ\").replace(/\\[([^\\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g,(function(e){switch(e){case\"Q\":return Math.ceil((t.$M+1)/3);case\"Do\":return r.ordinal(t.$D);case\"gggg\":return t.weekYear();case\"GGGG\":return t.isoWeekYear();case\"wo\":return r.ordinal(t.week(),\"W\");case\"w\":case\"ww\":return n.s(t.week(),\"w\"===e?1:2,\"0\");case\"W\":case\"WW\":return n.s(t.isoWeek(),\"W\"===e?1:2,\"0\");case\"k\":case\"kk\":return n.s(String(0===t.$H?24:t.$H),\"k\"===e?1:2,\"0\");case\"X\":return Math.floor(t.$d.getTime()/1e3);case\"x\":return t.$d.getTime();case\"z\":return\"[\"+t.offsetName()+\"]\";case\"zzz\":return\"[\"+t.offsetName(\"long\")+\"]\";default:return e}}));return s.bind(this)(a)}}}));","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_utc=i()}(this,(function(){\"use strict\";var t=\"minute\",i=/[+-]\\d\\d(?::?\\d\\d)?/g,e=/([+-]|\\d\\d)/g;return function(s,f,n){var u=f.prototype;n.utc=function(t){var i={date:t,utc:!0,args:arguments};return new f(i)},u.utc=function(i){var e=n(this.toDate(),{locale:this.$L,utc:!0});return i?e.add(this.utcOffset(),t):e},u.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var o=u.parse;u.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),o.call(this,t)};var r=u.init;u.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else r.call(this)};var a=u.utcOffset;u.utcOffset=function(s,f){var n=this.$utils().u;if(n(s))return this.$u?0:n(this.$offset)?a.call(this):this.$offset;if(\"string\"==typeof s&&(s=function(t){void 0===t&&(t=\"\");var s=t.match(i);if(!s)return null;var f=(\"\"+s[0]).match(e)||[\"-\",0,0],n=f[0],u=60*+f[1]+ +f[2];return 0===u?0:\"+\"===n?u:-u}(s),null===s))return this;var u=Math.abs(s)<=16?60*s:s,o=this;if(f)return o.$offset=u,o.$u=0===s,o;if(0!==s){var r=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(o=this.local().add(u+r,t)).$offset=u,o.$x.$localOffset=r}else o=this.utc();return o};var h=u.format;u.format=function(t){var i=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return h.call(this,i)},u.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||(new Date).getTimezoneOffset());return this.$d.valueOf()-6e4*t},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var l=u.toDate;u.toDate=function(t){return\"s\"===t&&this.$offset?n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate():l.call(this)};var c=u.diff;u.diff=function(t,i,e){if(t&&this.$u===t.$u)return c.call(this,t,i,e);var s=this.local(),f=n(t).local();return c.call(s,f,i,e)}}}));","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_timezone=e()}(this,(function(){\"use strict\";var t={year:0,month:1,day:2,hour:3,minute:4,second:5},e={};return function(n,i,o){var r,a=function(t,n,i){void 0===i&&(i={});var o=new Date(t),r=function(t,n){void 0===n&&(n={});var i=n.timeZoneName||\"short\",o=t+\"|\"+i,r=e[o];return r||(r=new Intl.DateTimeFormat(\"en-US\",{hour12:!1,timeZone:t,year:\"numeric\",month:\"2-digit\",day:\"2-digit\",hour:\"2-digit\",minute:\"2-digit\",second:\"2-digit\",timeZoneName:i}),e[o]=r),r}(n,i);return r.formatToParts(o)},u=function(e,n){for(var i=a(e,n),r=[],u=0;u<i.length;u+=1){var f=i[u],s=f.type,m=f.value,c=t[s];c>=0&&(r[c]=parseInt(m,10))}var d=r[3],l=24===d?0:d,v=r[0]+\"-\"+r[1]+\"-\"+r[2]+\" \"+l+\":\"+r[4]+\":\"+r[5]+\":000\",h=+e;return(o.utc(v).valueOf()-(h-=h%1e3))/6e4},f=i.prototype;f.tz=function(t,e){void 0===t&&(t=r);var n=this.utcOffset(),i=this.toDate(),a=i.toLocaleString(\"en-US\",{timeZone:t}),u=Math.round((i-new Date(a))/1e3/60),f=o(a).$set(\"millisecond\",this.$ms).utcOffset(15*-Math.round(i.getTimezoneOffset()/15)-u,!0);if(e){var s=f.utcOffset();f=f.add(n-s,\"minute\")}return f.$x.$timezone=t,f},f.offsetName=function(t){var e=this.$x.$timezone||o.tz.guess(),n=a(this.valueOf(),e,{timeZoneName:t}).find((function(t){return\"timezonename\"===t.type.toLowerCase()}));return n&&n.value};var s=f.startOf;f.startOf=function(t,e){if(!this.$x||!this.$x.$timezone)return s.call(this,t,e);var n=o(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\"));return s.call(n,t,e).tz(this.$x.$timezone,!0)},o.tz=function(t,e,n){var i=n&&e,a=n||e||r,f=u(+o(),a);if(\"string\"!=typeof t)return o(t).tz(a);var s=function(t,e,n){var i=t-60*e*1e3,o=u(i,n);if(e===o)return[i,e];var r=u(i-=60*(o-e)*1e3,n);return o===r?[i,o]:[t-60*Math.min(o,r)*1e3,Math.max(o,r)]}(o.utc(t,i).valueOf(),f,a),m=s[0],c=s[1],d=o(m).utcOffset(c);return d.$x.$timezone=a,d},o.tz.guess=function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},o.tz.setDefault=function(t){r=t}}}));","export const DEFAULT_TIMEZONE = 'America/New_York';\n","import dayjs from 'dayjs';\nimport advancedFormat from 'dayjs/plugin/advancedFormat';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\nimport { DEFAULT_TIMEZONE } from './constants';\n\ndayjs.extend(advancedFormat);\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\n/**\n *\n * @param date - string in ISO 8601 format\n * @param timeZone - optional time zone (fallback to default time zone if not set)\n * @param format - date display format\n * @returns formatted string\n */\nconst formatTime = (date: string, timeZone: string | undefined, format: string): string => {\n  const timeZoneOrDefault = timeZone ?? DEFAULT_TIMEZONE;\n  return dayjs(date).tz(timeZoneOrDefault).format(format);\n};\n\nexport default formatTime;\n","import { ContentKind } from '../../graphql/global-types';\nimport dayjs from 'dayjs';\nimport { formatTime } from '../format-time';\n\nexport const VILT_KINDS = [ContentKind.Webinar, ContentKind.WebinarCourse];\nexport const ILT_KINDS = [ContentKind.InPersonEvent, ContentKind.InPersonEventCourse];\n\nexport default function courseRunsPhrase(\n  kind: ContentKind | undefined,\n  startDate: string,\n  endDate: string | undefined,\n  timeZone: string | undefined\n): string {\n  if (kind && (ILT_KINDS.includes(kind) || VILT_KINDS.includes(kind))) {\n    if (endDate) {\n      const isSameDay = dayjs(startDate).isSame(dayjs(endDate), 'day');\n      if (isSameDay) {\n        return `${formatTime(startDate, timeZone, 'ddd, MMM Do YYYY hh:mm a')} – ${formatTime(\n          endDate,\n          timeZone,\n          'hh:mm a z'\n        )}`;\n      }\n\n      return `${formatTime(startDate, timeZone, 'ddd, MMM Do YYYY hh:mm a')} – ${formatTime(\n        endDate,\n        timeZone,\n        'ddd, MMM Do YYYY hh:mm a z'\n      )}`;\n    }\n\n    return `${formatTime(startDate, timeZone, 'ddd, MMM Do YYYY hh:mm a z')}`;\n  }\n\n  if (endDate) {\n    return `${formatTime(startDate, timeZone, 'MMM Do YYYY')} – ${formatTime(\n      endDate,\n      timeZone,\n      'MMM Do YYYY'\n    )}`;\n  }\n\n  return formatTime(startDate, timeZone, 'MMM Do YYYY');\n}\n"],"names":["docCache","fragmentSourceMap","printFragmentWarnings","experimentalFragmentVariables","normalize","string","cacheKeyFromLoc","loc","processFragments","ast","seenKeys","definitions","fragmentDefinition","fragmentName","sourceKey","sourceKeySet","__assign","stripLoc","doc","workSet","node","key","value","parseDocument","source","cacheKey","parsed","parse","gql","literals","args","_i","result","arg","i","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","extras","gql_1","useApolloClient","override","context","useContext","getApolloContext","client","invariant","didWarnUncachedGetSnapshot","uSESKey","realHook","React","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","_a","React.useState","inst","forceUpdate","canUseLayoutEffect","React.useLayoutEffect","checkIfSnapshotChanged","React.useEffect","DocumentType","cache","operationName","type","name","parser","document","cached","variables","fragments","queries","mutations","subscriptions","x","definition","payload","verifyDocumentType","operation","requiredOperationName","usedOperationName","hasOwnProperty","useQuery","query","options","useInternalState","stateRef","useRef","InternalState","state","useState","setTick","tick","previous","canUseWeakSet","maybeDeepFreeze","NetworkStatus","canUseWeakMap","previousResult","previousData","_this","resolve","obsQuery","useCallback","onNext","equal","onError","error","last","subscription","queryResult","watchQueryOptions","currentWatchQueryOptions","toMerge","globalDefaults","compact","mergeOptions","_b","skip","otherOptions","__rest","_c","fetchPolicy","_d","initialFetchPolicy","data","useMemo","ssrAllowed","nextResult","resultWithoutPartial","isNonEmptyArray","ApolloError","EAGER_METHODS","useLazyQuery","internalState","execOptionsRef","merged","useQueryResult","eagerMethods","_loop_1","method","EAGER_METHODS_1","execute","executeOptions","promise","useMutation","mutation","setResult","ref","baseOptions","mutationId","clientOptions","response","errors","result_1","result_2","reset","useEffect","LoadingDots","jsxs","jsx","AlternativePricingType","ContentItemDisplayType","ContentKind","SortColumn","SortDirection","ContentFragmentFragmentDoc","LocationFragmentFragmentDoc","CatalogMetaFragmentFragmentDoc","defaultOptions","CatalogContentDocument","useCatalogContentQuery","Apollo.useQuery","useCatalogContentLazyQuery","Apollo.useLazyQuery","CatalogDocument","useCatalogQuery","useCatalogLazyQuery","LanguagesQueryDocument","useLanguagesQueryQuery","useLanguagesQueryLazyQuery","ContentsDocument","useContentsQuery","useContentsLazyQuery","RssItemsDocument","useRssItemsQuery","useRssItemsLazyQuery","UserRecentContentDocument","useUserRecentContentQuery","useUserRecentContentLazyQuery","UserContentItemsDocument","useUserContentItemsQuery","useUserContentItemsLazyQuery","UserArchivesDocument","useUserArchivesQuery","useUserArchivesLazyQuery","UserWaitlistDocument","useUserWaitlistQuery","useUserWaitlistLazyQuery","UserBookmarksDocument","useUserBookmarksQuery","useUserBookmarksLazyQuery","UserCertificatesDocument","useUserCertificatesQuery","useUserCertificatesLazyQuery","ContentGroupsDocument","useContentGroupsQuery","useContentGroupsLazyQuery","UserBookmarksByFolderDocument","useUserBookmarksByFolderQuery","useUserBookmarksByFolderLazyQuery","UserCourseCompletionProgressDocument","useUserCourseCompletionProgressQuery","useUserCourseCompletionProgressLazyQuery","UserCourseProgressDocument","useUserCourseProgressQuery","useUserCourseProgressLazyQuery","UserCourseAwardCountsDocument","useUserCourseAwardCountsQuery","useUserCourseAwardCountsLazyQuery","UserCourseCollaborationsDocument","useUserCourseCollaborationsQuery","useUserCourseCollaborationsLazyQuery","UserCertificateFieldsDocument","useUserCertificateFieldsQuery","useUserCertificateFieldsLazyQuery","AddResourceToQueueDocument","useAddResourceToQueueMutation","Apollo.useMutation","ArchiveUserCourseDocument","useArchiveUserCourseMutation","ArchiveUserLearningPathDocument","useArchiveUserLearningPathMutation","ReinstateUserLearningPathDocument","useReinstateUserLearningPathMutation","ReinstateUserCourseDocument","useReinstateUserCourseMutation","UnenrollFromWaitlistDocument","useUnenrollFromWaitlistMutation","UpdateBookmarkFolderDocument","useUpdateBookmarkFolderMutation","DestroyBookmarkFolderDocument","useDestroyBookmarkFolderMutation","CreateCertificateFromUploadDocument","useCreateCertificateFromUploadMutation","UpdateBookmarkDocument","useUpdateBookmarkMutation","DestroyBookmarkDocument","useDestroyBookmarkMutation","t","e","module","this","n","r","s","u","a","o","f","h","c","d","$","l","y","M","m","g","D","v","p","_","S","w","O","b","DEFAULT_TIMEZONE","dayjs","advancedFormat","utc","timezone","formatTime","date","timeZone","format","timeZoneOrDefault","VILT_KINDS","ILT_KINDS","courseRunsPhrase","kind","startDate","endDate"],"mappings":"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"}