{"version":3,"file":"printer-283319ec.js","sources":["../../node_modules/graphql/jsutils/devAssert.mjs","../../node_modules/graphql/language/ast.mjs","../../node_modules/graphql/language/kinds.mjs","../../node_modules/graphql/language/characterClasses.mjs","../../node_modules/graphql/language/blockString.mjs","../../node_modules/graphql/jsutils/inspect.mjs","../../node_modules/graphql/jsutils/instanceOf.mjs","../../node_modules/graphql/language/source.mjs","../../node_modules/graphql/language/printString.mjs","../../node_modules/graphql/language/visitor.mjs","../../node_modules/graphql/language/printer.mjs"],"sourcesContent":["export function devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport class Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport class Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nexport const QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n\nexport { OperationTypeNode };\n","/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n\nexport { Kind };\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n","/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nexport function isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nexport function isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nexport function isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","import { isWhiteSpace } from './characterClasses.mjs';\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nexport function dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nexport function isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","const MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","import { inspect } from './inspect.mjs';\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\n\nexport const instanceOf =\n  /* c8 ignore next 6 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  // eslint-disable-next-line no-undef\n  process.env.NODE_ENV === 'production'\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = inspect(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport class Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      devAssert(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      devAssert(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nexport function printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isNode, QueryDocumentKeys } from './ast.mjs';\nimport { Kind } from './kinds.mjs';\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport const BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexport function visit(root, visitor, visitorKeys = QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if (isNode(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nexport function getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n","import { printBlockString } from './blockString.mjs';\nimport { printString } from './printString.mjs';\nimport { visit } from './visitor.mjs';\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString ? printBlockString(value) : printString(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n"],"names":["devAssert","condition","message","Location","startToken","endToken","source","Token","kind","start","end","line","column","value","QueryDocumentKeys","kindValues","isNode","maybeNode","maybeKind","OperationTypeNode","Kind","isWhiteSpace","code","isDigit","isLetter","isNameStart","isNameContinue","dedentBlockStringLines","lines","_firstNonEmptyLine2","commonIndent","firstNonEmptyLine","lastNonEmptyLine","i","_firstNonEmptyLine","indent","leadingWhitespace","str","isPrintableAsBlockString","isEmptyLine","hasIndent","hasCommonIndent","seenNonEmptyLine","printBlockString","options","escapedValue","isSingleLine","forceLeadingNewLine","hasTrailingTripleQuotes","hasTrailingQuote","hasTrailingSlash","forceTrailingNewline","printAsMultipleLines","result","skipLeadingNewLine","MAX_ARRAY_LENGTH","MAX_RECURSIVE_DEPTH","inspect","formatValue","seenValues","formatObjectValue","previouslySeenValues","isJSONable","jsonValue","formatArray","formatObject","object","entries","getObjectTag","key","array","len","remaining","items","tag","name","instanceOf","constructor","Source","body","locationOffset","isSource","printString","escapedRegExp","escapedReplacer","escapeSequences","BREAK","visit","root","visitor","visitorKeys","enterLeaveMap","getEnterLeaveForKind","stack","inArray","keys","index","edits","node","parent","path","ancestors","isLeaving","isEdited","editOffset","editKey","editValue","arrayKey","_enterLeaveMap$get","_enterLeaveMap$get2","visitFn","_node$kind","visitInParallel","visitors","skipping","mergedVisitor","hasVisitor","enterList","leaveList","enter","leave","mergedEnterLeave","args","_enterList$i","_leaveList$i","kindVisitor","getVisitFn","print","ast","printDocASTReducer","MAX_LINE_LENGTH","join","varDefs","wrap","prefix","variable","type","defaultValue","directives","selections","block","alias","selectionSet","argsLine","typeCondition","variableDefinitions","isBlockString","values","fields","description","operationTypes","operation","interfaces","hasMultilineItems","types","repeatable","locations","maybeArray","separator","_maybeArray$filter$jo","x","maybeString","_maybeArray$some"],"mappings":"AAAO,SAASA,EAAUC,EAAWC,EAAS,CAG5C,GAAI,CAFqB,QAAQD,CAAS,EAGxC,MAAM,IAAI,MAAMC,CAAO,CAE3B,CCFO,MAAMC,EAAS,CAoBpB,YAAYC,EAAYC,EAAUC,EAAQ,CACxC,KAAK,MAAQF,EAAW,MACxB,KAAK,IAAMC,EAAS,IACpB,KAAK,WAAaD,EAClB,KAAK,SAAWC,EAChB,KAAK,OAASC,CACf,CAED,IAAK,OAAO,WAAW,GAAI,CACzB,MAAO,UACR,CAED,QAAS,CACP,MAAO,CACL,MAAO,KAAK,MACZ,IAAK,KAAK,GAChB,CACG,CACH,CAMO,MAAMC,EAAM,CAiCjB,YAAYC,EAAMC,EAAOC,EAAKC,EAAMC,EAAQC,EAAO,CACjD,KAAK,KAAOL,EACZ,KAAK,MAAQC,EACb,KAAK,IAAMC,EACX,KAAK,KAAOC,EACZ,KAAK,OAASC,EAEd,KAAK,MAAQC,EACb,KAAK,KAAO,KACZ,KAAK,KAAO,IACb,CAED,IAAK,OAAO,WAAW,GAAI,CACzB,MAAO,OACR,CAED,QAAS,CACP,MAAO,CACL,KAAM,KAAK,KACX,MAAO,KAAK,MACZ,KAAM,KAAK,KACX,OAAQ,KAAK,MACnB,CACG,CACH,CAQO,MAAMC,EAAoB,CAC/B,KAAM,CAAE,EACR,SAAU,CAAC,aAAa,EACxB,oBAAqB,CACnB,OACA,sBACA,aACA,cACD,EACD,mBAAoB,CAAC,WAAY,OAAQ,eAAgB,YAAY,EACrE,SAAU,CAAC,MAAM,EACjB,aAAc,CAAC,YAAY,EAC3B,MAAO,CAAC,QAAS,OAAQ,YAAa,aAAc,cAAc,EAClE,SAAU,CAAC,OAAQ,OAAO,EAC1B,eAAgB,CAAC,OAAQ,YAAY,EACrC,eAAgB,CAAC,gBAAiB,aAAc,cAAc,EAC9D,mBAAoB,CAClB,OACA,sBACA,gBACA,aACA,cACD,EACD,SAAU,CAAE,EACZ,WAAY,CAAE,EACd,YAAa,CAAE,EACf,aAAc,CAAE,EAChB,UAAW,CAAE,EACb,UAAW,CAAE,EACb,UAAW,CAAC,QAAQ,EACpB,YAAa,CAAC,QAAQ,EACtB,YAAa,CAAC,OAAQ,OAAO,EAC7B,UAAW,CAAC,OAAQ,WAAW,EAC/B,UAAW,CAAC,MAAM,EAClB,SAAU,CAAC,MAAM,EACjB,YAAa,CAAC,MAAM,EACpB,iBAAkB,CAAC,cAAe,aAAc,gBAAgB,EAChE,wBAAyB,CAAC,MAAM,EAChC,qBAAsB,CAAC,cAAe,OAAQ,YAAY,EAC1D,qBAAsB,CACpB,cACA,OACA,aACA,aACA,QACD,EACD,gBAAiB,CAAC,cAAe,OAAQ,YAAa,OAAQ,YAAY,EAC1E,qBAAsB,CACpB,cACA,OACA,OACA,eACA,YACD,EACD,wBAAyB,CACvB,cACA,OACA,aACA,aACA,QACD,EACD,oBAAqB,CAAC,cAAe,OAAQ,aAAc,OAAO,EAClE,mBAAoB,CAAC,cAAe,OAAQ,aAAc,QAAQ,EAClE,oBAAqB,CAAC,cAAe,OAAQ,YAAY,EACzD,0BAA2B,CAAC,cAAe,OAAQ,aAAc,QAAQ,EACzE,oBAAqB,CAAC,cAAe,OAAQ,YAAa,WAAW,EACrE,gBAAiB,CAAC,aAAc,gBAAgB,EAChD,oBAAqB,CAAC,OAAQ,YAAY,EAC1C,oBAAqB,CAAC,OAAQ,aAAc,aAAc,QAAQ,EAClE,uBAAwB,CAAC,OAAQ,aAAc,aAAc,QAAQ,EACrE,mBAAoB,CAAC,OAAQ,aAAc,OAAO,EAClD,kBAAmB,CAAC,OAAQ,aAAc,QAAQ,EAClD,yBAA0B,CAAC,OAAQ,aAAc,QAAQ,CAC3D,EACMC,EAAa,IAAI,IAAI,OAAO,KAAKD,CAAiB,CAAC,EAKlD,SAASE,EAAOC,EAAW,CAChC,MAAMC,EACJD,GAAc,KAA+B,OAASA,EAAU,KAClE,OAAO,OAAOC,GAAc,UAAYH,EAAW,IAAIG,CAAS,CAClE,CAGG,IAACC,GAEH,SAAUA,EAAmB,CAC5BA,EAAkB,MAAW,QAC7BA,EAAkB,SAAc,WAChCA,EAAkB,aAAkB,cACtC,GAAGA,IAAsBA,EAAoB,CAAA,EAAG,EC1M7C,IAACC,GAEH,SAAUA,EAAM,CACfA,EAAK,KAAU,OACfA,EAAK,SAAc,WACnBA,EAAK,qBAA0B,sBAC/BA,EAAK,oBAAyB,qBAC9BA,EAAK,cAAmB,eACxBA,EAAK,MAAW,QAChBA,EAAK,SAAc,WACnBA,EAAK,gBAAqB,iBAC1BA,EAAK,gBAAqB,iBAC1BA,EAAK,oBAAyB,qBAC9BA,EAAK,SAAc,WACnBA,EAAK,IAAS,WACdA,EAAK,MAAW,aAChBA,EAAK,OAAY,cACjBA,EAAK,QAAa,eAClBA,EAAK,KAAU,YACfA,EAAK,KAAU,YACfA,EAAK,KAAU,YACfA,EAAK,OAAY,cACjBA,EAAK,aAAkB,cACvBA,EAAK,UAAe,YACpBA,EAAK,WAAgB,YACrBA,EAAK,UAAe,WACpBA,EAAK,cAAmB,cACxBA,EAAK,kBAAuB,mBAC5BA,EAAK,0BAA+B,0BACpCA,EAAK,uBAA4B,uBACjCA,EAAK,uBAA4B,uBACjCA,EAAK,iBAAsB,kBAC3BA,EAAK,uBAA4B,uBACjCA,EAAK,0BAA+B,0BACpCA,EAAK,sBAA2B,sBAChCA,EAAK,qBAA0B,qBAC/BA,EAAK,sBAA2B,sBAChCA,EAAK,6BAAkC,4BACvCA,EAAK,qBAA0B,sBAC/BA,EAAK,iBAAsB,kBAC3BA,EAAK,sBAA2B,sBAChCA,EAAK,sBAA2B,sBAChCA,EAAK,yBAA8B,yBACnCA,EAAK,qBAA0B,qBAC/BA,EAAK,oBAAyB,oBAC9BA,EAAK,4BAAiC,0BACxC,GAAGA,IAASA,EAAO,CAAE,EAAC,ECzCf,SAASC,EAAaC,EAAM,CACjC,OAAOA,IAAS,GAAUA,IAAS,EACrC,CASO,SAASC,EAAQD,EAAM,CAC5B,OAAOA,GAAQ,IAAUA,GAAQ,EACnC,CAYO,SAASE,EAASF,EAAM,CAC7B,OACGA,GAAQ,IAAUA,GAAQ,KAC1BA,GAAQ,IAAUA,GAAQ,EAE/B,CAUO,SAASG,GAAYH,EAAM,CAChC,OAAOE,EAASF,CAAI,GAAKA,IAAS,EACpC,CAWO,SAASI,GAAeJ,EAAM,CACnC,OAAOE,EAASF,CAAI,GAAKC,EAAQD,CAAI,GAAKA,IAAS,EACrD,CCrDO,SAASK,GAAuBC,EAAO,CAC5C,IAAIC,EAEJ,IAAIC,EAAe,OAAO,iBACtBC,EAAoB,KACpBC,EAAmB,GAEvB,QAASC,EAAI,EAAGA,EAAIL,EAAM,OAAQ,EAAEK,EAAG,CACrC,IAAIC,EAEJ,MAAMvB,EAAOiB,EAAMK,CAAC,EACdE,EAASC,EAAkBzB,CAAI,EAEjCwB,IAAWxB,EAAK,SAIpBoB,GACGG,EAAqBH,KAAuB,MAC7CG,IAAuB,OACnBA,EACAD,EACND,EAAmBC,EAEfA,IAAM,GAAKE,EAASL,IACtBA,EAAeK,GAElB,CAED,OAAOP,EACJ,IAAI,CAACjB,EAAMsB,IAAOA,IAAM,EAAItB,EAAOA,EAAK,MAAMmB,CAAY,CAAE,EAC5D,OACED,EAAsBE,KAAuB,MAC5CF,IAAwB,OACtBA,EACA,EACJG,EAAmB,CACzB,CACA,CAEA,SAASI,EAAkBC,EAAK,CAC9B,IAAIJ,EAAI,EAER,KAAOA,EAAII,EAAI,QAAUhB,EAAagB,EAAI,WAAWJ,CAAC,CAAC,GACrD,EAAEA,EAGJ,OAAOA,CACT,CAKO,SAASK,GAAyBzB,EAAO,CAC9C,GAAIA,IAAU,GACZ,MAAO,GAGT,IAAI0B,EAAc,GACdC,EAAY,GACZC,EAAkB,GAClBC,EAAmB,GAEvB,QAAST,EAAI,EAAGA,EAAIpB,EAAM,OAAQ,EAAEoB,EAClC,OAAQpB,EAAM,YAAYoB,CAAC,EAAC,CAC1B,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACH,MAAO,GAGT,IAAK,IAEH,MAAO,GAGT,IAAK,IAEH,GAAIM,GAAe,CAACG,EAClB,MAAO,GAGTA,EAAmB,GACnBH,EAAc,GACdC,EAAY,GACZ,MAEF,IAAK,GAEL,IAAK,IAEHA,IAAcA,EAAYD,GAC1B,MAEF,QACEE,IAAoBA,EAAkBD,GACtCD,EAAc,EACjB,CAOH,MAJI,EAAAA,GAIAE,GAAmBC,EAKzB,CASO,SAASC,EAAiB9B,EAAO+B,EAAS,CAC/C,MAAMC,EAAehC,EAAM,QAAQ,OAAQ,OAAO,EAE5Ce,EAAQiB,EAAa,MAAM,cAAc,EACzCC,EAAelB,EAAM,SAAW,EAEhCmB,EACJnB,EAAM,OAAS,GACfA,EACG,MAAM,CAAC,EACP,MAAOjB,GAASA,EAAK,SAAW,GAAKU,EAAaV,EAAK,WAAW,CAAC,CAAC,CAAC,EAEpEqC,EAA0BH,EAAa,SAAS,OAAO,EAEvDI,EAAmBpC,EAAM,SAAS,GAAG,GAAK,CAACmC,EAC3CE,EAAmBrC,EAAM,SAAS,IAAI,EACtCsC,EAAuBF,GAAoBC,EAC3CE,EACJ,EAAER,GAAY,MAA8BA,EAAQ,YACnD,CAACE,GACAjC,EAAM,OAAS,IACfsC,GACAJ,GACAC,GACJ,IAAIK,EAAS,GAEb,MAAMC,EAAqBR,GAAgBzB,EAAaR,EAAM,WAAW,CAAC,CAAC,EAE3E,OAAKuC,GAAwB,CAACE,GAAuBP,KACnDM,GAAU;AAAA,GAGZA,GAAUR,GAENO,GAAwBD,KAC1BE,GAAU;AAAA,GAGL,MAAQA,EAAS,KAC1B,CCjLA,MAAME,EAAmB,GACnBC,EAAsB,EAKrB,SAASC,EAAQ5C,EAAO,CAC7B,OAAO6C,EAAY7C,EAAO,CAAA,CAAE,CAC9B,CAEA,SAAS6C,EAAY7C,EAAO8C,EAAY,CACtC,OAAQ,OAAO9C,EAAK,CAClB,IAAK,SACH,OAAO,KAAK,UAAUA,CAAK,EAE7B,IAAK,WACH,OAAOA,EAAM,KAAO,aAAaA,EAAM,QAAU,aAEnD,IAAK,SACH,OAAO+C,EAAkB/C,EAAO8C,CAAU,EAE5C,QACE,OAAO,OAAO9C,CAAK,CACtB,CACH,CAEA,SAAS+C,EAAkB/C,EAAOgD,EAAsB,CACtD,GAAIhD,IAAU,KACZ,MAAO,OAGT,GAAIgD,EAAqB,SAAShD,CAAK,EACrC,MAAO,aAGT,MAAM8C,EAAa,CAAC,GAAGE,EAAsBhD,CAAK,EAElD,GAAIiD,EAAWjD,CAAK,EAAG,CACrB,MAAMkD,EAAYlD,EAAM,SAExB,GAAIkD,IAAclD,EAChB,OAAO,OAAOkD,GAAc,SACxBA,EACAL,EAAYK,EAAWJ,CAAU,CAExC,SAAU,MAAM,QAAQ9C,CAAK,EAC5B,OAAOmD,EAAYnD,EAAO8C,CAAU,EAGtC,OAAOM,EAAapD,EAAO8C,CAAU,CACvC,CAEA,SAASG,EAAWjD,EAAO,CACzB,OAAO,OAAOA,EAAM,QAAW,UACjC,CAEA,SAASoD,EAAaC,EAAQP,EAAY,CACxC,MAAMQ,EAAU,OAAO,QAAQD,CAAM,EAErC,OAAIC,EAAQ,SAAW,EACd,KAGLR,EAAW,OAASH,EACf,IAAMY,EAAaF,CAAM,EAAI,IAM/B,KAHYC,EAAQ,IACzB,CAAC,CAACE,EAAKxD,CAAK,IAAMwD,EAAM,KAAOX,EAAY7C,EAAO8C,CAAU,CAChE,EAC2B,KAAK,IAAI,EAAI,IACxC,CAEA,SAASK,EAAYM,EAAOX,EAAY,CACtC,GAAIW,EAAM,SAAW,EACnB,MAAO,KAGT,GAAIX,EAAW,OAASH,EACtB,MAAO,UAGT,MAAMe,EAAM,KAAK,IAAIhB,EAAkBe,EAAM,MAAM,EAC7CE,EAAYF,EAAM,OAASC,EAC3BE,EAAQ,CAAA,EAEd,QAASxC,EAAI,EAAGA,EAAIsC,EAAK,EAAEtC,EACzBwC,EAAM,KAAKf,EAAYY,EAAMrC,CAAC,EAAG0B,CAAU,CAAC,EAG9C,OAAIa,IAAc,EAChBC,EAAM,KAAK,iBAAiB,EACnBD,EAAY,GACrBC,EAAM,KAAK,OAAOD,cAAsB,EAGnC,IAAMC,EAAM,KAAK,IAAI,EAAI,GAClC,CAEA,SAASL,EAAaF,EAAQ,CAC5B,MAAMQ,EAAM,OAAO,UAAU,SAC1B,KAAKR,CAAM,EACX,QAAQ,aAAc,EAAE,EACxB,QAAQ,KAAM,EAAE,EAEnB,GAAIQ,IAAQ,UAAY,OAAOR,EAAO,aAAgB,WAAY,CAChE,MAAMS,EAAOT,EAAO,YAAY,KAEhC,GAAI,OAAOS,GAAS,UAAYA,IAAS,GACvC,OAAOA,CAEV,CAED,OAAOD,CACT,CC1GY,MAACE,EAKP,SAAoB/D,EAAOgE,EAAa,CACtC,OAAOhE,aAAiBgE,CACzB,ECJA,MAAMC,CAAO,CAClB,YACEC,EACAJ,EAAO,kBACPK,EAAiB,CACf,KAAM,EACN,OAAQ,CACT,EACD,CACA,OAAOD,GAAS,UACd/E,EAAU,GAAO,oCAAoCyD,EAAQsB,CAAI,IAAI,EACvE,KAAK,KAAOA,EACZ,KAAK,KAAOJ,EACZ,KAAK,eAAiBK,EACtB,KAAK,eAAe,KAAO,GACzBhF,EACE,GACA,2DACR,EACI,KAAK,eAAe,OAAS,GAC3BA,EACE,GACA,6DACR,CACG,CAED,IAAK,OAAO,WAAW,GAAI,CACzB,MAAO,QACR,CACH,CAOO,SAASiF,GAAS3E,EAAQ,CAC/B,OAAOsE,EAAWtE,EAAQwE,CAAM,CAClC,CC7CO,SAASI,EAAY7C,EAAK,CAC/B,MAAO,IAAIA,EAAI,QAAQ8C,GAAeC,EAAe,IACvD,CAEA,MAAMD,GAAgB,gCAEtB,SAASC,GAAgB/C,EAAK,CAC5B,OAAOgD,GAAgBhD,EAAI,WAAW,CAAC,CAAC,CAC1C,CAEA,MAAMgD,GAAkB,CACttKaC,EAAQ,OAAO,OAAO,EAAE,EAgF9B,SAASC,GAAMC,EAAMC,EAASC,EAAc5E,EAAmB,CACpE,MAAM6E,EAAgB,IAAI,IAE1B,UAAWnF,KAAQ,OAAO,OAAOY,CAAI,EACnCuE,EAAc,IAAInF,EAAMoF,EAAqBH,EAASjF,CAAI,CAAC,EAI7D,IAAIqF,EACAC,EAAU,MAAM,QAAQN,CAAI,EAC5BO,EAAO,CAACP,CAAI,EACZQ,EAAQ,GACRC,EAAQ,CAAA,EACRC,EAAOV,EACPnB,EACA8B,EACJ,MAAMC,EAAO,CAAA,EACPC,EAAY,CAAA,EAGlB,EAAG,CACDL,IACA,MAAMM,EAAYN,IAAUD,EAAK,OAC3BQ,EAAWD,GAAaL,EAAM,SAAW,EAE/C,GAAIK,EAAW,CAKb,GAJAjC,EAAMgC,EAAU,SAAW,EAAI,OAAYD,EAAKA,EAAK,OAAS,CAAC,EAC/DF,EAAOC,EACPA,EAASE,EAAU,MAEfE,EACF,GAAIT,EAAS,CACXI,EAAOA,EAAK,QACZ,IAAIM,EAAa,EAEjB,SAAW,CAACC,EAASC,CAAS,IAAKT,EAAO,CACxC,MAAMU,EAAWF,EAAUD,EAEvBE,IAAc,MAChBR,EAAK,OAAOS,EAAU,CAAC,EACvBH,KAEAN,EAAKS,CAAQ,EAAID,CAEpB,CACX,KAAe,CACLR,EAAO,OAAO,iBACZ,CAAE,EACF,OAAO,0BAA0BA,CAAI,CACjD,EAEU,SAAW,CAACO,EAASC,CAAS,IAAKT,EACjCC,EAAKO,CAAO,EAAIC,CAEnB,CAGHV,EAAQH,EAAM,MACdE,EAAOF,EAAM,KACbI,EAAQJ,EAAM,MACdC,EAAUD,EAAM,QAChBA,EAAQA,EAAM,IACf,SAAUM,EAAQ,CAIjB,GAHA9B,EAAMyB,EAAUE,EAAQD,EAAKC,CAAK,EAClCE,EAAOC,EAAO9B,CAAG,EAEb6B,GAAS,KACX,SAGFE,EAAK,KAAK/B,CAAG,CACd,CAED,IAAIhB,EAEJ,GAAI,CAAC,MAAM,QAAQ6C,CAAI,EAAG,CACxB,IAAIU,EAAoBC,EAExB7F,EAAOkF,CAAI,GAAKlG,EAAU,GAAO,qBAAqByD,EAAQyC,CAAI,IAAI,EACtE,MAAMY,EAAUR,GACXM,EAAqBjB,EAAc,IAAIO,EAAK,IAAI,KAAO,MACxDU,IAAuB,OACrB,OACAA,EAAmB,OACpBC,EAAsBlB,EAAc,IAAIO,EAAK,IAAI,KAAO,MACzDW,IAAwB,OACxB,OACAA,EAAoB,MAMxB,GALAxD,EACEyD,GAAY,KACR,OACAA,EAAQ,KAAKrB,EAASS,EAAM7B,EAAK8B,EAAQC,EAAMC,CAAS,EAE1DhD,IAAWiC,EACb,MAGF,GAAIjC,IAAW,IACb,GAAI,CAACiD,EAAW,CACdF,EAAK,IAAG,EACR,QACD,UACQ/C,IAAW,SACpB4C,EAAM,KAAK,CAAC5B,EAAKhB,CAAM,CAAC,EAEpB,CAACiD,GACH,GAAItF,EAAOqC,CAAM,EACf6C,EAAO7C,MACF,CACL+C,EAAK,IAAG,EACR,QACD,CAGN,CAMD,GAJI/C,IAAW,QAAakD,GAC1BN,EAAM,KAAK,CAAC5B,EAAK6B,CAAI,CAAC,EAGpBI,EACFF,EAAK,IAAG,MACH,CACL,IAAIW,EAEJlB,EAAQ,CACN,QAAAC,EACA,MAAAE,EACA,KAAAD,EACA,MAAAE,EACA,KAAMJ,CACd,EACMC,EAAU,MAAM,QAAQI,CAAI,EAC5BH,EAAOD,EACHI,GACCa,EAAarB,EAAYQ,EAAK,IAAI,KAAO,MAC1Ca,IAAe,OACfA,EACA,GACJf,EAAQ,GACRC,EAAQ,CAAA,EAEJE,GACFE,EAAU,KAAKF,CAAM,EAGvBA,EAASD,CACV,CACL,OAAWL,IAAU,QAEnB,OAAII,EAAM,SAAW,EAEZA,EAAMA,EAAM,OAAS,CAAC,EAAE,CAAC,EAG3BT,CACT,CAQO,SAASwB,GAAgBC,EAAU,CACxC,MAAMC,EAAW,IAAI,MAAMD,EAAS,MAAM,EAAE,KAAK,IAAI,EAC/CE,EAAgB,OAAO,OAAO,IAAI,EAExC,UAAW3G,KAAQ,OAAO,OAAOY,CAAI,EAAG,CACtC,IAAIgG,EAAa,GACjB,MAAMC,EAAY,IAAI,MAAMJ,EAAS,MAAM,EAAE,KAAK,MAAS,EACrDK,EAAY,IAAI,MAAML,EAAS,MAAM,EAAE,KAAK,MAAS,EAE3D,QAAShF,EAAI,EAAGA,EAAIgF,EAAS,OAAQ,EAAEhF,EAAG,CACxC,KAAM,CAAE,MAAAsF,EAAO,MAAAC,GAAU5B,EAAqBqB,EAAShF,CAAC,EAAGzB,CAAI,EAC/D4G,IAAeA,EAAaG,GAAS,MAAQC,GAAS,MACtDH,EAAUpF,CAAC,EAAIsF,EACfD,EAAUrF,CAAC,EAAIuF,CAChB,CAED,GAAI,CAACJ,EACH,SAGF,MAAMK,EAAmB,CACvB,SAASC,EAAM,CACb,MAAMxB,EAAOwB,EAAK,CAAC,EAEnB,QAASzF,EAAI,EAAGA,EAAIgF,EAAS,OAAQhF,IACnC,GAAIiF,EAASjF,CAAC,IAAM,KAAM,CACxB,IAAI0F,EAEJ,MAAMtE,GACHsE,EAAeN,EAAUpF,CAAC,KAAO,MAAQ0F,IAAiB,OACvD,OACAA,EAAa,MAAMV,EAAShF,CAAC,EAAGyF,CAAI,EAE1C,GAAIrE,IAAW,GACb6D,EAASjF,CAAC,EAAIiE,UACL7C,IAAWiC,EACpB4B,EAASjF,CAAC,EAAIqD,UACLjC,IAAW,OACpB,OAAOA,CAEV,CAEJ,EAED,SAASqE,EAAM,CACb,MAAMxB,EAAOwB,EAAK,CAAC,EAEnB,QAASzF,EAAI,EAAGA,EAAIgF,EAAS,OAAQhF,IACnC,GAAIiF,EAASjF,CAAC,IAAM,KAAM,CACxB,IAAI2F,EAEJ,MAAMvE,GACHuE,EAAeN,EAAUrF,CAAC,KAAO,MAAQ2F,IAAiB,OACvD,OACAA,EAAa,MAAMX,EAAShF,CAAC,EAAGyF,CAAI,EAE1C,GAAIrE,IAAWiC,EACb4B,EAASjF,CAAC,EAAIqD,UACLjC,IAAW,QAAaA,IAAW,GAC5C,OAAOA,CAEV,MAAU6D,EAASjF,CAAC,IAAMiE,IACzBgB,EAASjF,CAAC,EAAI,KAGnB,CACP,EACIkF,EAAc3G,CAAI,EAAIiH,CACvB,CAED,OAAON,CACT,CAKO,SAASvB,EAAqBH,EAASjF,EAAM,CAClD,MAAMqH,EAAcpC,EAAQjF,CAAI,EAEhC,OAAI,OAAOqH,GAAgB,SAElBA,EACE,OAAOA,GAAgB,WAEzB,CACL,MAAOA,EACP,MAAO,MACb,EAGS,CACL,MAAOpC,EAAQ,MACf,MAAOA,EAAQ,KACnB,CACA,CAUO,SAASqC,GAAWrC,EAASjF,EAAM8F,EAAW,CACnD,KAAM,CAAE,MAAAiB,EAAO,MAAAC,CAAK,EAAK5B,EAAqBH,EAASjF,CAAI,EAC3D,OAAO8F,EAAYkB,EAAQD,CAC7B,CChWO,SAASQ,GAAMC,EAAK,CACzB,OAAOzC,GAAMyC,EAAKC,EAAkB,CACtC,CACA,MAAMC,GAAkB,GAClBD,GAAqB,CACzB,KAAM,CACJ,MAAQ/B,GAASA,EAAK,KACvB,EACD,SAAU,CACR,MAAQA,GAAS,IAAMA,EAAK,IAC7B,EAED,SAAU,CACR,MAAQA,GAASiC,EAAKjC,EAAK,YAAa;AAAA;AAAA,CAAM,CAC/C,EACD,oBAAqB,CACnB,MAAMA,EAAM,CACV,MAAMkC,EAAUC,EAAK,IAAKF,EAAKjC,EAAK,oBAAqB,IAAI,EAAG,GAAG,EAC7DoC,EAASH,EACb,CACEjC,EAAK,UACLiC,EAAK,CAACjC,EAAK,KAAMkC,CAAO,CAAC,EACzBD,EAAKjC,EAAK,WAAY,GAAG,CAC1B,EACD,GACR,EAGM,OAAQoC,IAAW,QAAU,GAAKA,EAAS,KAAOpC,EAAK,YACxD,CACF,EACD,mBAAoB,CAClB,MAAO,CAAC,CAAE,SAAAqC,EAAU,KAAAC,EAAM,aAAAC,EAAc,WAAAC,CAAY,IAClDH,EACA,KACAC,EACAH,EAAK,MAAOI,CAAY,EACxBJ,EAAK,IAAKF,EAAKO,EAAY,GAAG,CAAC,CAClC,EACD,aAAc,CACZ,MAAO,CAAC,CAAE,WAAAC,KAAiBC,EAAMD,CAAU,CAC5C,EACD,MAAO,CACL,MAAM,CAAE,MAAAE,EAAO,KAAAlE,EAAM,UAAW+C,EAAM,WAAAgB,EAAY,aAAAI,GAAgB,CAChE,MAAMR,EAASD,EAAK,GAAIQ,EAAO,IAAI,EAAIlE,EACvC,IAAIoE,EAAWT,EAASD,EAAK,IAAKF,EAAKT,EAAM,IAAI,EAAG,GAAG,EAEvD,OAAIqB,EAAS,OAASb,KACpBa,EAAWT,EAASD,EAAK;AAAA,EAAOlG,EAAOgG,EAAKT,EAAM;AAAA,CAAI,CAAC,EAAG;AAAA,EAAK,GAG1DS,EAAK,CAACY,EAAUZ,EAAKO,EAAY,GAAG,EAAGI,CAAY,EAAG,GAAG,CACjE,CACF,EACD,SAAU,CACR,MAAO,CAAC,CAAE,KAAAnE,EAAM,MAAA9D,CAAK,IAAO8D,EAAO,KAAO9D,CAC3C,EAED,eAAgB,CACd,MAAO,CAAC,CAAE,KAAA8D,EAAM,WAAA+D,CAAY,IAC1B,MAAQ/D,EAAO0D,EAAK,IAAKF,EAAKO,EAAY,GAAG,CAAC,CACjD,EACD,eAAgB,CACd,MAAO,CAAC,CAAE,cAAAM,EAAe,WAAAN,EAAY,aAAAI,CAAc,IACjDX,EACE,CACE,MACAE,EAAK,MAAOW,CAAa,EACzBb,EAAKO,EAAY,GAAG,EACpBI,CACD,EACD,GACD,CACJ,EACD,mBAAoB,CAClB,MAAO,CACL,CAAE,KAAAnE,EAAM,cAAAqE,EAAe,oBAAAC,EAAqB,WAAAP,EAAY,aAAAI,CAAc,IAGtE,YAAYnE,IAAO0D,EAAK,IAAKF,EAAKc,EAAqB,IAAI,EAAG,GAAG,QAC3DD,KAAiBX,EAAK,GAAIF,EAAKO,EAAY,GAAG,EAAG,GAAG,IAC1DI,CACH,EAED,SAAU,CACR,MAAO,CAAC,CAAE,MAAAjI,CAAK,IAAOA,CACvB,EACD,WAAY,CACV,MAAO,CAAC,CAAE,MAAAA,CAAK,IAAOA,CACvB,EACD,YAAa,CACX,MAAO,CAAC,CAAE,MAAAA,EAAO,MAAOqI,CAAe,IACrCA,EAAgBvG,EAAiB9B,CAAK,EAAIqE,EAAYrE,CAAK,CAC9D,EACD,aAAc,CACZ,MAAO,CAAC,CAAE,MAAAA,CAAK,IAAQA,EAAQ,OAAS,OACzC,EACD,UAAW,CACT,MAAO,IAAM,MACd,EACD,UAAW,CACT,MAAO,CAAC,CAAE,MAAAA,CAAK,IAAOA,CACvB,EACD,UAAW,CACT,MAAO,CAAC,CAAE,OAAAsI,KAAa,IAAMhB,EAAKgB,EAAQ,IAAI,EAAI,GACnD,EACD,YAAa,CACX,MAAO,CAAC,CAAE,OAAAC,KAAa,IAAMjB,EAAKiB,EAAQ,IAAI,EAAI,GACnD,EACD,YAAa,CACX,MAAO,CAAC,CAAE,KAAAzE,EAAM,MAAA9D,CAAK,IAAO8D,EAAO,KAAO9D,CAC3C,EAED,UAAW,CACT,MAAO,CAAC,CAAE,KAAA8D,EAAM,UAAW+C,CAAM,IAC/B,IAAM/C,EAAO0D,EAAK,IAAKF,EAAKT,EAAM,IAAI,EAAG,GAAG,CAC/C,EAED,UAAW,CACT,MAAO,CAAC,CAAE,KAAA/C,CAAI,IAAOA,CACtB,EACD,SAAU,CACR,MAAO,CAAC,CAAE,KAAA6D,CAAM,IAAK,IAAMA,EAAO,GACnC,EACD,YAAa,CACX,MAAO,CAAC,CAAE,KAAAA,CAAM,IAAKA,EAAO,GAC7B,EAED,iBAAkB,CAChB,MAAO,CAAC,CAAE,YAAAa,EAAa,WAAAX,EAAY,eAAAY,CAAgB,IACjDjB,EAAK,GAAIgB,EAAa;AAAA,CAAI,EAC1BlB,EAAK,CAAC,SAAUA,EAAKO,EAAY,GAAG,EAAGE,EAAMU,CAAc,CAAC,EAAG,GAAG,CACrE,EACD,wBAAyB,CACvB,MAAO,CAAC,CAAE,UAAAC,EAAW,KAAAf,CAAI,IAAOe,EAAY,KAAOf,CACpD,EACD,qBAAsB,CACpB,MAAO,CAAC,CAAE,YAAAa,EAAa,KAAA1E,EAAM,WAAA+D,CAAY,IACvCL,EAAK,GAAIgB,EAAa;AAAA,CAAI,EAC1BlB,EAAK,CAAC,SAAUxD,EAAMwD,EAAKO,EAAY,GAAG,CAAC,EAAG,GAAG,CACpD,EACD,qBAAsB,CACpB,MAAO,CAAC,CAAE,YAAAW,EAAa,KAAA1E,EAAM,WAAA6E,EAAY,WAAAd,EAAY,OAAAU,CAAQ,IAC3Df,EAAK,GAAIgB,EAAa;AAAA,CAAI,EAC1BlB,EACE,CACE,OACAxD,EACA0D,EAAK,cAAeF,EAAKqB,EAAY,KAAK,CAAC,EAC3CrB,EAAKO,EAAY,GAAG,EACpBE,EAAMQ,CAAM,CACb,EACD,GACD,CACJ,EACD,gBAAiB,CACf,MAAO,CAAC,CAAE,YAAAC,EAAa,KAAA1E,EAAM,UAAW+C,EAAM,KAAAc,EAAM,WAAAE,CAAY,IAC9DL,EAAK,GAAIgB,EAAa;AAAA,CAAI,EAC1B1E,GACC8E,EAAkB/B,CAAI,EACnBW,EAAK;AAAA,EAAOlG,EAAOgG,EAAKT,EAAM;AAAA,CAAI,CAAC,EAAG;AAAA,EAAK,EAC3CW,EAAK,IAAKF,EAAKT,EAAM,IAAI,EAAG,GAAG,GACnC,KACAc,EACAH,EAAK,IAAKF,EAAKO,EAAY,GAAG,CAAC,CAClC,EACD,qBAAsB,CACpB,MAAO,CAAC,CAAE,YAAAW,EAAa,KAAA1E,EAAM,KAAA6D,EAAM,aAAAC,EAAc,WAAAC,CAAY,IAC3DL,EAAK,GAAIgB,EAAa;AAAA,CAAI,EAC1BlB,EACE,CAACxD,EAAO,KAAO6D,EAAMH,EAAK,KAAMI,CAAY,EAAGN,EAAKO,EAAY,GAAG,CAAC,EACpE,GACD,CACJ,EACD,wBAAyB,CACvB,MAAO,CAAC,CAAE,YAAAW,EAAa,KAAA1E,EAAM,WAAA6E,EAAY,WAAAd,EAAY,OAAAU,CAAQ,IAC3Df,EAAK,GAAIgB,EAAa;AAAA,CAAI,EAC1BlB,EACE,CACE,YACAxD,EACA0D,EAAK,cAAeF,EAAKqB,EAAY,KAAK,CAAC,EAC3CrB,EAAKO,EAAY,GAAG,EACpBE,EAAMQ,CAAM,CACb,EACD,GACD,CACJ,EACD,oBAAqB,CACnB,MAAO,CAAC,CAAE,YAAAC,EAAa,KAAA1E,EAAM,WAAA+D,EAAY,MAAAgB,CAAO,IAC9CrB,EAAK,GAAIgB,EAAa;AAAA,CAAI,EAC1BlB,EACE,CAAC,QAASxD,EAAMwD,EAAKO,EAAY,GAAG,EAAGL,EAAK,KAAMF,EAAKuB,EAAO,KAAK,CAAC,CAAC,EACrE,GACD,CACJ,EACD,mBAAoB,CAClB,MAAO,CAAC,CAAE,YAAAL,EAAa,KAAA1E,EAAM,WAAA+D,EAAY,OAAAS,CAAQ,IAC/Cd,EAAK,GAAIgB,EAAa;AAAA,CAAI,EAC1BlB,EAAK,CAAC,OAAQxD,EAAMwD,EAAKO,EAAY,GAAG,EAAGE,EAAMO,CAAM,CAAC,EAAG,GAAG,CACjE,EACD,oBAAqB,CACnB,MAAO,CAAC,CAAE,YAAAE,EAAa,KAAA1E,EAAM,WAAA+D,CAAY,IACvCL,EAAK,GAAIgB,EAAa;AAAA,CAAI,EAAIlB,EAAK,CAACxD,EAAMwD,EAAKO,EAAY,GAAG,CAAC,EAAG,GAAG,CACxE,EACD,0BAA2B,CACzB,MAAO,CAAC,CAAE,YAAAW,EAAa,KAAA1E,EAAM,WAAA+D,EAAY,OAAAU,CAAQ,IAC/Cf,EAAK,GAAIgB,EAAa;AAAA,CAAI,EAC1BlB,EAAK,CAAC,QAASxD,EAAMwD,EAAKO,EAAY,GAAG,EAAGE,EAAMQ,CAAM,CAAC,EAAG,GAAG,CAClE,EACD,oBAAqB,CACnB,MAAO,CAAC,CAAE,YAAAC,EAAa,KAAA1E,EAAM,UAAW+C,EAAM,WAAAiC,EAAY,UAAAC,CAAW,IACnEvB,EAAK,GAAIgB,EAAa;AAAA,CAAI,EAC1B,cACA1E,GACC8E,EAAkB/B,CAAI,EACnBW,EAAK;AAAA,EAAOlG,EAAOgG,EAAKT,EAAM;AAAA,CAAI,CAAC,EAAG;AAAA,EAAK,EAC3CW,EAAK,IAAKF,EAAKT,EAAM,IAAI,EAAG,GAAG,IAClCiC,EAAa,cAAgB,IAC9B,OACAxB,EAAKyB,EAAW,KAAK,CACxB,EACD,gBAAiB,CACf,MAAO,CAAC,CAAE,WAAAlB,EAAY,eAAAY,CAAgB,IACpCnB,EACE,CAAC,gBAAiBA,EAAKO,EAAY,GAAG,EAAGE,EAAMU,CAAc,CAAC,EAC9D,GACD,CACJ,EACD,oBAAqB,CACnB,MAAO,CAAC,CAAE,KAAA3E,EAAM,WAAA+D,CAAY,IAC1BP,EAAK,CAAC,gBAAiBxD,EAAMwD,EAAKO,EAAY,GAAG,CAAC,EAAG,GAAG,CAC3D,EACD,oBAAqB,CACnB,MAAO,CAAC,CAAE,KAAA/D,EAAM,WAAA6E,EAAY,WAAAd,EAAY,OAAAU,CAAQ,IAC9CjB,EACE,CACE,cACAxD,EACA0D,EAAK,cAAeF,EAAKqB,EAAY,KAAK,CAAC,EAC3CrB,EAAKO,EAAY,GAAG,EACpBE,EAAMQ,CAAM,CACb,EACD,GACD,CACJ,EACD,uBAAwB,CACtB,MAAO,CAAC,CAAE,KAAAzE,EAAM,WAAA6E,EAAY,WAAAd,EAAY,OAAAU,CAAQ,IAC9CjB,EACE,CACE,mBACAxD,EACA0D,EAAK,cAAeF,EAAKqB,EAAY,KAAK,CAAC,EAC3CrB,EAAKO,EAAY,GAAG,EACpBE,EAAMQ,CAAM,CACb,EACD,GACD,CACJ,EACD,mBAAoB,CAClB,MAAO,CAAC,CAAE,KAAAzE,EAAM,WAAA+D,EAAY,MAAAgB,CAAO,IACjCvB,EACE,CACE,eACAxD,EACAwD,EAAKO,EAAY,GAAG,EACpBL,EAAK,KAAMF,EAAKuB,EAAO,KAAK,CAAC,CAC9B,EACD,GACD,CACJ,EACD,kBAAmB,CACjB,MAAO,CAAC,CAAE,KAAA/E,EAAM,WAAA+D,EAAY,OAAAS,CAAQ,IAClChB,EAAK,CAAC,cAAexD,EAAMwD,EAAKO,EAAY,GAAG,EAAGE,EAAMO,CAAM,CAAC,EAAG,GAAG,CACxE,EACD,yBAA0B,CACxB,MAAO,CAAC,CAAE,KAAAxE,EAAM,WAAA+D,EAAY,OAAAU,CAAQ,IAClCjB,EAAK,CAAC,eAAgBxD,EAAMwD,EAAKO,EAAY,GAAG,EAAGE,EAAMQ,CAAM,CAAC,EAAG,GAAG,CACzE,CACH,EAMA,SAASjB,EAAK0B,EAAYC,EAAY,GAAI,CACxC,IAAIC,EAEJ,OAAQA,EACNF,GAAe,KACX,OACAA,EAAW,OAAQG,GAAMA,CAAC,EAAE,KAAKF,CAAS,KAAO,MACrDC,IAA0B,OACxBA,EACA,EACN,CAKA,SAASnB,EAAMtE,EAAO,CACpB,OAAO+D,EAAK;AAAA,EAAOlG,EAAOgG,EAAK7D,EAAO;AAAA,CAAI,CAAC,EAAG;AAAA,EAAK,CACrD,CAKA,SAAS+D,EAAK5H,EAAOwJ,EAAavJ,EAAM,GAAI,CAC1C,OAAOuJ,GAAe,MAAQA,IAAgB,GAC1CxJ,EAAQwJ,EAAcvJ,EACtB,EACN,CAEA,SAASyB,EAAOE,EAAK,CACnB,OAAOgG,EAAK,KAAMhG,EAAI,QAAQ,MAAO;AAAA,GAAM,CAAC,CAC9C,CAEA,SAASoH,EAAkBI,EAAY,CACrC,IAAIK,EAKJ,OAAQA,EACNL,GAAe,KACX,OACAA,EAAW,KAAMxH,GAAQA,EAAI,SAAS;AAAA,CAAI,CAAC,KAAO,MACtD6H,IAAqB,OACnBA,EACA,EACN"}