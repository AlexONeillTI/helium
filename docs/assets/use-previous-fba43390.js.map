{"version":3,"file":"use-previous-fba43390.js","sources":["../../packages/hooks/src/use-media.ts","../../packages/hooks/src/use-screen-size.ts","../../packages/hooks/src/use-previous.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\n/**\n * Reference: https://usehooks.com/useMedia/\n * Tweaked to run on both server and client sides. Reference to window object\n * takes place only on client side\n *\n * @param queries       List of media queries to find matching for\n *                      (order the narrowest query on top)\n * @param values        List of values for matched query (matching order of queries)\n * @param defaultValue  Default value when no match is found\n * @returns             Matching value or default value\n */\nexport default function useMedia<T>(queries: string[], values: T[], defaultValue: T): T {\n  // State and setter for matched value\n  const [value, setValue] = useState(defaultValue);\n  useEffect(() => {\n    // Array containing a media query list for each query\n    const mediaQueryLists = queries.map(q => window.matchMedia(q));\n\n    // Function that gets value based on matching media query\n    const getValue = () => {\n      // Get index of first media query that matches\n      const index = mediaQueryLists.findIndex(mql => mql.matches);\n      // Return related value or defaultValue if none\n      return typeof values[index] !== 'undefined' ? values[index] : defaultValue;\n    };\n\n    setValue(getValue);\n\n    // Event listener callback\n    // Note: By defining getValue outside of useEffect we ensure that it has ...\n    // ... current values of hook args (as this hook callback is created once on mount).\n    const handler = () => setValue(getValue);\n\n    // Set a listener for each media query with above handler as callback.\n    mediaQueryLists.forEach(mql => mql.addEventListener('change', handler));\n\n    // Remove listeners on cleanup\n    return () => mediaQueryLists.forEach(mql => mql.removeEventListener('change', handler));\n  }, [queries, values]);\n  return value;\n}\n","import useMedia from './use-media';\n\nexport enum ScreenSize {\n  XXXLarge = 'xxxlarge',\n  XXLarge = 'xxlarge',\n  XLarge = 'xlarge',\n  Large = 'large',\n  Medium = 'medium',\n  Small = 'small'\n}\n\n// map screen size to media query (smallest range or largest screen on top)\ntype ScreenSizeToMediaQueryMap = { [key in ScreenSize]?: string };\nconst screenSizeToMediaQueryMap: ScreenSizeToMediaQueryMap = {\n  [ScreenSize.XXXLarge]: '(min-width: 160.063em)',\n  [ScreenSize.XXLarge]: '(min-width: 120.063em)',\n  [ScreenSize.XLarge]: '(min-width: 90.063em)',\n  [ScreenSize.Large]: '(min-width: 64.063em)',\n  [ScreenSize.Medium]: '(min-width: 48.063em)'\n};\n\nexport default function useScreenSize(): ScreenSize {\n  const queries = Object.values(screenSizeToMediaQueryMap);\n  const values = Object.keys(screenSizeToMediaQueryMap) as ScreenSize[];\n  const screenSize = useMedia<ScreenSize>(queries, values, ScreenSize.Small);\n  return screenSize;\n}\n","import { MutableRefObject, useEffect, useRef } from 'react';\n\n/**\n * Reference: https://usehooks.com/usePrevious/\n * @param value   Value\n * @returns       Previous value if applied\n */\nexport default function usePrevious<T>(value: T): T | undefined {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref: MutableRefObject<T | undefined> = useRef();\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n"],"names":["useMedia","queries","values","defaultValue","value","setValue","useState","useEffect","mediaQueryLists","q","getValue","index","mql","handler","ScreenSize","screenSizeToMediaQueryMap","useScreenSize","usePrevious","ref","useRef"],"mappings":"wCAawB,SAAAA,EAAYC,EAAmBC,EAAaC,EAAoB,CAEtF,KAAM,CAACC,EAAOC,CAAQ,EAAIC,WAASH,CAAY,EAC/CI,OAAAA,EAAAA,UAAU,IAAM,CAEd,MAAMC,EAAkBP,EAAQ,OAAS,OAAO,WAAWQ,CAAC,CAAC,EAGvDC,EAAW,IAAM,CAErB,MAAMC,EAAQH,EAAgB,UAAUI,GAAOA,EAAI,OAAO,EAE1D,OAAO,OAAOV,EAAOS,CAAK,EAAM,IAAcT,EAAOS,CAAK,EAAIR,CAAA,EAGhEE,EAASK,CAAQ,EAKX,MAAAG,EAAU,IAAMR,EAASK,CAAQ,EAGvC,OAAAF,EAAgB,QAAeI,GAAAA,EAAI,iBAAiB,SAAUC,CAAO,CAAC,EAG/D,IAAML,EAAgB,QAAQI,GAAOA,EAAI,oBAAoB,SAAUC,CAAO,CAAC,CAAA,EACrF,CAACZ,EAASC,CAAM,CAAC,EACbE,CACT,CCxCY,IAAAU,GAAAA,IACVA,EAAA,SAAW,WACXA,EAAA,QAAU,UACVA,EAAA,OAAS,SACTA,EAAA,MAAQ,QACRA,EAAA,OAAS,SACTA,EAAA,MAAQ,QANEA,IAAAA,GAAA,CAAA,CAAA,EAWZ,MAAMC,EAAuD,CAC1D,SAAsB,yBACtB,QAAqB,yBACrB,OAAoB,wBACpB,MAAmB,wBACnB,OAAoB,uBACvB,EAEA,SAAwBC,GAA4B,CAC5C,MAAAf,EAAU,OAAO,OAAOc,CAAyB,EACjDb,EAAS,OAAO,KAAKa,CAAyB,EAE7C,OADYf,EAAqBC,EAASC,EAAQ,OAAgB,CAE3E,CCnBA,SAAwBe,EAAeb,EAAyB,CAG9D,MAAMc,EAAuCC,EAAAA,SAE7CZ,OAAAA,EAAAA,UAAU,IAAM,CACdW,EAAI,QAAUd,CAAA,EACb,CAACA,CAAK,CAAC,EAEHc,EAAI,OACb"}